[
  {
    "ServiceName": "API Gateway",
    "AccessLevels": [
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "DELETE",
            "FullActionName": "apigateway::DELETE"
          },
          {
            "ActionName": "PATCH",
            "FullActionName": "apigateway::PATCH"
          },
          {
            "ActionName": "POST",
            "FullActionName": "apigateway::POST"
          },
          {
            "ActionName": "PUT",
            "FullActionName": "apigateway::PUT"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "GET",
            "FullActionName": "apigateway::GET"
          }
        ]
      },
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "SetWebACL",
            "FullActionName": "apigateway::SetWebACL"
          },
          {
            "ActionName": "UpdateRestApiPolicy",
            "FullActionName": "apigateway::UpdateRestApiPolicy"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Account",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "DisableRegion",
            "FullActionName": "account::DisableRegion"
          },
          {
            "ActionName": "EnableRegion",
            "FullActionName": "account::EnableRegion"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListRegions",
            "FullActionName": "account::ListRegions"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Alexa for Business",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "ApproveSkill",
            "FullActionName": "a4b::ApproveSkill"
          },
          {
            "ActionName": "AssociateContactWithAddressBook",
            "FullActionName": "a4b::AssociateContactWithAddressBook"
          },
          {
            "ActionName": "AssociateDeviceWithRoom",
            "FullActionName": "a4b::AssociateDeviceWithRoom"
          },
          {
            "ActionName": "AssociateSkillGroupWithRoom",
            "FullActionName": "a4b::AssociateSkillGroupWithRoom"
          },
          {
            "ActionName": "AssociateSkillWithSkillGroup",
            "FullActionName": "a4b::AssociateSkillWithSkillGroup"
          },
          {
            "ActionName": "AssociateSkillWithUsers",
            "FullActionName": "a4b::AssociateSkillWithUsers"
          },
          {
            "ActionName": "CreateAddressBook",
            "FullActionName": "a4b::CreateAddressBook"
          },
          {
            "ActionName": "CreateBusinessReportSchedule",
            "FullActionName": "a4b::CreateBusinessReportSchedule"
          },
          {
            "ActionName": "CreateConferenceProvider",
            "FullActionName": "a4b::CreateConferenceProvider"
          },
          {
            "ActionName": "CreateContact",
            "FullActionName": "a4b::CreateContact"
          },
          {
            "ActionName": "CreateProfile",
            "FullActionName": "a4b::CreateProfile"
          },
          {
            "ActionName": "CreateRoom",
            "FullActionName": "a4b::CreateRoom"
          },
          {
            "ActionName": "CreateSkillGroup",
            "FullActionName": "a4b::CreateSkillGroup"
          },
          {
            "ActionName": "CreateUser",
            "FullActionName": "a4b::CreateUser"
          },
          {
            "ActionName": "DeleteAddressBook",
            "FullActionName": "a4b::DeleteAddressBook"
          },
          {
            "ActionName": "DeleteBusinessReportSchedule",
            "FullActionName": "a4b::DeleteBusinessReportSchedule"
          },
          {
            "ActionName": "DeleteConferenceProvider",
            "FullActionName": "a4b::DeleteConferenceProvider"
          },
          {
            "ActionName": "DeleteContact",
            "FullActionName": "a4b::DeleteContact"
          },
          {
            "ActionName": "DeleteDevice",
            "FullActionName": "a4b::DeleteDevice"
          },
          {
            "ActionName": "DeleteProfile",
            "FullActionName": "a4b::DeleteProfile"
          },
          {
            "ActionName": "DeleteRoom",
            "FullActionName": "a4b::DeleteRoom"
          },
          {
            "ActionName": "DeleteRoomSkillParameter",
            "FullActionName": "a4b::DeleteRoomSkillParameter"
          },
          {
            "ActionName": "DeleteSkillAuthorization",
            "FullActionName": "a4b::DeleteSkillAuthorization"
          },
          {
            "ActionName": "DeleteSkillGroup",
            "FullActionName": "a4b::DeleteSkillGroup"
          },
          {
            "ActionName": "DeleteUser",
            "FullActionName": "a4b::DeleteUser"
          },
          {
            "ActionName": "DisassociateContactFromAddressBook",
            "FullActionName": "a4b::DisassociateContactFromAddressBook"
          },
          {
            "ActionName": "DisassociateDeviceFromRoom",
            "FullActionName": "a4b::DisassociateDeviceFromRoom"
          },
          {
            "ActionName": "DisassociateSkillFromSkillGroup",
            "FullActionName": "a4b::DisassociateSkillFromSkillGroup"
          },
          {
            "ActionName": "DisassociateSkillFromUsers",
            "FullActionName": "a4b::DisassociateSkillFromUsers"
          },
          {
            "ActionName": "DisassociateSkillGroupFromRoom",
            "FullActionName": "a4b::DisassociateSkillGroupFromRoom"
          },
          {
            "ActionName": "ForgetSmartHomeAppliances",
            "FullActionName": "a4b::ForgetSmartHomeAppliances"
          },
          {
            "ActionName": "PutConferencePreference",
            "FullActionName": "a4b::PutConferencePreference"
          },
          {
            "ActionName": "PutRoomSkillParameter",
            "FullActionName": "a4b::PutRoomSkillParameter"
          },
          {
            "ActionName": "PutSkillAuthorization",
            "FullActionName": "a4b::PutSkillAuthorization"
          },
          {
            "ActionName": "RegisterAVSDevice",
            "FullActionName": "a4b::RegisterAVSDevice"
          },
          {
            "ActionName": "RejectSkill",
            "FullActionName": "a4b::RejectSkill"
          },
          {
            "ActionName": "RevokeInvitation",
            "FullActionName": "a4b::RevokeInvitation"
          },
          {
            "ActionName": "SendInvitation",
            "FullActionName": "a4b::SendInvitation"
          },
          {
            "ActionName": "StartDeviceSync",
            "FullActionName": "a4b::StartDeviceSync"
          },
          {
            "ActionName": "UpdateAddressBook",
            "FullActionName": "a4b::UpdateAddressBook"
          },
          {
            "ActionName": "UpdateBusinessReportSchedule",
            "FullActionName": "a4b::UpdateBusinessReportSchedule"
          },
          {
            "ActionName": "UpdateConferenceProvider",
            "FullActionName": "a4b::UpdateConferenceProvider"
          },
          {
            "ActionName": "UpdateContact",
            "FullActionName": "a4b::UpdateContact"
          },
          {
            "ActionName": "UpdateDevice",
            "FullActionName": "a4b::UpdateDevice"
          },
          {
            "ActionName": "UpdateProfile",
            "FullActionName": "a4b::UpdateProfile"
          },
          {
            "ActionName": "UpdateRoom",
            "FullActionName": "a4b::UpdateRoom"
          },
          {
            "ActionName": "UpdateSkillGroup",
            "FullActionName": "a4b::UpdateSkillGroup"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "GetAddressBook",
            "FullActionName": "a4b::GetAddressBook"
          },
          {
            "ActionName": "GetConferencePreference",
            "FullActionName": "a4b::GetConferencePreference"
          },
          {
            "ActionName": "GetConferenceProvider",
            "FullActionName": "a4b::GetConferenceProvider"
          },
          {
            "ActionName": "GetContact",
            "FullActionName": "a4b::GetContact"
          },
          {
            "ActionName": "GetDevice",
            "FullActionName": "a4b::GetDevice"
          },
          {
            "ActionName": "GetProfile",
            "FullActionName": "a4b::GetProfile"
          },
          {
            "ActionName": "GetRoom",
            "FullActionName": "a4b::GetRoom"
          },
          {
            "ActionName": "GetRoomSkillParameter",
            "FullActionName": "a4b::GetRoomSkillParameter"
          },
          {
            "ActionName": "GetSkillGroup",
            "FullActionName": "a4b::GetSkillGroup"
          },
          {
            "ActionName": "ListTags",
            "FullActionName": "a4b::ListTags"
          },
          {
            "ActionName": "ResolveRoom",
            "FullActionName": "a4b::ResolveRoom"
          },
          {
            "ActionName": "StartSmartHomeApplianceDiscovery",
            "FullActionName": "a4b::StartSmartHomeApplianceDiscovery"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListBusinessReportSchedules",
            "FullActionName": "a4b::ListBusinessReportSchedules"
          },
          {
            "ActionName": "ListConferenceProviders",
            "FullActionName": "a4b::ListConferenceProviders"
          },
          {
            "ActionName": "ListDeviceEvents",
            "FullActionName": "a4b::ListDeviceEvents"
          },
          {
            "ActionName": "ListSkills",
            "FullActionName": "a4b::ListSkills"
          },
          {
            "ActionName": "ListSkillsStoreCategories",
            "FullActionName": "a4b::ListSkillsStoreCategories"
          },
          {
            "ActionName": "ListSkillsStoreSkillsByCategory",
            "FullActionName": "a4b::ListSkillsStoreSkillsByCategory"
          },
          {
            "ActionName": "ListSmartHomeAppliances",
            "FullActionName": "a4b::ListSmartHomeAppliances"
          },
          {
            "ActionName": "SearchAddressBooks",
            "FullActionName": "a4b::SearchAddressBooks"
          },
          {
            "ActionName": "SearchContacts",
            "FullActionName": "a4b::SearchContacts"
          },
          {
            "ActionName": "SearchDevices",
            "FullActionName": "a4b::SearchDevices"
          },
          {
            "ActionName": "SearchProfiles",
            "FullActionName": "a4b::SearchProfiles"
          },
          {
            "ActionName": "SearchRooms",
            "FullActionName": "a4b::SearchRooms"
          },
          {
            "ActionName": "SearchSkillGroups",
            "FullActionName": "a4b::SearchSkillGroups"
          },
          {
            "ActionName": "SearchUsers",
            "FullActionName": "a4b::SearchUsers"
          }
        ]
      },
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "TagResource",
            "FullActionName": "a4b::TagResource"
          },
          {
            "ActionName": "UntagResource",
            "FullActionName": "a4b::UntagResource"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Amplify",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "CreateApp",
            "FullActionName": "amplify::CreateApp"
          },
          {
            "ActionName": "CreateBranch",
            "FullActionName": "amplify::CreateBranch"
          },
          {
            "ActionName": "CreateDeployment",
            "FullActionName": "amplify::CreateDeployment"
          },
          {
            "ActionName": "CreateDomainAssociation",
            "FullActionName": "amplify::CreateDomainAssociation"
          },
          {
            "ActionName": "CreateWebHook",
            "FullActionName": "amplify::CreateWebHook"
          },
          {
            "ActionName": "DeleteApp",
            "FullActionName": "amplify::DeleteApp"
          },
          {
            "ActionName": "DeleteBranch",
            "FullActionName": "amplify::DeleteBranch"
          },
          {
            "ActionName": "DeleteDomainAssociation",
            "FullActionName": "amplify::DeleteDomainAssociation"
          },
          {
            "ActionName": "DeleteJob",
            "FullActionName": "amplify::DeleteJob"
          },
          {
            "ActionName": "DeleteWebHook",
            "FullActionName": "amplify::DeleteWebHook"
          },
          {
            "ActionName": "StartDeployment",
            "FullActionName": "amplify::StartDeployment"
          },
          {
            "ActionName": "StartJob",
            "FullActionName": "amplify::StartJob"
          },
          {
            "ActionName": "StopJob",
            "FullActionName": "amplify::StopJob"
          },
          {
            "ActionName": "UpdateApp",
            "FullActionName": "amplify::UpdateApp"
          },
          {
            "ActionName": "UpdateBranch",
            "FullActionName": "amplify::UpdateBranch"
          },
          {
            "ActionName": "UpdateDomainAssociation",
            "FullActionName": "amplify::UpdateDomainAssociation"
          },
          {
            "ActionName": "UpdateWebHook",
            "FullActionName": "amplify::UpdateWebHook"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "GetApp",
            "FullActionName": "amplify::GetApp"
          },
          {
            "ActionName": "GetBranch",
            "FullActionName": "amplify::GetBranch"
          },
          {
            "ActionName": "GetDomainAssociation",
            "FullActionName": "amplify::GetDomainAssociation"
          },
          {
            "ActionName": "GetJob",
            "FullActionName": "amplify::GetJob"
          },
          {
            "ActionName": "GetWebHook",
            "FullActionName": "amplify::GetWebHook"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListApps",
            "FullActionName": "amplify::ListApps"
          },
          {
            "ActionName": "ListBranches",
            "FullActionName": "amplify::ListBranches"
          },
          {
            "ActionName": "ListDomainAssociations",
            "FullActionName": "amplify::ListDomainAssociations"
          },
          {
            "ActionName": "ListJobs",
            "FullActionName": "amplify::ListJobs"
          },
          {
            "ActionName": "ListWebHooks",
            "FullActionName": "amplify::ListWebHooks"
          }
        ]
      },
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "TagResource",
            "FullActionName": "amplify::TagResource"
          },
          {
            "ActionName": "UntagResource",
            "FullActionName": "amplify::UntagResource"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "App Mesh",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "CreateMesh",
            "FullActionName": "appmesh::CreateMesh"
          },
          {
            "ActionName": "CreateRoute",
            "FullActionName": "appmesh::CreateRoute"
          },
          {
            "ActionName": "CreateVirtualNode",
            "FullActionName": "appmesh::CreateVirtualNode"
          },
          {
            "ActionName": "CreateVirtualRouter",
            "FullActionName": "appmesh::CreateVirtualRouter"
          },
          {
            "ActionName": "CreateVirtualService",
            "FullActionName": "appmesh::CreateVirtualService"
          },
          {
            "ActionName": "DeleteMesh",
            "FullActionName": "appmesh::DeleteMesh"
          },
          {
            "ActionName": "DeleteRoute",
            "FullActionName": "appmesh::DeleteRoute"
          },
          {
            "ActionName": "DeleteVirtualNode",
            "FullActionName": "appmesh::DeleteVirtualNode"
          },
          {
            "ActionName": "DeleteVirtualRouter",
            "FullActionName": "appmesh::DeleteVirtualRouter"
          },
          {
            "ActionName": "DeleteVirtualService",
            "FullActionName": "appmesh::DeleteVirtualService"
          },
          {
            "ActionName": "TagResource",
            "FullActionName": "appmesh::TagResource"
          },
          {
            "ActionName": "UntagResource",
            "FullActionName": "appmesh::UntagResource"
          },
          {
            "ActionName": "UpdateMesh",
            "FullActionName": "appmesh::UpdateMesh"
          },
          {
            "ActionName": "UpdateRoute",
            "FullActionName": "appmesh::UpdateRoute"
          },
          {
            "ActionName": "UpdateVirtualNode",
            "FullActionName": "appmesh::UpdateVirtualNode"
          },
          {
            "ActionName": "UpdateVirtualRouter",
            "FullActionName": "appmesh::UpdateVirtualRouter"
          },
          {
            "ActionName": "UpdateVirtualService",
            "FullActionName": "appmesh::UpdateVirtualService"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeMesh",
            "FullActionName": "appmesh::DescribeMesh"
          },
          {
            "ActionName": "DescribeRoute",
            "FullActionName": "appmesh::DescribeRoute"
          },
          {
            "ActionName": "DescribeVirtualNode",
            "FullActionName": "appmesh::DescribeVirtualNode"
          },
          {
            "ActionName": "DescribeVirtualRouter",
            "FullActionName": "appmesh::DescribeVirtualRouter"
          },
          {
            "ActionName": "DescribeVirtualService",
            "FullActionName": "appmesh::DescribeVirtualService"
          },
          {
            "ActionName": "StreamAggregatedResources",
            "FullActionName": "appmesh::StreamAggregatedResources"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListMeshes",
            "FullActionName": "appmesh::ListMeshes"
          },
          {
            "ActionName": "ListRoutes",
            "FullActionName": "appmesh::ListRoutes"
          },
          {
            "ActionName": "ListTagsForResource",
            "FullActionName": "appmesh::ListTagsForResource"
          },
          {
            "ActionName": "ListVirtualNodes",
            "FullActionName": "appmesh::ListVirtualNodes"
          },
          {
            "ActionName": "ListVirtualRouters",
            "FullActionName": "appmesh::ListVirtualRouters"
          },
          {
            "ActionName": "ListVirtualServices",
            "FullActionName": "appmesh::ListVirtualServices"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "AppStream 2.0",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "AssociateFleet",
            "FullActionName": "appstream::AssociateFleet"
          },
          {
            "ActionName": "BatchAssociateUserStack",
            "FullActionName": "appstream::BatchAssociateUserStack"
          },
          {
            "ActionName": "BatchDisassociateUserStack",
            "FullActionName": "appstream::BatchDisassociateUserStack"
          },
          {
            "ActionName": "CopyImage",
            "FullActionName": "appstream::CopyImage"
          },
          {
            "ActionName": "CreateDirectoryConfig",
            "FullActionName": "appstream::CreateDirectoryConfig"
          },
          {
            "ActionName": "CreateFleet",
            "FullActionName": "appstream::CreateFleet"
          },
          {
            "ActionName": "CreateImageBuilder",
            "FullActionName": "appstream::CreateImageBuilder"
          },
          {
            "ActionName": "CreateImageBuilderStreamingURL",
            "FullActionName": "appstream::CreateImageBuilderStreamingURL"
          },
          {
            "ActionName": "CreateStack",
            "FullActionName": "appstream::CreateStack"
          },
          {
            "ActionName": "CreateStreamingURL",
            "FullActionName": "appstream::CreateStreamingURL"
          },
          {
            "ActionName": "CreateUsageReportSubscription",
            "FullActionName": "appstream::CreateUsageReportSubscription"
          },
          {
            "ActionName": "CreateUser",
            "FullActionName": "appstream::CreateUser"
          },
          {
            "ActionName": "DeleteDirectoryConfig",
            "FullActionName": "appstream::DeleteDirectoryConfig"
          },
          {
            "ActionName": "DeleteFleet",
            "FullActionName": "appstream::DeleteFleet"
          },
          {
            "ActionName": "DeleteImage",
            "FullActionName": "appstream::DeleteImage"
          },
          {
            "ActionName": "DeleteImageBuilder",
            "FullActionName": "appstream::DeleteImageBuilder"
          },
          {
            "ActionName": "DeleteImagePermissions",
            "FullActionName": "appstream::DeleteImagePermissions"
          },
          {
            "ActionName": "DeleteStack",
            "FullActionName": "appstream::DeleteStack"
          },
          {
            "ActionName": "DeleteUsageReportSubscription",
            "FullActionName": "appstream::DeleteUsageReportSubscription"
          },
          {
            "ActionName": "DeleteUser",
            "FullActionName": "appstream::DeleteUser"
          },
          {
            "ActionName": "DisableUser",
            "FullActionName": "appstream::DisableUser"
          },
          {
            "ActionName": "DisassociateFleet",
            "FullActionName": "appstream::DisassociateFleet"
          },
          {
            "ActionName": "EnableUser",
            "FullActionName": "appstream::EnableUser"
          },
          {
            "ActionName": "ExpireSession",
            "FullActionName": "appstream::ExpireSession"
          },
          {
            "ActionName": "StartFleet",
            "FullActionName": "appstream::StartFleet"
          },
          {
            "ActionName": "StartImageBuilder",
            "FullActionName": "appstream::StartImageBuilder"
          },
          {
            "ActionName": "StopFleet",
            "FullActionName": "appstream::StopFleet"
          },
          {
            "ActionName": "StopImageBuilder",
            "FullActionName": "appstream::StopImageBuilder"
          },
          {
            "ActionName": "Stream",
            "FullActionName": "appstream::Stream"
          },
          {
            "ActionName": "UpdateDirectoryConfig",
            "FullActionName": "appstream::UpdateDirectoryConfig"
          },
          {
            "ActionName": "UpdateFleet",
            "FullActionName": "appstream::UpdateFleet"
          },
          {
            "ActionName": "UpdateImagePermissions",
            "FullActionName": "appstream::UpdateImagePermissions"
          },
          {
            "ActionName": "UpdateStack",
            "FullActionName": "appstream::UpdateStack"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeDirectoryConfigs",
            "FullActionName": "appstream::DescribeDirectoryConfigs"
          },
          {
            "ActionName": "DescribeFleets",
            "FullActionName": "appstream::DescribeFleets"
          },
          {
            "ActionName": "DescribeImageBuilders",
            "FullActionName": "appstream::DescribeImageBuilders"
          },
          {
            "ActionName": "DescribeImagePermissions",
            "FullActionName": "appstream::DescribeImagePermissions"
          },
          {
            "ActionName": "DescribeImages",
            "FullActionName": "appstream::DescribeImages"
          },
          {
            "ActionName": "DescribeSessions",
            "FullActionName": "appstream::DescribeSessions"
          },
          {
            "ActionName": "DescribeStacks",
            "FullActionName": "appstream::DescribeStacks"
          },
          {
            "ActionName": "DescribeUsageReportSubscriptions",
            "FullActionName": "appstream::DescribeUsageReportSubscriptions"
          },
          {
            "ActionName": "DescribeUserStackAssociations",
            "FullActionName": "appstream::DescribeUserStackAssociations"
          },
          {
            "ActionName": "DescribeUsers",
            "FullActionName": "appstream::DescribeUsers"
          },
          {
            "ActionName": "ListAssociatedFleets",
            "FullActionName": "appstream::ListAssociatedFleets"
          },
          {
            "ActionName": "ListAssociatedStacks",
            "FullActionName": "appstream::ListAssociatedStacks"
          },
          {
            "ActionName": "ListTagsForResource",
            "FullActionName": "appstream::ListTagsForResource"
          }
        ]
      },
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "TagResource",
            "FullActionName": "appstream::TagResource"
          },
          {
            "ActionName": "UntagResource",
            "FullActionName": "appstream::UntagResource"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "AppSync",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "CreateApiKey",
            "FullActionName": "appsync::CreateApiKey"
          },
          {
            "ActionName": "CreateDataSource",
            "FullActionName": "appsync::CreateDataSource"
          },
          {
            "ActionName": "CreateFunction",
            "FullActionName": "appsync::CreateFunction"
          },
          {
            "ActionName": "CreateResolver",
            "FullActionName": "appsync::CreateResolver"
          },
          {
            "ActionName": "CreateType",
            "FullActionName": "appsync::CreateType"
          },
          {
            "ActionName": "DeleteApiKey",
            "FullActionName": "appsync::DeleteApiKey"
          },
          {
            "ActionName": "DeleteDataSource",
            "FullActionName": "appsync::DeleteDataSource"
          },
          {
            "ActionName": "DeleteFunction",
            "FullActionName": "appsync::DeleteFunction"
          },
          {
            "ActionName": "DeleteGraphqlApi",
            "FullActionName": "appsync::DeleteGraphqlApi"
          },
          {
            "ActionName": "DeleteResolver",
            "FullActionName": "appsync::DeleteResolver"
          },
          {
            "ActionName": "DeleteType",
            "FullActionName": "appsync::DeleteType"
          },
          {
            "ActionName": "GraphQL",
            "FullActionName": "appsync::GraphQL"
          },
          {
            "ActionName": "StartSchemaCreation",
            "FullActionName": "appsync::StartSchemaCreation"
          },
          {
            "ActionName": "UpdateApiKey",
            "FullActionName": "appsync::UpdateApiKey"
          },
          {
            "ActionName": "UpdateDataSource",
            "FullActionName": "appsync::UpdateDataSource"
          },
          {
            "ActionName": "UpdateFunction",
            "FullActionName": "appsync::UpdateFunction"
          },
          {
            "ActionName": "UpdateGraphqlApi",
            "FullActionName": "appsync::UpdateGraphqlApi"
          },
          {
            "ActionName": "UpdateResolver",
            "FullActionName": "appsync::UpdateResolver"
          },
          {
            "ActionName": "UpdateType",
            "FullActionName": "appsync::UpdateType"
          }
        ]
      },
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "CreateGraphqlApi",
            "FullActionName": "appsync::CreateGraphqlApi"
          },
          {
            "ActionName": "TagResource",
            "FullActionName": "appsync::TagResource"
          },
          {
            "ActionName": "UntagResource",
            "FullActionName": "appsync::UntagResource"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "GetDataSource",
            "FullActionName": "appsync::GetDataSource"
          },
          {
            "ActionName": "GetFunction",
            "FullActionName": "appsync::GetFunction"
          },
          {
            "ActionName": "GetGraphqlApi",
            "FullActionName": "appsync::GetGraphqlApi"
          },
          {
            "ActionName": "GetIntrospectionSchema",
            "FullActionName": "appsync::GetIntrospectionSchema"
          },
          {
            "ActionName": "GetResolver",
            "FullActionName": "appsync::GetResolver"
          },
          {
            "ActionName": "GetSchemaCreationStatus",
            "FullActionName": "appsync::GetSchemaCreationStatus"
          },
          {
            "ActionName": "GetType",
            "FullActionName": "appsync::GetType"
          },
          {
            "ActionName": "ListTagsForResource",
            "FullActionName": "appsync::ListTagsForResource"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListApiKeys",
            "FullActionName": "appsync::ListApiKeys"
          },
          {
            "ActionName": "ListDataSources",
            "FullActionName": "appsync::ListDataSources"
          },
          {
            "ActionName": "ListFunctions",
            "FullActionName": "appsync::ListFunctions"
          },
          {
            "ActionName": "ListGraphqlApis",
            "FullActionName": "appsync::ListGraphqlApis"
          },
          {
            "ActionName": "ListResolvers",
            "FullActionName": "appsync::ListResolvers"
          },
          {
            "ActionName": "ListResolversByFunction",
            "FullActionName": "appsync::ListResolversByFunction"
          },
          {
            "ActionName": "ListTypes",
            "FullActionName": "appsync::ListTypes"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Application Auto Scaling",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "DeleteScalingPolicy",
            "FullActionName": "application-autoscaling::DeleteScalingPolicy"
          },
          {
            "ActionName": "DeleteScheduledAction",
            "FullActionName": "application-autoscaling::DeleteScheduledAction"
          },
          {
            "ActionName": "DeregisterScalableTarget",
            "FullActionName": "application-autoscaling::DeregisterScalableTarget"
          },
          {
            "ActionName": "PutScalingPolicy",
            "FullActionName": "application-autoscaling::PutScalingPolicy"
          },
          {
            "ActionName": "PutScheduledAction",
            "FullActionName": "application-autoscaling::PutScheduledAction"
          },
          {
            "ActionName": "RegisterScalableTarget",
            "FullActionName": "application-autoscaling::RegisterScalableTarget"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeScalableTargets",
            "FullActionName": "application-autoscaling::DescribeScalableTargets"
          },
          {
            "ActionName": "DescribeScalingActivities",
            "FullActionName": "application-autoscaling::DescribeScalingActivities"
          },
          {
            "ActionName": "DescribeScalingPolicies",
            "FullActionName": "application-autoscaling::DescribeScalingPolicies"
          },
          {
            "ActionName": "DescribeScheduledActions",
            "FullActionName": "application-autoscaling::DescribeScheduledActions"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Application Discovery",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "AssociateConfigurationItemsToApplication",
            "FullActionName": "discovery::AssociateConfigurationItemsToApplication"
          },
          {
            "ActionName": "BatchDeleteImportData",
            "FullActionName": "discovery::BatchDeleteImportData"
          },
          {
            "ActionName": "CreateApplication",
            "FullActionName": "discovery::CreateApplication"
          },
          {
            "ActionName": "DeleteApplications",
            "FullActionName": "discovery::DeleteApplications"
          },
          {
            "ActionName": "DisassociateConfigurationItemsFromApplication",
            "FullActionName": "discovery::DisassociateConfigurationItemsFromApplication"
          },
          {
            "ActionName": "ExportConfigurations",
            "FullActionName": "discovery::ExportConfigurations"
          },
          {
            "ActionName": "StartContinuousExport",
            "FullActionName": "discovery::StartContinuousExport"
          },
          {
            "ActionName": "StartDataCollectionByAgentIds",
            "FullActionName": "discovery::StartDataCollectionByAgentIds"
          },
          {
            "ActionName": "StartExportTask",
            "FullActionName": "discovery::StartExportTask"
          },
          {
            "ActionName": "StartImportTask",
            "FullActionName": "discovery::StartImportTask"
          },
          {
            "ActionName": "StopContinuousExport",
            "FullActionName": "discovery::StopContinuousExport"
          },
          {
            "ActionName": "StopDataCollectionByAgentIds",
            "FullActionName": "discovery::StopDataCollectionByAgentIds"
          },
          {
            "ActionName": "UpdateApplication",
            "FullActionName": "discovery::UpdateApplication"
          }
        ]
      },
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "CreateTags",
            "FullActionName": "discovery::CreateTags"
          },
          {
            "ActionName": "DeleteTags",
            "FullActionName": "discovery::DeleteTags"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeAgents",
            "FullActionName": "discovery::DescribeAgents"
          },
          {
            "ActionName": "DescribeConfigurations",
            "FullActionName": "discovery::DescribeConfigurations"
          },
          {
            "ActionName": "DescribeContinuousExports",
            "FullActionName": "discovery::DescribeContinuousExports"
          },
          {
            "ActionName": "DescribeExportConfigurations",
            "FullActionName": "discovery::DescribeExportConfigurations"
          },
          {
            "ActionName": "DescribeExportTasks",
            "FullActionName": "discovery::DescribeExportTasks"
          },
          {
            "ActionName": "DescribeTags",
            "FullActionName": "discovery::DescribeTags"
          },
          {
            "ActionName": "GetDiscoverySummary",
            "FullActionName": "discovery::GetDiscoverySummary"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "DescribeImportTasks",
            "FullActionName": "discovery::DescribeImportTasks"
          },
          {
            "ActionName": "ListConfigurations",
            "FullActionName": "discovery::ListConfigurations"
          },
          {
            "ActionName": "ListServerNeighbors",
            "FullActionName": "discovery::ListServerNeighbors"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Artifact",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "AcceptAgreement",
            "FullActionName": "artifact::AcceptAgreement"
          },
          {
            "ActionName": "TerminateAgreement",
            "FullActionName": "artifact::TerminateAgreement"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DownloadAgreement",
            "FullActionName": "artifact::DownloadAgreement"
          },
          {
            "ActionName": "Get",
            "FullActionName": "artifact::Get"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Athena",
    "AccessLevels": [
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "BatchGetNamedQuery",
            "FullActionName": "athena::BatchGetNamedQuery"
          },
          {
            "ActionName": "BatchGetQueryExecution",
            "FullActionName": "athena::BatchGetQueryExecution"
          },
          {
            "ActionName": "GetCatalogs",
            "FullActionName": "athena::GetCatalogs"
          },
          {
            "ActionName": "GetExecutionEngine",
            "FullActionName": "athena::GetExecutionEngine"
          },
          {
            "ActionName": "GetExecutionEngines",
            "FullActionName": "athena::GetExecutionEngines"
          },
          {
            "ActionName": "GetNamedQuery",
            "FullActionName": "athena::GetNamedQuery"
          },
          {
            "ActionName": "GetNamespace",
            "FullActionName": "athena::GetNamespace"
          },
          {
            "ActionName": "GetNamespaces",
            "FullActionName": "athena::GetNamespaces"
          },
          {
            "ActionName": "GetQueryExecution",
            "FullActionName": "athena::GetQueryExecution"
          },
          {
            "ActionName": "GetQueryExecutions",
            "FullActionName": "athena::GetQueryExecutions"
          },
          {
            "ActionName": "GetQueryResults",
            "FullActionName": "athena::GetQueryResults"
          },
          {
            "ActionName": "GetQueryResultsStream",
            "FullActionName": "athena::GetQueryResultsStream"
          },
          {
            "ActionName": "GetTable",
            "FullActionName": "athena::GetTable"
          },
          {
            "ActionName": "GetTables",
            "FullActionName": "athena::GetTables"
          },
          {
            "ActionName": "GetWorkGroup",
            "FullActionName": "athena::GetWorkGroup"
          },
          {
            "ActionName": "ListTagsForResource",
            "FullActionName": "athena::ListTagsForResource"
          }
        ]
      },
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "CancelQueryExecution",
            "FullActionName": "athena::CancelQueryExecution"
          },
          {
            "ActionName": "CreateNamedQuery",
            "FullActionName": "athena::CreateNamedQuery"
          },
          {
            "ActionName": "DeleteNamedQuery",
            "FullActionName": "athena::DeleteNamedQuery"
          },
          {
            "ActionName": "DeleteWorkGroup",
            "FullActionName": "athena::DeleteWorkGroup"
          },
          {
            "ActionName": "RunQuery",
            "FullActionName": "athena::RunQuery"
          },
          {
            "ActionName": "StartQueryExecution",
            "FullActionName": "athena::StartQueryExecution"
          },
          {
            "ActionName": "StopQueryExecution",
            "FullActionName": "athena::StopQueryExecution"
          },
          {
            "ActionName": "UpdateWorkGroup",
            "FullActionName": "athena::UpdateWorkGroup"
          }
        ]
      },
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "CreateWorkGroup",
            "FullActionName": "athena::CreateWorkGroup"
          },
          {
            "ActionName": "TagResource",
            "FullActionName": "athena::TagResource"
          },
          {
            "ActionName": "UntagResource",
            "FullActionName": "athena::UntagResource"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListNamedQueries",
            "FullActionName": "athena::ListNamedQueries"
          },
          {
            "ActionName": "ListQueryExecutions",
            "FullActionName": "athena::ListQueryExecutions"
          },
          {
            "ActionName": "ListWorkGroups",
            "FullActionName": "athena::ListWorkGroups"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Auto Scaling",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "CreateScalingPlan",
            "FullActionName": "autoscaling-plans::CreateScalingPlan"
          },
          {
            "ActionName": "DeleteScalingPlan",
            "FullActionName": "autoscaling-plans::DeleteScalingPlan"
          },
          {
            "ActionName": "UpdateScalingPlan",
            "FullActionName": "autoscaling-plans::UpdateScalingPlan"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeScalingPlanResources",
            "FullActionName": "autoscaling-plans::DescribeScalingPlanResources"
          },
          {
            "ActionName": "DescribeScalingPlans",
            "FullActionName": "autoscaling-plans::DescribeScalingPlans"
          },
          {
            "ActionName": "GetScalingPlanResourceForecastData",
            "FullActionName": "autoscaling-plans::GetScalingPlanResourceForecastData"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Backup",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "CreateBackupPlan",
            "FullActionName": "backup::CreateBackupPlan"
          },
          {
            "ActionName": "CreateBackupSelection",
            "FullActionName": "backup::CreateBackupSelection"
          },
          {
            "ActionName": "CreateBackupVault",
            "FullActionName": "backup::CreateBackupVault"
          },
          {
            "ActionName": "DeleteBackupPlan",
            "FullActionName": "backup::DeleteBackupPlan"
          },
          {
            "ActionName": "DeleteBackupSelection",
            "FullActionName": "backup::DeleteBackupSelection"
          },
          {
            "ActionName": "DeleteBackupVault",
            "FullActionName": "backup::DeleteBackupVault"
          },
          {
            "ActionName": "DeleteBackupVaultAccessPolicy",
            "FullActionName": "backup::DeleteBackupVaultAccessPolicy"
          },
          {
            "ActionName": "DeleteBackupVaultNotifications",
            "FullActionName": "backup::DeleteBackupVaultNotifications"
          },
          {
            "ActionName": "DeleteRecoveryPoint",
            "FullActionName": "backup::DeleteRecoveryPoint"
          },
          {
            "ActionName": "PutBackupVaultAccessPolicy",
            "FullActionName": "backup::PutBackupVaultAccessPolicy"
          },
          {
            "ActionName": "PutBackupVaultNotifications",
            "FullActionName": "backup::PutBackupVaultNotifications"
          },
          {
            "ActionName": "StartBackupJob",
            "FullActionName": "backup::StartBackupJob"
          },
          {
            "ActionName": "StartRestoreJob",
            "FullActionName": "backup::StartRestoreJob"
          },
          {
            "ActionName": "StopBackupJob",
            "FullActionName": "backup::StopBackupJob"
          },
          {
            "ActionName": "TagResource",
            "FullActionName": "backup::TagResource"
          },
          {
            "ActionName": "UntagResource",
            "FullActionName": "backup::UntagResource"
          },
          {
            "ActionName": "UpdateBackupPlan",
            "FullActionName": "backup::UpdateBackupPlan"
          },
          {
            "ActionName": "UpdateRecoveryPointLifecycle",
            "FullActionName": "backup::UpdateRecoveryPointLifecycle"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "DescribeBackupJob",
            "FullActionName": "backup::DescribeBackupJob"
          },
          {
            "ActionName": "ListBackupJobs",
            "FullActionName": "backup::ListBackupJobs"
          },
          {
            "ActionName": "ListBackupPlanTemplates",
            "FullActionName": "backup::ListBackupPlanTemplates"
          },
          {
            "ActionName": "ListBackupPlanVersions",
            "FullActionName": "backup::ListBackupPlanVersions"
          },
          {
            "ActionName": "ListBackupPlans",
            "FullActionName": "backup::ListBackupPlans"
          },
          {
            "ActionName": "ListBackupSelections",
            "FullActionName": "backup::ListBackupSelections"
          },
          {
            "ActionName": "ListBackupVaults",
            "FullActionName": "backup::ListBackupVaults"
          },
          {
            "ActionName": "ListProtectedResources",
            "FullActionName": "backup::ListProtectedResources"
          },
          {
            "ActionName": "ListRecoveryPointsByBackupVault",
            "FullActionName": "backup::ListRecoveryPointsByBackupVault"
          },
          {
            "ActionName": "ListRecoveryPointsByResource",
            "FullActionName": "backup::ListRecoveryPointsByResource"
          },
          {
            "ActionName": "ListRestoreJobs",
            "FullActionName": "backup::ListRestoreJobs"
          },
          {
            "ActionName": "ListTags",
            "FullActionName": "backup::ListTags"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeBackupVault",
            "FullActionName": "backup::DescribeBackupVault"
          },
          {
            "ActionName": "DescribeProtectedResource",
            "FullActionName": "backup::DescribeProtectedResource"
          },
          {
            "ActionName": "DescribeRecoveryPoint",
            "FullActionName": "backup::DescribeRecoveryPoint"
          },
          {
            "ActionName": "DescribeRestoreJob",
            "FullActionName": "backup::DescribeRestoreJob"
          },
          {
            "ActionName": "ExportBackupPlanTemplate",
            "FullActionName": "backup::ExportBackupPlanTemplate"
          },
          {
            "ActionName": "GetBackupPlan",
            "FullActionName": "backup::GetBackupPlan"
          },
          {
            "ActionName": "GetBackupPlanFromJSON",
            "FullActionName": "backup::GetBackupPlanFromJSON"
          },
          {
            "ActionName": "GetBackupPlanFromTemplate",
            "FullActionName": "backup::GetBackupPlanFromTemplate"
          },
          {
            "ActionName": "GetBackupSelection",
            "FullActionName": "backup::GetBackupSelection"
          },
          {
            "ActionName": "GetBackupVaultAccessPolicy",
            "FullActionName": "backup::GetBackupVaultAccessPolicy"
          },
          {
            "ActionName": "GetBackupVaultNotifications",
            "FullActionName": "backup::GetBackupVaultNotifications"
          },
          {
            "ActionName": "GetRecoveryPointRestoreMetadata",
            "FullActionName": "backup::GetRecoveryPointRestoreMetadata"
          },
          {
            "ActionName": "GetSupportedResourceTypes",
            "FullActionName": "backup::GetSupportedResourceTypes"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Backup Storage",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "Mount",
            "FullActionName": "backup-storage::Mount"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Batch",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "CancelJob",
            "FullActionName": "batch::CancelJob"
          },
          {
            "ActionName": "CreateComputeEnvironment",
            "FullActionName": "batch::CreateComputeEnvironment"
          },
          {
            "ActionName": "CreateJobQueue",
            "FullActionName": "batch::CreateJobQueue"
          },
          {
            "ActionName": "DeleteComputeEnvironment",
            "FullActionName": "batch::DeleteComputeEnvironment"
          },
          {
            "ActionName": "DeleteJobQueue",
            "FullActionName": "batch::DeleteJobQueue"
          },
          {
            "ActionName": "DeregisterJobDefinition",
            "FullActionName": "batch::DeregisterJobDefinition"
          },
          {
            "ActionName": "RegisterJobDefinition",
            "FullActionName": "batch::RegisterJobDefinition"
          },
          {
            "ActionName": "SubmitJob",
            "FullActionName": "batch::SubmitJob"
          },
          {
            "ActionName": "TerminateJob",
            "FullActionName": "batch::TerminateJob"
          },
          {
            "ActionName": "UpdateComputeEnvironment",
            "FullActionName": "batch::UpdateComputeEnvironment"
          },
          {
            "ActionName": "UpdateJobQueue",
            "FullActionName": "batch::UpdateJobQueue"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeComputeEnvironments",
            "FullActionName": "batch::DescribeComputeEnvironments"
          },
          {
            "ActionName": "DescribeJobDefinitions",
            "FullActionName": "batch::DescribeJobDefinitions"
          },
          {
            "ActionName": "DescribeJobQueues",
            "FullActionName": "batch::DescribeJobQueues"
          },
          {
            "ActionName": "DescribeJobs",
            "FullActionName": "batch::DescribeJobs"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListJobs",
            "FullActionName": "batch::ListJobs"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Billing",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "ModifyAccount",
            "FullActionName": "aws-portal::ModifyAccount"
          },
          {
            "ActionName": "ModifyBilling",
            "FullActionName": "aws-portal::ModifyBilling"
          },
          {
            "ActionName": "ModifyPaymentMethods",
            "FullActionName": "aws-portal::ModifyPaymentMethods"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "ViewAccount",
            "FullActionName": "aws-portal::ViewAccount"
          },
          {
            "ActionName": "ViewBilling",
            "FullActionName": "aws-portal::ViewBilling"
          },
          {
            "ActionName": "ViewPaymentMethods",
            "FullActionName": "aws-portal::ViewPaymentMethods"
          },
          {
            "ActionName": "ViewUsage",
            "FullActionName": "aws-portal::ViewUsage"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Budget",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "ModifyBudget",
            "FullActionName": "budgets::ModifyBudget"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "ViewBudget",
            "FullActionName": "budgets::ViewBudget"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Certificate Manager",
    "AccessLevels": [
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "AddTagsToCertificate",
            "FullActionName": "acm::AddTagsToCertificate"
          },
          {
            "ActionName": "RemoveTagsFromCertificate",
            "FullActionName": "acm::RemoveTagsFromCertificate"
          }
        ]
      },
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "DeleteCertificate",
            "FullActionName": "acm::DeleteCertificate"
          },
          {
            "ActionName": "ImportCertificate",
            "FullActionName": "acm::ImportCertificate"
          },
          {
            "ActionName": "RenewCertificate",
            "FullActionName": "acm::RenewCertificate"
          },
          {
            "ActionName": "RequestCertificate",
            "FullActionName": "acm::RequestCertificate"
          },
          {
            "ActionName": "ResendValidationEmail",
            "FullActionName": "acm::ResendValidationEmail"
          },
          {
            "ActionName": "UpdateCertificateOptions",
            "FullActionName": "acm::UpdateCertificateOptions"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeCertificate",
            "FullActionName": "acm::DescribeCertificate"
          },
          {
            "ActionName": "ExportCertificate",
            "FullActionName": "acm::ExportCertificate"
          },
          {
            "ActionName": "GetCertificate",
            "FullActionName": "acm::GetCertificate"
          },
          {
            "ActionName": "ListTagsForCertificate",
            "FullActionName": "acm::ListTagsForCertificate"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListCertificates",
            "FullActionName": "acm::ListCertificates"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Certificate Manager Private Certificate Authority",
    "AccessLevels": [
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "CreateCertificateAuthority",
            "FullActionName": "acm-pca::CreateCertificateAuthority"
          },
          {
            "ActionName": "TagCertificateAuthority",
            "FullActionName": "acm-pca::TagCertificateAuthority"
          },
          {
            "ActionName": "UntagCertificateAuthority",
            "FullActionName": "acm-pca::UntagCertificateAuthority"
          }
        ]
      },
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "CreateCertificateAuthorityAuditReport",
            "FullActionName": "acm-pca::CreateCertificateAuthorityAuditReport"
          },
          {
            "ActionName": "DeleteCertificateAuthority",
            "FullActionName": "acm-pca::DeleteCertificateAuthority"
          },
          {
            "ActionName": "ImportCertificateAuthorityCertificate",
            "FullActionName": "acm-pca::ImportCertificateAuthorityCertificate"
          },
          {
            "ActionName": "IssueCertificate",
            "FullActionName": "acm-pca::IssueCertificate"
          },
          {
            "ActionName": "RestoreCertificateAuthority",
            "FullActionName": "acm-pca::RestoreCertificateAuthority"
          },
          {
            "ActionName": "RevokeCertificate",
            "FullActionName": "acm-pca::RevokeCertificate"
          },
          {
            "ActionName": "UpdateCertificateAuthority",
            "FullActionName": "acm-pca::UpdateCertificateAuthority"
          }
        ]
      },
      {
        "AccessLevel": "Permissions",
        "Actions": [
          {
            "ActionName": "CreatePermission",
            "FullActionName": "acm-pca::CreatePermission"
          },
          {
            "ActionName": "DeletePermission",
            "FullActionName": "acm-pca::DeletePermission"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeCertificateAuthority",
            "FullActionName": "acm-pca::DescribeCertificateAuthority"
          },
          {
            "ActionName": "DescribeCertificateAuthorityAuditReport",
            "FullActionName": "acm-pca::DescribeCertificateAuthorityAuditReport"
          },
          {
            "ActionName": "GetCertificate",
            "FullActionName": "acm-pca::GetCertificate"
          },
          {
            "ActionName": "GetCertificateAuthorityCertificate",
            "FullActionName": "acm-pca::GetCertificateAuthorityCertificate"
          },
          {
            "ActionName": "GetCertificateAuthorityCsr",
            "FullActionName": "acm-pca::GetCertificateAuthorityCsr"
          },
          {
            "ActionName": "ListPermissions",
            "FullActionName": "acm-pca::ListPermissions"
          },
          {
            "ActionName": "ListTags",
            "FullActionName": "acm-pca::ListTags"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListCertificateAuthorities",
            "FullActionName": "acm-pca::ListCertificateAuthorities"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Chatbot",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "CreateChimeWebhookConfiguration",
            "FullActionName": "chatbot::CreateChimeWebhookConfiguration"
          },
          {
            "ActionName": "CreateSlackChannelConfiguration",
            "FullActionName": "chatbot::CreateSlackChannelConfiguration"
          },
          {
            "ActionName": "DeleteChimeWebhookConfiguration",
            "FullActionName": "chatbot::DeleteChimeWebhookConfiguration"
          },
          {
            "ActionName": "DeleteSlackChannelConfiguration",
            "FullActionName": "chatbot::DeleteSlackChannelConfiguration"
          },
          {
            "ActionName": "RedeemSlackOauthCode",
            "FullActionName": "chatbot::RedeemSlackOauthCode"
          },
          {
            "ActionName": "UpdateChimeWebhookConfiguration",
            "FullActionName": "chatbot::UpdateChimeWebhookConfiguration"
          },
          {
            "ActionName": "UpdateSlackChannelConfiguration",
            "FullActionName": "chatbot::UpdateSlackChannelConfiguration"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeChimeWebhookConfigurations",
            "FullActionName": "chatbot::DescribeChimeWebhookConfigurations"
          },
          {
            "ActionName": "DescribeSlackChannelConfigurations",
            "FullActionName": "chatbot::DescribeSlackChannelConfigurations"
          },
          {
            "ActionName": "DescribeSlackChannels",
            "FullActionName": "chatbot::DescribeSlackChannels"
          },
          {
            "ActionName": "DescribeSlackWorkspaces",
            "FullActionName": "chatbot::DescribeSlackWorkspaces"
          },
          {
            "ActionName": "GetSlackOauthParameters",
            "FullActionName": "chatbot::GetSlackOauthParameters"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Chime",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "AcceptDelegate",
            "FullActionName": "chime::AcceptDelegate"
          },
          {
            "ActionName": "ActivateUsers",
            "FullActionName": "chime::ActivateUsers"
          },
          {
            "ActionName": "AddDomain",
            "FullActionName": "chime::AddDomain"
          },
          {
            "ActionName": "AddOrUpdateGroups",
            "FullActionName": "chime::AddOrUpdateGroups"
          },
          {
            "ActionName": "AssociatePhoneNumberWithUser",
            "FullActionName": "chime::AssociatePhoneNumberWithUser"
          },
          {
            "ActionName": "AssociatePhoneNumbersWithVoiceConnector",
            "FullActionName": "chime::AssociatePhoneNumbersWithVoiceConnector"
          },
          {
            "ActionName": "AuthorizeDirectory",
            "FullActionName": "chime::AuthorizeDirectory"
          },
          {
            "ActionName": "BatchDeletePhoneNumber",
            "FullActionName": "chime::BatchDeletePhoneNumber"
          },
          {
            "ActionName": "BatchSuspendUser",
            "FullActionName": "chime::BatchSuspendUser"
          },
          {
            "ActionName": "BatchUnsuspendUser",
            "FullActionName": "chime::BatchUnsuspendUser"
          },
          {
            "ActionName": "BatchUpdatePhoneNumber",
            "FullActionName": "chime::BatchUpdatePhoneNumber"
          },
          {
            "ActionName": "BatchUpdateUser",
            "FullActionName": "chime::BatchUpdateUser"
          },
          {
            "ActionName": "ConnectDirectory",
            "FullActionName": "chime::ConnectDirectory"
          },
          {
            "ActionName": "CreateAccount",
            "FullActionName": "chime::CreateAccount"
          },
          {
            "ActionName": "CreateApiKey",
            "FullActionName": "chime::CreateApiKey"
          },
          {
            "ActionName": "CreateBot",
            "FullActionName": "chime::CreateBot"
          },
          {
            "ActionName": "CreateBotMembership",
            "FullActionName": "chime::CreateBotMembership"
          },
          {
            "ActionName": "CreateCDRBucket",
            "FullActionName": "chime::CreateCDRBucket"
          },
          {
            "ActionName": "CreatePhoneNumberOrder",
            "FullActionName": "chime::CreatePhoneNumberOrder"
          },
          {
            "ActionName": "CreateVoiceConnector",
            "FullActionName": "chime::CreateVoiceConnector"
          },
          {
            "ActionName": "DeleteAccount",
            "FullActionName": "chime::DeleteAccount"
          },
          {
            "ActionName": "DeleteAccountOpenIdConfig",
            "FullActionName": "chime::DeleteAccountOpenIdConfig"
          },
          {
            "ActionName": "DeleteApiKey",
            "FullActionName": "chime::DeleteApiKey"
          },
          {
            "ActionName": "DeleteCDRBucket",
            "FullActionName": "chime::DeleteCDRBucket"
          },
          {
            "ActionName": "DeleteDelegate",
            "FullActionName": "chime::DeleteDelegate"
          },
          {
            "ActionName": "DeleteDomain",
            "FullActionName": "chime::DeleteDomain"
          },
          {
            "ActionName": "DeleteEventsConfiguration",
            "FullActionName": "chime::DeleteEventsConfiguration"
          },
          {
            "ActionName": "DeleteGroups",
            "FullActionName": "chime::DeleteGroups"
          },
          {
            "ActionName": "DeletePhoneNumber",
            "FullActionName": "chime::DeletePhoneNumber"
          },
          {
            "ActionName": "DeleteVoiceConnector",
            "FullActionName": "chime::DeleteVoiceConnector"
          },
          {
            "ActionName": "DeleteVoiceConnectorOrigination",
            "FullActionName": "chime::DeleteVoiceConnectorOrigination"
          },
          {
            "ActionName": "DeleteVoiceConnectorTermination",
            "FullActionName": "chime::DeleteVoiceConnectorTermination"
          },
          {
            "ActionName": "DeleteVoiceConnectorTerminationCredentials",
            "FullActionName": "chime::DeleteVoiceConnectorTerminationCredentials"
          },
          {
            "ActionName": "DisassociatePhoneNumberFromUser",
            "FullActionName": "chime::DisassociatePhoneNumberFromUser"
          },
          {
            "ActionName": "DisassociatePhoneNumbersFromVoiceConnector",
            "FullActionName": "chime::DisassociatePhoneNumbersFromVoiceConnector"
          },
          {
            "ActionName": "DisconnectDirectory",
            "FullActionName": "chime::DisconnectDirectory"
          },
          {
            "ActionName": "InviteDelegate",
            "FullActionName": "chime::InviteDelegate"
          },
          {
            "ActionName": "InviteUsers",
            "FullActionName": "chime::InviteUsers"
          },
          {
            "ActionName": "LogoutUser",
            "FullActionName": "chime::LogoutUser"
          },
          {
            "ActionName": "PutEventsConfiguration",
            "FullActionName": "chime::PutEventsConfiguration"
          },
          {
            "ActionName": "PutVoiceConnectorOrigination",
            "FullActionName": "chime::PutVoiceConnectorOrigination"
          },
          {
            "ActionName": "PutVoiceConnectorTermination",
            "FullActionName": "chime::PutVoiceConnectorTermination"
          },
          {
            "ActionName": "PutVoiceConnectorTerminationCredentials",
            "FullActionName": "chime::PutVoiceConnectorTerminationCredentials"
          },
          {
            "ActionName": "RegenerateSecurityToken",
            "FullActionName": "chime::RegenerateSecurityToken"
          },
          {
            "ActionName": "RenameAccount",
            "FullActionName": "chime::RenameAccount"
          },
          {
            "ActionName": "RenewDelegate",
            "FullActionName": "chime::RenewDelegate"
          },
          {
            "ActionName": "ResetAccountResource",
            "FullActionName": "chime::ResetAccountResource"
          },
          {
            "ActionName": "ResetPersonalPIN",
            "FullActionName": "chime::ResetPersonalPIN"
          },
          {
            "ActionName": "RestorePhoneNumber",
            "FullActionName": "chime::RestorePhoneNumber"
          },
          {
            "ActionName": "StartDataExport",
            "FullActionName": "chime::StartDataExport"
          },
          {
            "ActionName": "SubmitSupportRequest",
            "FullActionName": "chime::SubmitSupportRequest"
          },
          {
            "ActionName": "SuspendUsers",
            "FullActionName": "chime::SuspendUsers"
          },
          {
            "ActionName": "UnauthorizeDirectory",
            "FullActionName": "chime::UnauthorizeDirectory"
          },
          {
            "ActionName": "UpdateAccount",
            "FullActionName": "chime::UpdateAccount"
          },
          {
            "ActionName": "UpdateAccountOpenIdConfig",
            "FullActionName": "chime::UpdateAccountOpenIdConfig"
          },
          {
            "ActionName": "UpdateAccountResource",
            "FullActionName": "chime::UpdateAccountResource"
          },
          {
            "ActionName": "UpdateAccountSettings",
            "FullActionName": "chime::UpdateAccountSettings"
          },
          {
            "ActionName": "UpdateBot",
            "FullActionName": "chime::UpdateBot"
          },
          {
            "ActionName": "UpdateCDRSettings",
            "FullActionName": "chime::UpdateCDRSettings"
          },
          {
            "ActionName": "UpdateGlobalSettings",
            "FullActionName": "chime::UpdateGlobalSettings"
          },
          {
            "ActionName": "UpdatePhoneNumber",
            "FullActionName": "chime::UpdatePhoneNumber"
          },
          {
            "ActionName": "UpdateSupportedLicenses",
            "FullActionName": "chime::UpdateSupportedLicenses"
          },
          {
            "ActionName": "UpdateUser",
            "FullActionName": "chime::UpdateUser"
          },
          {
            "ActionName": "UpdateUserLicenses",
            "FullActionName": "chime::UpdateUserLicenses"
          },
          {
            "ActionName": "UpdateUserSettings",
            "FullActionName": "chime::UpdateUserSettings"
          },
          {
            "ActionName": "UpdateVoiceConnector",
            "FullActionName": "chime::UpdateVoiceConnector"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "GetAccount",
            "FullActionName": "chime::GetAccount"
          },
          {
            "ActionName": "GetAccountResource",
            "FullActionName": "chime::GetAccountResource"
          },
          {
            "ActionName": "GetAccountSettings",
            "FullActionName": "chime::GetAccountSettings"
          },
          {
            "ActionName": "GetAccountWithOpenIdConfig",
            "FullActionName": "chime::GetAccountWithOpenIdConfig"
          },
          {
            "ActionName": "GetBot",
            "FullActionName": "chime::GetBot"
          },
          {
            "ActionName": "GetCDRBucket",
            "FullActionName": "chime::GetCDRBucket"
          },
          {
            "ActionName": "GetDomain",
            "FullActionName": "chime::GetDomain"
          },
          {
            "ActionName": "GetEventsConfiguration",
            "FullActionName": "chime::GetEventsConfiguration"
          },
          {
            "ActionName": "GetGlobalSettings",
            "FullActionName": "chime::GetGlobalSettings"
          },
          {
            "ActionName": "GetMeetingDetail",
            "FullActionName": "chime::GetMeetingDetail"
          },
          {
            "ActionName": "GetPhoneNumber",
            "FullActionName": "chime::GetPhoneNumber"
          },
          {
            "ActionName": "GetPhoneNumberOrder",
            "FullActionName": "chime::GetPhoneNumberOrder"
          },
          {
            "ActionName": "GetTelephonyLimits",
            "FullActionName": "chime::GetTelephonyLimits"
          },
          {
            "ActionName": "GetUser",
            "FullActionName": "chime::GetUser"
          },
          {
            "ActionName": "GetUserActivityReportData",
            "FullActionName": "chime::GetUserActivityReportData"
          },
          {
            "ActionName": "GetUserByEmail",
            "FullActionName": "chime::GetUserByEmail"
          },
          {
            "ActionName": "GetUserSettings",
            "FullActionName": "chime::GetUserSettings"
          },
          {
            "ActionName": "GetVoiceConnector",
            "FullActionName": "chime::GetVoiceConnector"
          },
          {
            "ActionName": "GetVoiceConnectorOrigination",
            "FullActionName": "chime::GetVoiceConnectorOrigination"
          },
          {
            "ActionName": "GetVoiceConnectorTermination",
            "FullActionName": "chime::GetVoiceConnectorTermination"
          },
          {
            "ActionName": "GetVoiceConnectorTerminationHealth",
            "FullActionName": "chime::GetVoiceConnectorTerminationHealth"
          },
          {
            "ActionName": "ListBots",
            "FullActionName": "chime::ListBots"
          },
          {
            "ActionName": "ListCallingRegions",
            "FullActionName": "chime::ListCallingRegions"
          },
          {
            "ActionName": "ListPhoneNumberOrders",
            "FullActionName": "chime::ListPhoneNumberOrders"
          },
          {
            "ActionName": "ListPhoneNumbers",
            "FullActionName": "chime::ListPhoneNumbers"
          },
          {
            "ActionName": "ListVoiceConnectorTerminationCredentials",
            "FullActionName": "chime::ListVoiceConnectorTerminationCredentials"
          },
          {
            "ActionName": "ListVoiceConnectors",
            "FullActionName": "chime::ListVoiceConnectors"
          },
          {
            "ActionName": "SearchAvailablePhoneNumbers",
            "FullActionName": "chime::SearchAvailablePhoneNumbers"
          },
          {
            "ActionName": "ValidateAccountResource",
            "FullActionName": "chime::ValidateAccountResource"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListAccountUsageReportData",
            "FullActionName": "chime::ListAccountUsageReportData"
          },
          {
            "ActionName": "ListAccounts",
            "FullActionName": "chime::ListAccounts"
          },
          {
            "ActionName": "ListApiKeys",
            "FullActionName": "chime::ListApiKeys"
          },
          {
            "ActionName": "ListCDRBucket",
            "FullActionName": "chime::ListCDRBucket"
          },
          {
            "ActionName": "ListDelegates",
            "FullActionName": "chime::ListDelegates"
          },
          {
            "ActionName": "ListDirectories",
            "FullActionName": "chime::ListDirectories"
          },
          {
            "ActionName": "ListDomains",
            "FullActionName": "chime::ListDomains"
          },
          {
            "ActionName": "ListGroups",
            "FullActionName": "chime::ListGroups"
          },
          {
            "ActionName": "ListMeetingEvents",
            "FullActionName": "chime::ListMeetingEvents"
          },
          {
            "ActionName": "ListMeetingsReportData",
            "FullActionName": "chime::ListMeetingsReportData"
          },
          {
            "ActionName": "ListUsers",
            "FullActionName": "chime::ListUsers"
          },
          {
            "ActionName": "RetrieveDataExports",
            "FullActionName": "chime::RetrieveDataExports"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Cloud Directory",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "AddFacetToObject",
            "FullActionName": "clouddirectory::AddFacetToObject"
          },
          {
            "ActionName": "ApplySchema",
            "FullActionName": "clouddirectory::ApplySchema"
          },
          {
            "ActionName": "AttachObject",
            "FullActionName": "clouddirectory::AttachObject"
          },
          {
            "ActionName": "AttachPolicy",
            "FullActionName": "clouddirectory::AttachPolicy"
          },
          {
            "ActionName": "AttachToIndex",
            "FullActionName": "clouddirectory::AttachToIndex"
          },
          {
            "ActionName": "AttachTypedLink",
            "FullActionName": "clouddirectory::AttachTypedLink"
          },
          {
            "ActionName": "BatchWrite",
            "FullActionName": "clouddirectory::BatchWrite"
          },
          {
            "ActionName": "CreateDirectory",
            "FullActionName": "clouddirectory::CreateDirectory"
          },
          {
            "ActionName": "CreateFacet",
            "FullActionName": "clouddirectory::CreateFacet"
          },
          {
            "ActionName": "CreateIndex",
            "FullActionName": "clouddirectory::CreateIndex"
          },
          {
            "ActionName": "CreateObject",
            "FullActionName": "clouddirectory::CreateObject"
          },
          {
            "ActionName": "CreateSchema",
            "FullActionName": "clouddirectory::CreateSchema"
          },
          {
            "ActionName": "CreateTypedLinkFacet",
            "FullActionName": "clouddirectory::CreateTypedLinkFacet"
          },
          {
            "ActionName": "DeleteDirectory",
            "FullActionName": "clouddirectory::DeleteDirectory"
          },
          {
            "ActionName": "DeleteFacet",
            "FullActionName": "clouddirectory::DeleteFacet"
          },
          {
            "ActionName": "DeleteObject",
            "FullActionName": "clouddirectory::DeleteObject"
          },
          {
            "ActionName": "DeleteSchema",
            "FullActionName": "clouddirectory::DeleteSchema"
          },
          {
            "ActionName": "DeleteTypedLinkFacet",
            "FullActionName": "clouddirectory::DeleteTypedLinkFacet"
          },
          {
            "ActionName": "DetachFromIndex",
            "FullActionName": "clouddirectory::DetachFromIndex"
          },
          {
            "ActionName": "DetachObject",
            "FullActionName": "clouddirectory::DetachObject"
          },
          {
            "ActionName": "DetachPolicy",
            "FullActionName": "clouddirectory::DetachPolicy"
          },
          {
            "ActionName": "DetachTypedLink",
            "FullActionName": "clouddirectory::DetachTypedLink"
          },
          {
            "ActionName": "DisableDirectory",
            "FullActionName": "clouddirectory::DisableDirectory"
          },
          {
            "ActionName": "EnableDirectory",
            "FullActionName": "clouddirectory::EnableDirectory"
          },
          {
            "ActionName": "PublishSchema",
            "FullActionName": "clouddirectory::PublishSchema"
          },
          {
            "ActionName": "PutSchemaFromJson",
            "FullActionName": "clouddirectory::PutSchemaFromJson"
          },
          {
            "ActionName": "RemoveFacetFromObject",
            "FullActionName": "clouddirectory::RemoveFacetFromObject"
          },
          {
            "ActionName": "UpdateFacet",
            "FullActionName": "clouddirectory::UpdateFacet"
          },
          {
            "ActionName": "UpdateLinkAttributes",
            "FullActionName": "clouddirectory::UpdateLinkAttributes"
          },
          {
            "ActionName": "UpdateObjectAttributes",
            "FullActionName": "clouddirectory::UpdateObjectAttributes"
          },
          {
            "ActionName": "UpdateSchema",
            "FullActionName": "clouddirectory::UpdateSchema"
          },
          {
            "ActionName": "UpdateTypedLinkFacet",
            "FullActionName": "clouddirectory::UpdateTypedLinkFacet"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "BatchRead",
            "FullActionName": "clouddirectory::BatchRead"
          },
          {
            "ActionName": "GetDirectory",
            "FullActionName": "clouddirectory::GetDirectory"
          },
          {
            "ActionName": "GetFacet",
            "FullActionName": "clouddirectory::GetFacet"
          },
          {
            "ActionName": "GetLinkAttributes",
            "FullActionName": "clouddirectory::GetLinkAttributes"
          },
          {
            "ActionName": "GetObjectAttributes",
            "FullActionName": "clouddirectory::GetObjectAttributes"
          },
          {
            "ActionName": "GetObjectInformation",
            "FullActionName": "clouddirectory::GetObjectInformation"
          },
          {
            "ActionName": "GetSchemaAsJson",
            "FullActionName": "clouddirectory::GetSchemaAsJson"
          },
          {
            "ActionName": "GetTypedLinkFacetInformation",
            "FullActionName": "clouddirectory::GetTypedLinkFacetInformation"
          },
          {
            "ActionName": "ListAttachedIndices",
            "FullActionName": "clouddirectory::ListAttachedIndices"
          },
          {
            "ActionName": "ListFacetAttributes",
            "FullActionName": "clouddirectory::ListFacetAttributes"
          },
          {
            "ActionName": "ListFacetNames",
            "FullActionName": "clouddirectory::ListFacetNames"
          },
          {
            "ActionName": "ListIncomingTypedLinks",
            "FullActionName": "clouddirectory::ListIncomingTypedLinks"
          },
          {
            "ActionName": "ListIndex",
            "FullActionName": "clouddirectory::ListIndex"
          },
          {
            "ActionName": "ListObjectAttributes",
            "FullActionName": "clouddirectory::ListObjectAttributes"
          },
          {
            "ActionName": "ListObjectChildren",
            "FullActionName": "clouddirectory::ListObjectChildren"
          },
          {
            "ActionName": "ListObjectParentPaths",
            "FullActionName": "clouddirectory::ListObjectParentPaths"
          },
          {
            "ActionName": "ListObjectParents",
            "FullActionName": "clouddirectory::ListObjectParents"
          },
          {
            "ActionName": "ListObjectPolicies",
            "FullActionName": "clouddirectory::ListObjectPolicies"
          },
          {
            "ActionName": "ListOutgoingTypedLinks",
            "FullActionName": "clouddirectory::ListOutgoingTypedLinks"
          },
          {
            "ActionName": "ListPolicyAttachments",
            "FullActionName": "clouddirectory::ListPolicyAttachments"
          },
          {
            "ActionName": "ListTagsForResource",
            "FullActionName": "clouddirectory::ListTagsForResource"
          },
          {
            "ActionName": "ListTypedLinkFacetAttributes",
            "FullActionName": "clouddirectory::ListTypedLinkFacetAttributes"
          },
          {
            "ActionName": "ListTypedLinkFacetNames",
            "FullActionName": "clouddirectory::ListTypedLinkFacetNames"
          },
          {
            "ActionName": "LookupPolicy",
            "FullActionName": "clouddirectory::LookupPolicy"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListAppliedSchemaArns",
            "FullActionName": "clouddirectory::ListAppliedSchemaArns"
          },
          {
            "ActionName": "ListDevelopmentSchemaArns",
            "FullActionName": "clouddirectory::ListDevelopmentSchemaArns"
          },
          {
            "ActionName": "ListDirectories",
            "FullActionName": "clouddirectory::ListDirectories"
          },
          {
            "ActionName": "ListPublishedSchemaArns",
            "FullActionName": "clouddirectory::ListPublishedSchemaArns"
          }
        ]
      },
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "TagResource",
            "FullActionName": "clouddirectory::TagResource"
          },
          {
            "ActionName": "UntagResource",
            "FullActionName": "clouddirectory::UntagResource"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Cloud Map",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "CreateHttpNamespace",
            "FullActionName": "servicediscovery::CreateHttpNamespace"
          },
          {
            "ActionName": "CreatePrivateDnsNamespace",
            "FullActionName": "servicediscovery::CreatePrivateDnsNamespace"
          },
          {
            "ActionName": "CreatePublicDnsNamespace",
            "FullActionName": "servicediscovery::CreatePublicDnsNamespace"
          },
          {
            "ActionName": "CreateService",
            "FullActionName": "servicediscovery::CreateService"
          },
          {
            "ActionName": "DeleteNamespace",
            "FullActionName": "servicediscovery::DeleteNamespace"
          },
          {
            "ActionName": "DeleteService",
            "FullActionName": "servicediscovery::DeleteService"
          },
          {
            "ActionName": "DeregisterInstance",
            "FullActionName": "servicediscovery::DeregisterInstance"
          },
          {
            "ActionName": "RegisterInstance",
            "FullActionName": "servicediscovery::RegisterInstance"
          },
          {
            "ActionName": "UpdateInstanceCustomHealthStatus",
            "FullActionName": "servicediscovery::UpdateInstanceCustomHealthStatus"
          },
          {
            "ActionName": "UpdateService",
            "FullActionName": "servicediscovery::UpdateService"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DiscoverInstances",
            "FullActionName": "servicediscovery::DiscoverInstances"
          },
          {
            "ActionName": "GetInstance",
            "FullActionName": "servicediscovery::GetInstance"
          },
          {
            "ActionName": "GetInstancesHealthStatus",
            "FullActionName": "servicediscovery::GetInstancesHealthStatus"
          },
          {
            "ActionName": "GetNamespace",
            "FullActionName": "servicediscovery::GetNamespace"
          },
          {
            "ActionName": "GetOperation",
            "FullActionName": "servicediscovery::GetOperation"
          },
          {
            "ActionName": "GetService",
            "FullActionName": "servicediscovery::GetService"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListInstances",
            "FullActionName": "servicediscovery::ListInstances"
          },
          {
            "ActionName": "ListNamespaces",
            "FullActionName": "servicediscovery::ListNamespaces"
          },
          {
            "ActionName": "ListOperations",
            "FullActionName": "servicediscovery::ListOperations"
          },
          {
            "ActionName": "ListServices",
            "FullActionName": "servicediscovery::ListServices"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Cloud9",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "CreateEnvironmentEC2",
            "FullActionName": "cloud9::CreateEnvironmentEC2"
          },
          {
            "ActionName": "CreateEnvironmentMembership",
            "FullActionName": "cloud9::CreateEnvironmentMembership"
          },
          {
            "ActionName": "DeleteEnvironment",
            "FullActionName": "cloud9::DeleteEnvironment"
          },
          {
            "ActionName": "DeleteEnvironmentMembership",
            "FullActionName": "cloud9::DeleteEnvironmentMembership"
          },
          {
            "ActionName": "UpdateEnvironment",
            "FullActionName": "cloud9::UpdateEnvironment"
          },
          {
            "ActionName": "UpdateEnvironmentMembership",
            "FullActionName": "cloud9::UpdateEnvironmentMembership"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeEnvironmentMemberships",
            "FullActionName": "cloud9::DescribeEnvironmentMemberships"
          },
          {
            "ActionName": "DescribeEnvironmentStatus",
            "FullActionName": "cloud9::DescribeEnvironmentStatus"
          },
          {
            "ActionName": "DescribeEnvironments",
            "FullActionName": "cloud9::DescribeEnvironments"
          },
          {
            "ActionName": "ListEnvironments",
            "FullActionName": "cloud9::ListEnvironments"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "CloudFormation",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "CancelUpdateStack",
            "FullActionName": "cloudformation::CancelUpdateStack"
          },
          {
            "ActionName": "ContinueUpdateRollback",
            "FullActionName": "cloudformation::ContinueUpdateRollback"
          },
          {
            "ActionName": "CreateChangeSet",
            "FullActionName": "cloudformation::CreateChangeSet"
          },
          {
            "ActionName": "CreateStack",
            "FullActionName": "cloudformation::CreateStack"
          },
          {
            "ActionName": "CreateStackInstances",
            "FullActionName": "cloudformation::CreateStackInstances"
          },
          {
            "ActionName": "CreateStackSet",
            "FullActionName": "cloudformation::CreateStackSet"
          },
          {
            "ActionName": "CreateUploadBucket",
            "FullActionName": "cloudformation::CreateUploadBucket"
          },
          {
            "ActionName": "DeleteChangeSet",
            "FullActionName": "cloudformation::DeleteChangeSet"
          },
          {
            "ActionName": "DeleteStack",
            "FullActionName": "cloudformation::DeleteStack"
          },
          {
            "ActionName": "DeleteStackInstances",
            "FullActionName": "cloudformation::DeleteStackInstances"
          },
          {
            "ActionName": "DeleteStackSet",
            "FullActionName": "cloudformation::DeleteStackSet"
          },
          {
            "ActionName": "ExecuteChangeSet",
            "FullActionName": "cloudformation::ExecuteChangeSet"
          },
          {
            "ActionName": "SignalResource",
            "FullActionName": "cloudformation::SignalResource"
          },
          {
            "ActionName": "StopStackSetOperation",
            "FullActionName": "cloudformation::StopStackSetOperation"
          },
          {
            "ActionName": "UpdateStack",
            "FullActionName": "cloudformation::UpdateStack"
          },
          {
            "ActionName": "UpdateStackInstances",
            "FullActionName": "cloudformation::UpdateStackInstances"
          },
          {
            "ActionName": "UpdateStackSet",
            "FullActionName": "cloudformation::UpdateStackSet"
          },
          {
            "ActionName": "UpdateTerminationProtection",
            "FullActionName": "cloudformation::UpdateTerminationProtection"
          },
          {
            "ActionName": "ValidateTemplate",
            "FullActionName": "cloudformation::ValidateTemplate"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeAccountLimits",
            "FullActionName": "cloudformation::DescribeAccountLimits"
          },
          {
            "ActionName": "DescribeChangeSet",
            "FullActionName": "cloudformation::DescribeChangeSet"
          },
          {
            "ActionName": "DescribeStackDriftDetectionStatus",
            "FullActionName": "cloudformation::DescribeStackDriftDetectionStatus"
          },
          {
            "ActionName": "DescribeStackEvents",
            "FullActionName": "cloudformation::DescribeStackEvents"
          },
          {
            "ActionName": "DescribeStackInstance",
            "FullActionName": "cloudformation::DescribeStackInstance"
          },
          {
            "ActionName": "DescribeStackResource",
            "FullActionName": "cloudformation::DescribeStackResource"
          },
          {
            "ActionName": "DescribeStackResourceDrifts",
            "FullActionName": "cloudformation::DescribeStackResourceDrifts"
          },
          {
            "ActionName": "DescribeStackResources",
            "FullActionName": "cloudformation::DescribeStackResources"
          },
          {
            "ActionName": "DescribeStackSet",
            "FullActionName": "cloudformation::DescribeStackSet"
          },
          {
            "ActionName": "DescribeStackSetOperation",
            "FullActionName": "cloudformation::DescribeStackSetOperation"
          },
          {
            "ActionName": "DetectStackDrift",
            "FullActionName": "cloudformation::DetectStackDrift"
          },
          {
            "ActionName": "DetectStackResourceDrift",
            "FullActionName": "cloudformation::DetectStackResourceDrift"
          },
          {
            "ActionName": "EstimateTemplateCost",
            "FullActionName": "cloudformation::EstimateTemplateCost"
          },
          {
            "ActionName": "GetStackPolicy",
            "FullActionName": "cloudformation::GetStackPolicy"
          },
          {
            "ActionName": "GetTemplate",
            "FullActionName": "cloudformation::GetTemplate"
          },
          {
            "ActionName": "GetTemplateSummary",
            "FullActionName": "cloudformation::GetTemplateSummary"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "DescribeStacks",
            "FullActionName": "cloudformation::DescribeStacks"
          },
          {
            "ActionName": "ListChangeSets",
            "FullActionName": "cloudformation::ListChangeSets"
          },
          {
            "ActionName": "ListExports",
            "FullActionName": "cloudformation::ListExports"
          },
          {
            "ActionName": "ListImports",
            "FullActionName": "cloudformation::ListImports"
          },
          {
            "ActionName": "ListStackInstances",
            "FullActionName": "cloudformation::ListStackInstances"
          },
          {
            "ActionName": "ListStackResources",
            "FullActionName": "cloudformation::ListStackResources"
          },
          {
            "ActionName": "ListStackSetOperationResults",
            "FullActionName": "cloudformation::ListStackSetOperationResults"
          },
          {
            "ActionName": "ListStackSetOperations",
            "FullActionName": "cloudformation::ListStackSetOperations"
          },
          {
            "ActionName": "ListStackSets",
            "FullActionName": "cloudformation::ListStackSets"
          },
          {
            "ActionName": "ListStacks",
            "FullActionName": "cloudformation::ListStacks"
          }
        ]
      },
      {
        "AccessLevel": "Permissions",
        "Actions": [
          {
            "ActionName": "SetStackPolicy",
            "FullActionName": "cloudformation::SetStackPolicy"
          }
        ]
      },
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "TagResource",
            "FullActionName": "cloudformation::TagResource"
          },
          {
            "ActionName": "UntagResource",
            "FullActionName": "cloudformation::UntagResource"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "CloudFront",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "CreateCloudFrontOriginAccessIdentity",
            "FullActionName": "cloudfront::CreateCloudFrontOriginAccessIdentity"
          },
          {
            "ActionName": "CreateDistribution",
            "FullActionName": "cloudfront::CreateDistribution"
          },
          {
            "ActionName": "CreateInvalidation",
            "FullActionName": "cloudfront::CreateInvalidation"
          },
          {
            "ActionName": "CreateStreamingDistribution",
            "FullActionName": "cloudfront::CreateStreamingDistribution"
          },
          {
            "ActionName": "DeleteCloudFrontOriginAccessIdentity",
            "FullActionName": "cloudfront::DeleteCloudFrontOriginAccessIdentity"
          },
          {
            "ActionName": "DeleteDistribution",
            "FullActionName": "cloudfront::DeleteDistribution"
          },
          {
            "ActionName": "DeleteStreamingDistribution",
            "FullActionName": "cloudfront::DeleteStreamingDistribution"
          },
          {
            "ActionName": "UpdateCloudFrontOriginAccessIdentity",
            "FullActionName": "cloudfront::UpdateCloudFrontOriginAccessIdentity"
          },
          {
            "ActionName": "UpdateDistribution",
            "FullActionName": "cloudfront::UpdateDistribution"
          },
          {
            "ActionName": "UpdateStreamingDistribution",
            "FullActionName": "cloudfront::UpdateStreamingDistribution"
          }
        ]
      },
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "CreateDistributionWithTags",
            "FullActionName": "cloudfront::CreateDistributionWithTags"
          },
          {
            "ActionName": "CreateStreamingDistributionWithTags",
            "FullActionName": "cloudfront::CreateStreamingDistributionWithTags"
          },
          {
            "ActionName": "TagResource",
            "FullActionName": "cloudfront::TagResource"
          },
          {
            "ActionName": "UntagResource",
            "FullActionName": "cloudfront::UntagResource"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "GetCloudFrontOriginAccessIdentity",
            "FullActionName": "cloudfront::GetCloudFrontOriginAccessIdentity"
          },
          {
            "ActionName": "GetCloudFrontOriginAccessIdentityConfig",
            "FullActionName": "cloudfront::GetCloudFrontOriginAccessIdentityConfig"
          },
          {
            "ActionName": "GetDistribution",
            "FullActionName": "cloudfront::GetDistribution"
          },
          {
            "ActionName": "GetDistributionConfig",
            "FullActionName": "cloudfront::GetDistributionConfig"
          },
          {
            "ActionName": "GetInvalidation",
            "FullActionName": "cloudfront::GetInvalidation"
          },
          {
            "ActionName": "GetStreamingDistribution",
            "FullActionName": "cloudfront::GetStreamingDistribution"
          },
          {
            "ActionName": "GetStreamingDistributionConfig",
            "FullActionName": "cloudfront::GetStreamingDistributionConfig"
          },
          {
            "ActionName": "ListTagsForResource",
            "FullActionName": "cloudfront::ListTagsForResource"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListCloudFrontOriginAccessIdentities",
            "FullActionName": "cloudfront::ListCloudFrontOriginAccessIdentities"
          },
          {
            "ActionName": "ListDistributions",
            "FullActionName": "cloudfront::ListDistributions"
          },
          {
            "ActionName": "ListDistributionsByWebACLId",
            "FullActionName": "cloudfront::ListDistributionsByWebACLId"
          },
          {
            "ActionName": "ListInvalidations",
            "FullActionName": "cloudfront::ListInvalidations"
          },
          {
            "ActionName": "ListStreamingDistributions",
            "FullActionName": "cloudfront::ListStreamingDistributions"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "CloudHSM",
    "AccessLevels": [
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "AddTagsToResource",
            "FullActionName": "cloudhsm::AddTagsToResource"
          },
          {
            "ActionName": "RemoveTagsFromResource",
            "FullActionName": "cloudhsm::RemoveTagsFromResource"
          },
          {
            "ActionName": "TagResource",
            "FullActionName": "cloudhsm::TagResource"
          },
          {
            "ActionName": "UntagResource",
            "FullActionName": "cloudhsm::UntagResource"
          }
        ]
      },
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "CreateCluster",
            "FullActionName": "cloudhsm::CreateCluster"
          },
          {
            "ActionName": "CreateHapg",
            "FullActionName": "cloudhsm::CreateHapg"
          },
          {
            "ActionName": "CreateHsm",
            "FullActionName": "cloudhsm::CreateHsm"
          },
          {
            "ActionName": "CreateLunaClient",
            "FullActionName": "cloudhsm::CreateLunaClient"
          },
          {
            "ActionName": "DeleteCluster",
            "FullActionName": "cloudhsm::DeleteCluster"
          },
          {
            "ActionName": "DeleteHapg",
            "FullActionName": "cloudhsm::DeleteHapg"
          },
          {
            "ActionName": "DeleteHsm",
            "FullActionName": "cloudhsm::DeleteHsm"
          },
          {
            "ActionName": "DeleteLunaClient",
            "FullActionName": "cloudhsm::DeleteLunaClient"
          },
          {
            "ActionName": "InitializeCluster",
            "FullActionName": "cloudhsm::InitializeCluster"
          },
          {
            "ActionName": "ModifyHapg",
            "FullActionName": "cloudhsm::ModifyHapg"
          },
          {
            "ActionName": "ModifyHsm",
            "FullActionName": "cloudhsm::ModifyHsm"
          },
          {
            "ActionName": "ModifyLunaClient",
            "FullActionName": "cloudhsm::ModifyLunaClient"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeBackups",
            "FullActionName": "cloudhsm::DescribeBackups"
          },
          {
            "ActionName": "DescribeClusters",
            "FullActionName": "cloudhsm::DescribeClusters"
          },
          {
            "ActionName": "DescribeHapg",
            "FullActionName": "cloudhsm::DescribeHapg"
          },
          {
            "ActionName": "DescribeHsm",
            "FullActionName": "cloudhsm::DescribeHsm"
          },
          {
            "ActionName": "DescribeLunaClient",
            "FullActionName": "cloudhsm::DescribeLunaClient"
          },
          {
            "ActionName": "GetConfig",
            "FullActionName": "cloudhsm::GetConfig"
          },
          {
            "ActionName": "ListTags",
            "FullActionName": "cloudhsm::ListTags"
          },
          {
            "ActionName": "ListTagsForResource",
            "FullActionName": "cloudhsm::ListTagsForResource"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListAvailableZones",
            "FullActionName": "cloudhsm::ListAvailableZones"
          },
          {
            "ActionName": "ListHapgs",
            "FullActionName": "cloudhsm::ListHapgs"
          },
          {
            "ActionName": "ListHsms",
            "FullActionName": "cloudhsm::ListHsms"
          },
          {
            "ActionName": "ListLunaClients",
            "FullActionName": "cloudhsm::ListLunaClients"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "CloudSearch",
    "AccessLevels": [
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "AddTags",
            "FullActionName": "cloudsearch::AddTags"
          },
          {
            "ActionName": "RemoveTags",
            "FullActionName": "cloudsearch::RemoveTags"
          }
        ]
      },
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "BuildSuggesters",
            "FullActionName": "cloudsearch::BuildSuggesters"
          },
          {
            "ActionName": "CreateDomain",
            "FullActionName": "cloudsearch::CreateDomain"
          },
          {
            "ActionName": "DefineAnalysisScheme",
            "FullActionName": "cloudsearch::DefineAnalysisScheme"
          },
          {
            "ActionName": "DefineExpression",
            "FullActionName": "cloudsearch::DefineExpression"
          },
          {
            "ActionName": "DefineIndexField",
            "FullActionName": "cloudsearch::DefineIndexField"
          },
          {
            "ActionName": "DefineSuggester",
            "FullActionName": "cloudsearch::DefineSuggester"
          },
          {
            "ActionName": "DeleteAnalysisScheme",
            "FullActionName": "cloudsearch::DeleteAnalysisScheme"
          },
          {
            "ActionName": "DeleteDomain",
            "FullActionName": "cloudsearch::DeleteDomain"
          },
          {
            "ActionName": "DeleteExpression",
            "FullActionName": "cloudsearch::DeleteExpression"
          },
          {
            "ActionName": "DeleteIndexField",
            "FullActionName": "cloudsearch::DeleteIndexField"
          },
          {
            "ActionName": "DeleteSuggester",
            "FullActionName": "cloudsearch::DeleteSuggester"
          },
          {
            "ActionName": "IndexDocuments",
            "FullActionName": "cloudsearch::IndexDocuments"
          },
          {
            "ActionName": "UpdateAvailabilityOptions",
            "FullActionName": "cloudsearch::UpdateAvailabilityOptions"
          },
          {
            "ActionName": "UpdateScalingParameters",
            "FullActionName": "cloudsearch::UpdateScalingParameters"
          },
          {
            "ActionName": "document",
            "FullActionName": "cloudsearch::document"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeAnalysisSchemes",
            "FullActionName": "cloudsearch::DescribeAnalysisSchemes"
          },
          {
            "ActionName": "DescribeAvailabilityOptions",
            "FullActionName": "cloudsearch::DescribeAvailabilityOptions"
          },
          {
            "ActionName": "DescribeExpressions",
            "FullActionName": "cloudsearch::DescribeExpressions"
          },
          {
            "ActionName": "DescribeIndexFields",
            "FullActionName": "cloudsearch::DescribeIndexFields"
          },
          {
            "ActionName": "DescribeScalingParameters",
            "FullActionName": "cloudsearch::DescribeScalingParameters"
          },
          {
            "ActionName": "DescribeServiceAccessPolicies",
            "FullActionName": "cloudsearch::DescribeServiceAccessPolicies"
          },
          {
            "ActionName": "DescribeSuggesters",
            "FullActionName": "cloudsearch::DescribeSuggesters"
          },
          {
            "ActionName": "ListTags",
            "FullActionName": "cloudsearch::ListTags"
          },
          {
            "ActionName": "search",
            "FullActionName": "cloudsearch::search"
          },
          {
            "ActionName": "suggest",
            "FullActionName": "cloudsearch::suggest"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "DescribeDomains",
            "FullActionName": "cloudsearch::DescribeDomains"
          },
          {
            "ActionName": "ListDomainNames",
            "FullActionName": "cloudsearch::ListDomainNames"
          }
        ]
      },
      {
        "AccessLevel": "Permissions",
        "Actions": [
          {
            "ActionName": "UpdateServiceAccessPolicies",
            "FullActionName": "cloudsearch::UpdateServiceAccessPolicies"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "CloudTrail",
    "AccessLevels": [
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "AddTags",
            "FullActionName": "cloudtrail::AddTags"
          },
          {
            "ActionName": "RemoveTags",
            "FullActionName": "cloudtrail::RemoveTags"
          }
        ]
      },
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "CreateTrail",
            "FullActionName": "cloudtrail::CreateTrail"
          },
          {
            "ActionName": "DeleteTrail",
            "FullActionName": "cloudtrail::DeleteTrail"
          },
          {
            "ActionName": "PutEventSelectors",
            "FullActionName": "cloudtrail::PutEventSelectors"
          },
          {
            "ActionName": "StartLogging",
            "FullActionName": "cloudtrail::StartLogging"
          },
          {
            "ActionName": "StopLogging",
            "FullActionName": "cloudtrail::StopLogging"
          },
          {
            "ActionName": "UpdateTrail",
            "FullActionName": "cloudtrail::UpdateTrail"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "DescribeTrails",
            "FullActionName": "cloudtrail::DescribeTrails"
          },
          {
            "ActionName": "LookupEvents",
            "FullActionName": "cloudtrail::LookupEvents"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "GetEventSelectors",
            "FullActionName": "cloudtrail::GetEventSelectors"
          },
          {
            "ActionName": "GetTrailStatus",
            "FullActionName": "cloudtrail::GetTrailStatus"
          },
          {
            "ActionName": "ListPublicKeys",
            "FullActionName": "cloudtrail::ListPublicKeys"
          },
          {
            "ActionName": "ListTags",
            "FullActionName": "cloudtrail::ListTags"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "CloudWatch",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "DeleteAlarms",
            "FullActionName": "cloudwatch::DeleteAlarms"
          },
          {
            "ActionName": "DeleteAnomalyDetector",
            "FullActionName": "cloudwatch::DeleteAnomalyDetector"
          },
          {
            "ActionName": "DeleteDashboards",
            "FullActionName": "cloudwatch::DeleteDashboards"
          },
          {
            "ActionName": "DisableAlarmActions",
            "FullActionName": "cloudwatch::DisableAlarmActions"
          },
          {
            "ActionName": "EnableAlarmActions",
            "FullActionName": "cloudwatch::EnableAlarmActions"
          },
          {
            "ActionName": "PutAnomalyDetector",
            "FullActionName": "cloudwatch::PutAnomalyDetector"
          },
          {
            "ActionName": "PutDashboard",
            "FullActionName": "cloudwatch::PutDashboard"
          },
          {
            "ActionName": "PutMetricAlarm",
            "FullActionName": "cloudwatch::PutMetricAlarm"
          },
          {
            "ActionName": "PutMetricData",
            "FullActionName": "cloudwatch::PutMetricData"
          },
          {
            "ActionName": "SetAlarmState",
            "FullActionName": "cloudwatch::SetAlarmState"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeAlarmHistory",
            "FullActionName": "cloudwatch::DescribeAlarmHistory"
          },
          {
            "ActionName": "DescribeAlarms",
            "FullActionName": "cloudwatch::DescribeAlarms"
          },
          {
            "ActionName": "DescribeAlarmsForMetric",
            "FullActionName": "cloudwatch::DescribeAlarmsForMetric"
          },
          {
            "ActionName": "DescribeAnomalyDetectors",
            "FullActionName": "cloudwatch::DescribeAnomalyDetectors"
          },
          {
            "ActionName": "GetDashboard",
            "FullActionName": "cloudwatch::GetDashboard"
          },
          {
            "ActionName": "GetMetricData",
            "FullActionName": "cloudwatch::GetMetricData"
          },
          {
            "ActionName": "GetMetricStatistics",
            "FullActionName": "cloudwatch::GetMetricStatistics"
          },
          {
            "ActionName": "GetMetricWidgetImage",
            "FullActionName": "cloudwatch::GetMetricWidgetImage"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListDashboards",
            "FullActionName": "cloudwatch::ListDashboards"
          },
          {
            "ActionName": "ListMetrics",
            "FullActionName": "cloudwatch::ListMetrics"
          },
          {
            "ActionName": "ListTagsForResource",
            "FullActionName": "cloudwatch::ListTagsForResource"
          }
        ]
      },
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "TagResource",
            "FullActionName": "cloudwatch::TagResource"
          },
          {
            "ActionName": "UntagResource",
            "FullActionName": "cloudwatch::UntagResource"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "CloudWatch Application Insights",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "CreateApplication",
            "FullActionName": "applicationinsights::CreateApplication"
          },
          {
            "ActionName": "CreateComponent",
            "FullActionName": "applicationinsights::CreateComponent"
          },
          {
            "ActionName": "DeleteApplication",
            "FullActionName": "applicationinsights::DeleteApplication"
          },
          {
            "ActionName": "DeleteComponent",
            "FullActionName": "applicationinsights::DeleteComponent"
          },
          {
            "ActionName": "UpdateApplication",
            "FullActionName": "applicationinsights::UpdateApplication"
          },
          {
            "ActionName": "UpdateComponent",
            "FullActionName": "applicationinsights::UpdateComponent"
          },
          {
            "ActionName": "UpdateComponentConfiguration",
            "FullActionName": "applicationinsights::UpdateComponentConfiguration"
          },
          {
            "ActionName": "UpdateProblem",
            "FullActionName": "applicationinsights::UpdateProblem"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeApplication",
            "FullActionName": "applicationinsights::DescribeApplication"
          },
          {
            "ActionName": "DescribeComponent",
            "FullActionName": "applicationinsights::DescribeComponent"
          },
          {
            "ActionName": "DescribeComponentConfiguration",
            "FullActionName": "applicationinsights::DescribeComponentConfiguration"
          },
          {
            "ActionName": "DescribeComponentConfigurationRecommendation",
            "FullActionName": "applicationinsights::DescribeComponentConfigurationRecommendation"
          },
          {
            "ActionName": "DescribeObservation",
            "FullActionName": "applicationinsights::DescribeObservation"
          },
          {
            "ActionName": "DescribeProblem",
            "FullActionName": "applicationinsights::DescribeProblem"
          },
          {
            "ActionName": "DescribeProblemDashboard",
            "FullActionName": "applicationinsights::DescribeProblemDashboard"
          },
          {
            "ActionName": "DescribeProblemObservations",
            "FullActionName": "applicationinsights::DescribeProblemObservations"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListApplications",
            "FullActionName": "applicationinsights::ListApplications"
          },
          {
            "ActionName": "ListComponents",
            "FullActionName": "applicationinsights::ListComponents"
          },
          {
            "ActionName": "ListProblems",
            "FullActionName": "applicationinsights::ListProblems"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "CloudWatch Logs",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "AssociateKmsKey",
            "FullActionName": "logs::AssociateKmsKey"
          },
          {
            "ActionName": "CancelExportTask",
            "FullActionName": "logs::CancelExportTask"
          },
          {
            "ActionName": "CreateExportTask",
            "FullActionName": "logs::CreateExportTask"
          },
          {
            "ActionName": "CreateLogDelivery",
            "FullActionName": "logs::CreateLogDelivery"
          },
          {
            "ActionName": "CreateLogGroup",
            "FullActionName": "logs::CreateLogGroup"
          },
          {
            "ActionName": "CreateLogStream",
            "FullActionName": "logs::CreateLogStream"
          },
          {
            "ActionName": "DeleteDestination",
            "FullActionName": "logs::DeleteDestination"
          },
          {
            "ActionName": "DeleteLogDelivery",
            "FullActionName": "logs::DeleteLogDelivery"
          },
          {
            "ActionName": "DeleteLogGroup",
            "FullActionName": "logs::DeleteLogGroup"
          },
          {
            "ActionName": "DeleteLogStream",
            "FullActionName": "logs::DeleteLogStream"
          },
          {
            "ActionName": "DeleteMetricFilter",
            "FullActionName": "logs::DeleteMetricFilter"
          },
          {
            "ActionName": "DeleteResourcePolicy",
            "FullActionName": "logs::DeleteResourcePolicy"
          },
          {
            "ActionName": "DeleteRetentionPolicy",
            "FullActionName": "logs::DeleteRetentionPolicy"
          },
          {
            "ActionName": "DeleteSubscriptionFilter",
            "FullActionName": "logs::DeleteSubscriptionFilter"
          },
          {
            "ActionName": "DisassociateKmsKey",
            "FullActionName": "logs::DisassociateKmsKey"
          },
          {
            "ActionName": "PutDestination",
            "FullActionName": "logs::PutDestination"
          },
          {
            "ActionName": "PutDestinationPolicy",
            "FullActionName": "logs::PutDestinationPolicy"
          },
          {
            "ActionName": "PutLogEvents",
            "FullActionName": "logs::PutLogEvents"
          },
          {
            "ActionName": "PutMetricFilter",
            "FullActionName": "logs::PutMetricFilter"
          },
          {
            "ActionName": "PutResourcePolicy",
            "FullActionName": "logs::PutResourcePolicy"
          },
          {
            "ActionName": "PutRetentionPolicy",
            "FullActionName": "logs::PutRetentionPolicy"
          },
          {
            "ActionName": "PutSubscriptionFilter",
            "FullActionName": "logs::PutSubscriptionFilter"
          },
          {
            "ActionName": "TagLogGroup",
            "FullActionName": "logs::TagLogGroup"
          },
          {
            "ActionName": "UntagLogGroup",
            "FullActionName": "logs::UntagLogGroup"
          },
          {
            "ActionName": "UpdateLogDelivery",
            "FullActionName": "logs::UpdateLogDelivery"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "DescribeDestinations",
            "FullActionName": "logs::DescribeDestinations"
          },
          {
            "ActionName": "DescribeExportTasks",
            "FullActionName": "logs::DescribeExportTasks"
          },
          {
            "ActionName": "DescribeLogGroups",
            "FullActionName": "logs::DescribeLogGroups"
          },
          {
            "ActionName": "DescribeLogStreams",
            "FullActionName": "logs::DescribeLogStreams"
          },
          {
            "ActionName": "DescribeMetricFilters",
            "FullActionName": "logs::DescribeMetricFilters"
          },
          {
            "ActionName": "DescribeQueries",
            "FullActionName": "logs::DescribeQueries"
          },
          {
            "ActionName": "DescribeResourcePolicies",
            "FullActionName": "logs::DescribeResourcePolicies"
          },
          {
            "ActionName": "DescribeSubscriptionFilters",
            "FullActionName": "logs::DescribeSubscriptionFilters"
          },
          {
            "ActionName": "ListLogDeliveries",
            "FullActionName": "logs::ListLogDeliveries"
          },
          {
            "ActionName": "ListTagsLogGroup",
            "FullActionName": "logs::ListTagsLogGroup"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "FilterLogEvents",
            "FullActionName": "logs::FilterLogEvents"
          },
          {
            "ActionName": "GetLogDelivery",
            "FullActionName": "logs::GetLogDelivery"
          },
          {
            "ActionName": "GetLogEvents",
            "FullActionName": "logs::GetLogEvents"
          },
          {
            "ActionName": "GetLogGroupFields",
            "FullActionName": "logs::GetLogGroupFields"
          },
          {
            "ActionName": "GetLogRecord",
            "FullActionName": "logs::GetLogRecord"
          },
          {
            "ActionName": "GetQueryResults",
            "FullActionName": "logs::GetQueryResults"
          },
          {
            "ActionName": "StartQuery",
            "FullActionName": "logs::StartQuery"
          },
          {
            "ActionName": "StopQuery",
            "FullActionName": "logs::StopQuery"
          },
          {
            "ActionName": "TestMetricFilter",
            "FullActionName": "logs::TestMetricFilter"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "CodeBuild",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "BatchDeleteBuilds",
            "FullActionName": "codebuild::BatchDeleteBuilds"
          },
          {
            "ActionName": "CreateProject",
            "FullActionName": "codebuild::CreateProject"
          },
          {
            "ActionName": "CreateWebhook",
            "FullActionName": "codebuild::CreateWebhook"
          },
          {
            "ActionName": "DeleteOAuthToken",
            "FullActionName": "codebuild::DeleteOAuthToken"
          },
          {
            "ActionName": "DeleteProject",
            "FullActionName": "codebuild::DeleteProject"
          },
          {
            "ActionName": "DeleteSourceCredentials",
            "FullActionName": "codebuild::DeleteSourceCredentials"
          },
          {
            "ActionName": "DeleteWebhook",
            "FullActionName": "codebuild::DeleteWebhook"
          },
          {
            "ActionName": "ImportSourceCredentials",
            "FullActionName": "codebuild::ImportSourceCredentials"
          },
          {
            "ActionName": "InvalidateProjectCache",
            "FullActionName": "codebuild::InvalidateProjectCache"
          },
          {
            "ActionName": "PersistOAuthToken",
            "FullActionName": "codebuild::PersistOAuthToken"
          },
          {
            "ActionName": "StartBuild",
            "FullActionName": "codebuild::StartBuild"
          },
          {
            "ActionName": "StopBuild",
            "FullActionName": "codebuild::StopBuild"
          },
          {
            "ActionName": "UpdateProject",
            "FullActionName": "codebuild::UpdateProject"
          },
          {
            "ActionName": "UpdateWebhook",
            "FullActionName": "codebuild::UpdateWebhook"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "BatchGetBuilds",
            "FullActionName": "codebuild::BatchGetBuilds"
          },
          {
            "ActionName": "BatchGetProjects",
            "FullActionName": "codebuild::BatchGetProjects"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListBuilds",
            "FullActionName": "codebuild::ListBuilds"
          },
          {
            "ActionName": "ListBuildsForProject",
            "FullActionName": "codebuild::ListBuildsForProject"
          },
          {
            "ActionName": "ListConnectedOAuthAccounts",
            "FullActionName": "codebuild::ListConnectedOAuthAccounts"
          },
          {
            "ActionName": "ListCuratedEnvironmentImages",
            "FullActionName": "codebuild::ListCuratedEnvironmentImages"
          },
          {
            "ActionName": "ListProjects",
            "FullActionName": "codebuild::ListProjects"
          },
          {
            "ActionName": "ListRepositories",
            "FullActionName": "codebuild::ListRepositories"
          },
          {
            "ActionName": "ListSourceCredentials",
            "FullActionName": "codebuild::ListSourceCredentials"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "CodeCommit",
    "AccessLevels": [
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "BatchDescribeMergeConflicts",
            "FullActionName": "codecommit::BatchDescribeMergeConflicts"
          },
          {
            "ActionName": "BatchGetCommits",
            "FullActionName": "codecommit::BatchGetCommits"
          },
          {
            "ActionName": "BatchGetPullRequests",
            "FullActionName": "codecommit::BatchGetPullRequests"
          },
          {
            "ActionName": "BatchGetRepositories",
            "FullActionName": "codecommit::BatchGetRepositories"
          },
          {
            "ActionName": "CancelUploadArchive",
            "FullActionName": "codecommit::CancelUploadArchive"
          },
          {
            "ActionName": "DescribeMergeConflicts",
            "FullActionName": "codecommit::DescribeMergeConflicts"
          },
          {
            "ActionName": "DescribePullRequestEvents",
            "FullActionName": "codecommit::DescribePullRequestEvents"
          },
          {
            "ActionName": "GetBlob",
            "FullActionName": "codecommit::GetBlob"
          },
          {
            "ActionName": "GetBranch",
            "FullActionName": "codecommit::GetBranch"
          },
          {
            "ActionName": "GetComment",
            "FullActionName": "codecommit::GetComment"
          },
          {
            "ActionName": "GetCommentsForComparedCommit",
            "FullActionName": "codecommit::GetCommentsForComparedCommit"
          },
          {
            "ActionName": "GetCommentsForPullRequest",
            "FullActionName": "codecommit::GetCommentsForPullRequest"
          },
          {
            "ActionName": "GetCommit",
            "FullActionName": "codecommit::GetCommit"
          },
          {
            "ActionName": "GetCommitHistory",
            "FullActionName": "codecommit::GetCommitHistory"
          },
          {
            "ActionName": "GetCommitsFromMergeBase",
            "FullActionName": "codecommit::GetCommitsFromMergeBase"
          },
          {
            "ActionName": "GetDifferences",
            "FullActionName": "codecommit::GetDifferences"
          },
          {
            "ActionName": "GetFile",
            "FullActionName": "codecommit::GetFile"
          },
          {
            "ActionName": "GetFolder",
            "FullActionName": "codecommit::GetFolder"
          },
          {
            "ActionName": "GetMergeCommit",
            "FullActionName": "codecommit::GetMergeCommit"
          },
          {
            "ActionName": "GetMergeConflicts",
            "FullActionName": "codecommit::GetMergeConflicts"
          },
          {
            "ActionName": "GetMergeOptions",
            "FullActionName": "codecommit::GetMergeOptions"
          },
          {
            "ActionName": "GetObjectIdentifier",
            "FullActionName": "codecommit::GetObjectIdentifier"
          },
          {
            "ActionName": "GetPullRequest",
            "FullActionName": "codecommit::GetPullRequest"
          },
          {
            "ActionName": "GetReferences",
            "FullActionName": "codecommit::GetReferences"
          },
          {
            "ActionName": "GetRepository",
            "FullActionName": "codecommit::GetRepository"
          },
          {
            "ActionName": "GetRepositoryTriggers",
            "FullActionName": "codecommit::GetRepositoryTriggers"
          },
          {
            "ActionName": "GetTree",
            "FullActionName": "codecommit::GetTree"
          },
          {
            "ActionName": "GetUploadArchiveStatus",
            "FullActionName": "codecommit::GetUploadArchiveStatus"
          },
          {
            "ActionName": "GitPull",
            "FullActionName": "codecommit::GitPull"
          }
        ]
      },
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "CreateBranch",
            "FullActionName": "codecommit::CreateBranch"
          },
          {
            "ActionName": "CreateCommit",
            "FullActionName": "codecommit::CreateCommit"
          },
          {
            "ActionName": "CreatePullRequest",
            "FullActionName": "codecommit::CreatePullRequest"
          },
          {
            "ActionName": "CreateRepository",
            "FullActionName": "codecommit::CreateRepository"
          },
          {
            "ActionName": "CreateUnreferencedMergeCommit",
            "FullActionName": "codecommit::CreateUnreferencedMergeCommit"
          },
          {
            "ActionName": "DeleteBranch",
            "FullActionName": "codecommit::DeleteBranch"
          },
          {
            "ActionName": "DeleteCommentContent",
            "FullActionName": "codecommit::DeleteCommentContent"
          },
          {
            "ActionName": "DeleteFile",
            "FullActionName": "codecommit::DeleteFile"
          },
          {
            "ActionName": "DeleteRepository",
            "FullActionName": "codecommit::DeleteRepository"
          },
          {
            "ActionName": "GitPush",
            "FullActionName": "codecommit::GitPush"
          },
          {
            "ActionName": "MergeBranchesByFastForward",
            "FullActionName": "codecommit::MergeBranchesByFastForward"
          },
          {
            "ActionName": "MergeBranchesBySquash",
            "FullActionName": "codecommit::MergeBranchesBySquash"
          },
          {
            "ActionName": "MergeBranchesByThreeWay",
            "FullActionName": "codecommit::MergeBranchesByThreeWay"
          },
          {
            "ActionName": "MergePullRequestByFastForward",
            "FullActionName": "codecommit::MergePullRequestByFastForward"
          },
          {
            "ActionName": "MergePullRequestBySquash",
            "FullActionName": "codecommit::MergePullRequestBySquash"
          },
          {
            "ActionName": "MergePullRequestByThreeWay",
            "FullActionName": "codecommit::MergePullRequestByThreeWay"
          },
          {
            "ActionName": "PostCommentForComparedCommit",
            "FullActionName": "codecommit::PostCommentForComparedCommit"
          },
          {
            "ActionName": "PostCommentForPullRequest",
            "FullActionName": "codecommit::PostCommentForPullRequest"
          },
          {
            "ActionName": "PostCommentReply",
            "FullActionName": "codecommit::PostCommentReply"
          },
          {
            "ActionName": "PutFile",
            "FullActionName": "codecommit::PutFile"
          },
          {
            "ActionName": "PutRepositoryTriggers",
            "FullActionName": "codecommit::PutRepositoryTriggers"
          },
          {
            "ActionName": "TagResource",
            "FullActionName": "codecommit::TagResource"
          },
          {
            "ActionName": "TestRepositoryTriggers",
            "FullActionName": "codecommit::TestRepositoryTriggers"
          },
          {
            "ActionName": "UntagResource",
            "FullActionName": "codecommit::UntagResource"
          },
          {
            "ActionName": "UpdateComment",
            "FullActionName": "codecommit::UpdateComment"
          },
          {
            "ActionName": "UpdateDefaultBranch",
            "FullActionName": "codecommit::UpdateDefaultBranch"
          },
          {
            "ActionName": "UpdatePullRequestDescription",
            "FullActionName": "codecommit::UpdatePullRequestDescription"
          },
          {
            "ActionName": "UpdatePullRequestStatus",
            "FullActionName": "codecommit::UpdatePullRequestStatus"
          },
          {
            "ActionName": "UpdatePullRequestTitle",
            "FullActionName": "codecommit::UpdatePullRequestTitle"
          },
          {
            "ActionName": "UpdateRepositoryDescription",
            "FullActionName": "codecommit::UpdateRepositoryDescription"
          },
          {
            "ActionName": "UpdateRepositoryName",
            "FullActionName": "codecommit::UpdateRepositoryName"
          },
          {
            "ActionName": "UploadArchive",
            "FullActionName": "codecommit::UploadArchive"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListBranches",
            "FullActionName": "codecommit::ListBranches"
          },
          {
            "ActionName": "ListPullRequests",
            "FullActionName": "codecommit::ListPullRequests"
          },
          {
            "ActionName": "ListRepositories",
            "FullActionName": "codecommit::ListRepositories"
          },
          {
            "ActionName": "ListTagsForResource",
            "FullActionName": "codecommit::ListTagsForResource"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "CodeDeploy",
    "AccessLevels": [
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "AddTagsToOnPremisesInstances",
            "FullActionName": "codedeploy::AddTagsToOnPremisesInstances"
          },
          {
            "ActionName": "RemoveTagsFromOnPremisesInstances",
            "FullActionName": "codedeploy::RemoveTagsFromOnPremisesInstances"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "BatchGetApplicationRevisions",
            "FullActionName": "codedeploy::BatchGetApplicationRevisions"
          },
          {
            "ActionName": "BatchGetApplications",
            "FullActionName": "codedeploy::BatchGetApplications"
          },
          {
            "ActionName": "BatchGetDeploymentGroups",
            "FullActionName": "codedeploy::BatchGetDeploymentGroups"
          },
          {
            "ActionName": "BatchGetDeploymentInstances",
            "FullActionName": "codedeploy::BatchGetDeploymentInstances"
          },
          {
            "ActionName": "BatchGetDeployments",
            "FullActionName": "codedeploy::BatchGetDeployments"
          },
          {
            "ActionName": "BatchGetOnPremisesInstances",
            "FullActionName": "codedeploy::BatchGetOnPremisesInstances"
          }
        ]
      },
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "ContinueDeployment",
            "FullActionName": "codedeploy::ContinueDeployment"
          },
          {
            "ActionName": "CreateApplication",
            "FullActionName": "codedeploy::CreateApplication"
          },
          {
            "ActionName": "CreateDeployment",
            "FullActionName": "codedeploy::CreateDeployment"
          },
          {
            "ActionName": "CreateDeploymentConfig",
            "FullActionName": "codedeploy::CreateDeploymentConfig"
          },
          {
            "ActionName": "CreateDeploymentGroup",
            "FullActionName": "codedeploy::CreateDeploymentGroup"
          },
          {
            "ActionName": "DeleteApplication",
            "FullActionName": "codedeploy::DeleteApplication"
          },
          {
            "ActionName": "DeleteDeploymentConfig",
            "FullActionName": "codedeploy::DeleteDeploymentConfig"
          },
          {
            "ActionName": "DeleteDeploymentGroup",
            "FullActionName": "codedeploy::DeleteDeploymentGroup"
          },
          {
            "ActionName": "DeregisterOnPremisesInstance",
            "FullActionName": "codedeploy::DeregisterOnPremisesInstance"
          },
          {
            "ActionName": "PutLifecycleEventHookExecutionStatus",
            "FullActionName": "codedeploy::PutLifecycleEventHookExecutionStatus"
          },
          {
            "ActionName": "RegisterApplicationRevision",
            "FullActionName": "codedeploy::RegisterApplicationRevision"
          },
          {
            "ActionName": "RegisterOnPremisesInstance",
            "FullActionName": "codedeploy::RegisterOnPremisesInstance"
          },
          {
            "ActionName": "StopDeployment",
            "FullActionName": "codedeploy::StopDeployment"
          },
          {
            "ActionName": "UpdateApplication",
            "FullActionName": "codedeploy::UpdateApplication"
          },
          {
            "ActionName": "UpdateDeploymentGroup",
            "FullActionName": "codedeploy::UpdateDeploymentGroup"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "GetApplication",
            "FullActionName": "codedeploy::GetApplication"
          },
          {
            "ActionName": "GetApplicationRevision",
            "FullActionName": "codedeploy::GetApplicationRevision"
          },
          {
            "ActionName": "GetDeployment",
            "FullActionName": "codedeploy::GetDeployment"
          },
          {
            "ActionName": "GetDeploymentConfig",
            "FullActionName": "codedeploy::GetDeploymentConfig"
          },
          {
            "ActionName": "GetDeploymentGroup",
            "FullActionName": "codedeploy::GetDeploymentGroup"
          },
          {
            "ActionName": "GetDeploymentInstance",
            "FullActionName": "codedeploy::GetDeploymentInstance"
          },
          {
            "ActionName": "GetOnPremisesInstance",
            "FullActionName": "codedeploy::GetOnPremisesInstance"
          },
          {
            "ActionName": "ListApplicationRevisions",
            "FullActionName": "codedeploy::ListApplicationRevisions"
          },
          {
            "ActionName": "ListApplications",
            "FullActionName": "codedeploy::ListApplications"
          },
          {
            "ActionName": "ListDeploymentConfigs",
            "FullActionName": "codedeploy::ListDeploymentConfigs"
          },
          {
            "ActionName": "ListDeploymentGroups",
            "FullActionName": "codedeploy::ListDeploymentGroups"
          },
          {
            "ActionName": "ListDeploymentInstances",
            "FullActionName": "codedeploy::ListDeploymentInstances"
          },
          {
            "ActionName": "ListDeployments",
            "FullActionName": "codedeploy::ListDeployments"
          },
          {
            "ActionName": "ListOnPremisesInstances",
            "FullActionName": "codedeploy::ListOnPremisesInstances"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "CodePipeline",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "AcknowledgeJob",
            "FullActionName": "codepipeline::AcknowledgeJob"
          },
          {
            "ActionName": "AcknowledgeThirdPartyJob",
            "FullActionName": "codepipeline::AcknowledgeThirdPartyJob"
          },
          {
            "ActionName": "DeleteCustomActionType",
            "FullActionName": "codepipeline::DeleteCustomActionType"
          },
          {
            "ActionName": "DeletePipeline",
            "FullActionName": "codepipeline::DeletePipeline"
          },
          {
            "ActionName": "DeleteWebhook",
            "FullActionName": "codepipeline::DeleteWebhook"
          },
          {
            "ActionName": "DeregisterWebhookWithThirdParty",
            "FullActionName": "codepipeline::DeregisterWebhookWithThirdParty"
          },
          {
            "ActionName": "DisableStageTransition",
            "FullActionName": "codepipeline::DisableStageTransition"
          },
          {
            "ActionName": "EnableStageTransition",
            "FullActionName": "codepipeline::EnableStageTransition"
          },
          {
            "ActionName": "PollForJobs",
            "FullActionName": "codepipeline::PollForJobs"
          },
          {
            "ActionName": "PollForThirdPartyJobs",
            "FullActionName": "codepipeline::PollForThirdPartyJobs"
          },
          {
            "ActionName": "PutActionRevision",
            "FullActionName": "codepipeline::PutActionRevision"
          },
          {
            "ActionName": "PutApprovalResult",
            "FullActionName": "codepipeline::PutApprovalResult"
          },
          {
            "ActionName": "PutJobFailureResult",
            "FullActionName": "codepipeline::PutJobFailureResult"
          },
          {
            "ActionName": "PutJobSuccessResult",
            "FullActionName": "codepipeline::PutJobSuccessResult"
          },
          {
            "ActionName": "PutThirdPartyJobFailureResult",
            "FullActionName": "codepipeline::PutThirdPartyJobFailureResult"
          },
          {
            "ActionName": "PutThirdPartyJobSuccessResult",
            "FullActionName": "codepipeline::PutThirdPartyJobSuccessResult"
          },
          {
            "ActionName": "RegisterWebhookWithThirdParty",
            "FullActionName": "codepipeline::RegisterWebhookWithThirdParty"
          },
          {
            "ActionName": "RetryStageExecution",
            "FullActionName": "codepipeline::RetryStageExecution"
          },
          {
            "ActionName": "StartPipelineExecution",
            "FullActionName": "codepipeline::StartPipelineExecution"
          },
          {
            "ActionName": "UpdatePipeline",
            "FullActionName": "codepipeline::UpdatePipeline"
          }
        ]
      },
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "CreateCustomActionType",
            "FullActionName": "codepipeline::CreateCustomActionType"
          },
          {
            "ActionName": "CreatePipeline",
            "FullActionName": "codepipeline::CreatePipeline"
          },
          {
            "ActionName": "PutWebhook",
            "FullActionName": "codepipeline::PutWebhook"
          },
          {
            "ActionName": "TagResource",
            "FullActionName": "codepipeline::TagResource"
          },
          {
            "ActionName": "UntagResource",
            "FullActionName": "codepipeline::UntagResource"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "GetJobDetails",
            "FullActionName": "codepipeline::GetJobDetails"
          },
          {
            "ActionName": "GetPipeline",
            "FullActionName": "codepipeline::GetPipeline"
          },
          {
            "ActionName": "GetPipelineExecution",
            "FullActionName": "codepipeline::GetPipelineExecution"
          },
          {
            "ActionName": "GetPipelineState",
            "FullActionName": "codepipeline::GetPipelineState"
          },
          {
            "ActionName": "GetThirdPartyJobDetails",
            "FullActionName": "codepipeline::GetThirdPartyJobDetails"
          },
          {
            "ActionName": "ListActionExecutions",
            "FullActionName": "codepipeline::ListActionExecutions"
          },
          {
            "ActionName": "ListActionTypes",
            "FullActionName": "codepipeline::ListActionTypes"
          },
          {
            "ActionName": "ListTagsForResource",
            "FullActionName": "codepipeline::ListTagsForResource"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListPipelineExecutions",
            "FullActionName": "codepipeline::ListPipelineExecutions"
          },
          {
            "ActionName": "ListPipelines",
            "FullActionName": "codepipeline::ListPipelines"
          },
          {
            "ActionName": "ListWebhooks",
            "FullActionName": "codepipeline::ListWebhooks"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "CodeStar",
    "AccessLevels": [
      {
        "AccessLevel": "Permissions",
        "Actions": [
          {
            "ActionName": "AssociateTeamMember",
            "FullActionName": "codestar::AssociateTeamMember"
          },
          {
            "ActionName": "CreateProject",
            "FullActionName": "codestar::CreateProject"
          },
          {
            "ActionName": "DeleteProject",
            "FullActionName": "codestar::DeleteProject"
          },
          {
            "ActionName": "DisassociateTeamMember",
            "FullActionName": "codestar::DisassociateTeamMember"
          },
          {
            "ActionName": "UpdateTeamMember",
            "FullActionName": "codestar::UpdateTeamMember"
          }
        ]
      },
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "CreateUserProfile",
            "FullActionName": "codestar::CreateUserProfile"
          },
          {
            "ActionName": "DeleteExtendedAccess",
            "FullActionName": "codestar::DeleteExtendedAccess"
          },
          {
            "ActionName": "DeleteUserProfile",
            "FullActionName": "codestar::DeleteUserProfile"
          },
          {
            "ActionName": "PutExtendedAccess",
            "FullActionName": "codestar::PutExtendedAccess"
          },
          {
            "ActionName": "UpdateProject",
            "FullActionName": "codestar::UpdateProject"
          },
          {
            "ActionName": "UpdateUserProfile",
            "FullActionName": "codestar::UpdateUserProfile"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeProject",
            "FullActionName": "codestar::DescribeProject"
          },
          {
            "ActionName": "DescribeUserProfile",
            "FullActionName": "codestar::DescribeUserProfile"
          },
          {
            "ActionName": "GetExtendedAccess",
            "FullActionName": "codestar::GetExtendedAccess"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListProjects",
            "FullActionName": "codestar::ListProjects"
          },
          {
            "ActionName": "ListResources",
            "FullActionName": "codestar::ListResources"
          },
          {
            "ActionName": "ListTagsForProject",
            "FullActionName": "codestar::ListTagsForProject"
          },
          {
            "ActionName": "ListTeamMembers",
            "FullActionName": "codestar::ListTeamMembers"
          },
          {
            "ActionName": "ListUserProfiles",
            "FullActionName": "codestar::ListUserProfiles"
          }
        ]
      },
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "TagProject",
            "FullActionName": "codestar::TagProject"
          },
          {
            "ActionName": "UntagProject",
            "FullActionName": "codestar::UntagProject"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Cognito Identity",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "CreateIdentityPool",
            "FullActionName": "cognito-identity::CreateIdentityPool"
          },
          {
            "ActionName": "DeleteIdentities",
            "FullActionName": "cognito-identity::DeleteIdentities"
          },
          {
            "ActionName": "DeleteIdentityPool",
            "FullActionName": "cognito-identity::DeleteIdentityPool"
          },
          {
            "ActionName": "GetId",
            "FullActionName": "cognito-identity::GetId"
          },
          {
            "ActionName": "MergeDeveloperIdentities",
            "FullActionName": "cognito-identity::MergeDeveloperIdentities"
          },
          {
            "ActionName": "SetIdentityPoolRoles",
            "FullActionName": "cognito-identity::SetIdentityPoolRoles"
          },
          {
            "ActionName": "UnlinkDeveloperIdentity",
            "FullActionName": "cognito-identity::UnlinkDeveloperIdentity"
          },
          {
            "ActionName": "UnlinkIdentity",
            "FullActionName": "cognito-identity::UnlinkIdentity"
          },
          {
            "ActionName": "UpdateIdentityPool",
            "FullActionName": "cognito-identity::UpdateIdentityPool"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeIdentity",
            "FullActionName": "cognito-identity::DescribeIdentity"
          },
          {
            "ActionName": "DescribeIdentityPool",
            "FullActionName": "cognito-identity::DescribeIdentityPool"
          },
          {
            "ActionName": "GetCredentialsForIdentity",
            "FullActionName": "cognito-identity::GetCredentialsForIdentity"
          },
          {
            "ActionName": "GetIdentityPoolRoles",
            "FullActionName": "cognito-identity::GetIdentityPoolRoles"
          },
          {
            "ActionName": "GetOpenIdToken",
            "FullActionName": "cognito-identity::GetOpenIdToken"
          },
          {
            "ActionName": "GetOpenIdTokenForDeveloperIdentity",
            "FullActionName": "cognito-identity::GetOpenIdTokenForDeveloperIdentity"
          },
          {
            "ActionName": "LookupDeveloperIdentity",
            "FullActionName": "cognito-identity::LookupDeveloperIdentity"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListIdentities",
            "FullActionName": "cognito-identity::ListIdentities"
          },
          {
            "ActionName": "ListIdentityPools",
            "FullActionName": "cognito-identity::ListIdentityPools"
          },
          {
            "ActionName": "ListTagsForResource",
            "FullActionName": "cognito-identity::ListTagsForResource"
          }
        ]
      },
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "TagResource",
            "FullActionName": "cognito-identity::TagResource"
          },
          {
            "ActionName": "UntagResource",
            "FullActionName": "cognito-identity::UntagResource"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Cognito Sync",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "BulkPublish",
            "FullActionName": "cognito-sync::BulkPublish"
          },
          {
            "ActionName": "DeleteDataset",
            "FullActionName": "cognito-sync::DeleteDataset"
          },
          {
            "ActionName": "RegisterDevice",
            "FullActionName": "cognito-sync::RegisterDevice"
          },
          {
            "ActionName": "SetCognitoEvents",
            "FullActionName": "cognito-sync::SetCognitoEvents"
          },
          {
            "ActionName": "SetDatasetConfiguration",
            "FullActionName": "cognito-sync::SetDatasetConfiguration"
          },
          {
            "ActionName": "SetIdentityPoolConfiguration",
            "FullActionName": "cognito-sync::SetIdentityPoolConfiguration"
          },
          {
            "ActionName": "SubscribeToDataset",
            "FullActionName": "cognito-sync::SubscribeToDataset"
          },
          {
            "ActionName": "UnsubscribeFromDataset",
            "FullActionName": "cognito-sync::UnsubscribeFromDataset"
          },
          {
            "ActionName": "UpdateRecords",
            "FullActionName": "cognito-sync::UpdateRecords"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeDataset",
            "FullActionName": "cognito-sync::DescribeDataset"
          },
          {
            "ActionName": "DescribeIdentityPoolUsage",
            "FullActionName": "cognito-sync::DescribeIdentityPoolUsage"
          },
          {
            "ActionName": "DescribeIdentityUsage",
            "FullActionName": "cognito-sync::DescribeIdentityUsage"
          },
          {
            "ActionName": "GetBulkPublishDetails",
            "FullActionName": "cognito-sync::GetBulkPublishDetails"
          },
          {
            "ActionName": "GetCognitoEvents",
            "FullActionName": "cognito-sync::GetCognitoEvents"
          },
          {
            "ActionName": "GetIdentityPoolConfiguration",
            "FullActionName": "cognito-sync::GetIdentityPoolConfiguration"
          },
          {
            "ActionName": "ListIdentityPoolUsage",
            "FullActionName": "cognito-sync::ListIdentityPoolUsage"
          },
          {
            "ActionName": "ListRecords",
            "FullActionName": "cognito-sync::ListRecords"
          },
          {
            "ActionName": "QueryRecords",
            "FullActionName": "cognito-sync::QueryRecords"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListDatasets",
            "FullActionName": "cognito-sync::ListDatasets"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Cognito User Pools",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "AddCustomAttributes",
            "FullActionName": "cognito-idp::AddCustomAttributes"
          },
          {
            "ActionName": "AdminAddUserToGroup",
            "FullActionName": "cognito-idp::AdminAddUserToGroup"
          },
          {
            "ActionName": "AdminConfirmSignUp",
            "FullActionName": "cognito-idp::AdminConfirmSignUp"
          },
          {
            "ActionName": "AdminCreateUser",
            "FullActionName": "cognito-idp::AdminCreateUser"
          },
          {
            "ActionName": "AdminDeleteUser",
            "FullActionName": "cognito-idp::AdminDeleteUser"
          },
          {
            "ActionName": "AdminDeleteUserAttributes",
            "FullActionName": "cognito-idp::AdminDeleteUserAttributes"
          },
          {
            "ActionName": "AdminDisableProviderForUser",
            "FullActionName": "cognito-idp::AdminDisableProviderForUser"
          },
          {
            "ActionName": "AdminDisableUser",
            "FullActionName": "cognito-idp::AdminDisableUser"
          },
          {
            "ActionName": "AdminEnableUser",
            "FullActionName": "cognito-idp::AdminEnableUser"
          },
          {
            "ActionName": "AdminForgetDevice",
            "FullActionName": "cognito-idp::AdminForgetDevice"
          },
          {
            "ActionName": "AdminInitiateAuth",
            "FullActionName": "cognito-idp::AdminInitiateAuth"
          },
          {
            "ActionName": "AdminLinkProviderForUser",
            "FullActionName": "cognito-idp::AdminLinkProviderForUser"
          },
          {
            "ActionName": "AdminRemoveUserFromGroup",
            "FullActionName": "cognito-idp::AdminRemoveUserFromGroup"
          },
          {
            "ActionName": "AdminResetUserPassword",
            "FullActionName": "cognito-idp::AdminResetUserPassword"
          },
          {
            "ActionName": "AdminRespondToAuthChallenge",
            "FullActionName": "cognito-idp::AdminRespondToAuthChallenge"
          },
          {
            "ActionName": "AdminSetUserMFAPreference",
            "FullActionName": "cognito-idp::AdminSetUserMFAPreference"
          },
          {
            "ActionName": "AdminSetUserPassword",
            "FullActionName": "cognito-idp::AdminSetUserPassword"
          },
          {
            "ActionName": "AdminSetUserSettings",
            "FullActionName": "cognito-idp::AdminSetUserSettings"
          },
          {
            "ActionName": "AdminUpdateAuthEventFeedback",
            "FullActionName": "cognito-idp::AdminUpdateAuthEventFeedback"
          },
          {
            "ActionName": "AdminUpdateDeviceStatus",
            "FullActionName": "cognito-idp::AdminUpdateDeviceStatus"
          },
          {
            "ActionName": "AdminUpdateUserAttributes",
            "FullActionName": "cognito-idp::AdminUpdateUserAttributes"
          },
          {
            "ActionName": "AdminUserGlobalSignOut",
            "FullActionName": "cognito-idp::AdminUserGlobalSignOut"
          },
          {
            "ActionName": "AssociateSoftwareToken",
            "FullActionName": "cognito-idp::AssociateSoftwareToken"
          },
          {
            "ActionName": "ChangePassword",
            "FullActionName": "cognito-idp::ChangePassword"
          },
          {
            "ActionName": "ConfirmDevice",
            "FullActionName": "cognito-idp::ConfirmDevice"
          },
          {
            "ActionName": "ConfirmForgotPassword",
            "FullActionName": "cognito-idp::ConfirmForgotPassword"
          },
          {
            "ActionName": "ConfirmSignUp",
            "FullActionName": "cognito-idp::ConfirmSignUp"
          },
          {
            "ActionName": "CreateGroup",
            "FullActionName": "cognito-idp::CreateGroup"
          },
          {
            "ActionName": "CreateIdentityProvider",
            "FullActionName": "cognito-idp::CreateIdentityProvider"
          },
          {
            "ActionName": "CreateResourceServer",
            "FullActionName": "cognito-idp::CreateResourceServer"
          },
          {
            "ActionName": "CreateUserImportJob",
            "FullActionName": "cognito-idp::CreateUserImportJob"
          },
          {
            "ActionName": "CreateUserPool",
            "FullActionName": "cognito-idp::CreateUserPool"
          },
          {
            "ActionName": "CreateUserPoolClient",
            "FullActionName": "cognito-idp::CreateUserPoolClient"
          },
          {
            "ActionName": "CreateUserPoolDomain",
            "FullActionName": "cognito-idp::CreateUserPoolDomain"
          },
          {
            "ActionName": "DeleteGroup",
            "FullActionName": "cognito-idp::DeleteGroup"
          },
          {
            "ActionName": "DeleteIdentityProvider",
            "FullActionName": "cognito-idp::DeleteIdentityProvider"
          },
          {
            "ActionName": "DeleteResourceServer",
            "FullActionName": "cognito-idp::DeleteResourceServer"
          },
          {
            "ActionName": "DeleteUser",
            "FullActionName": "cognito-idp::DeleteUser"
          },
          {
            "ActionName": "DeleteUserAttributes",
            "FullActionName": "cognito-idp::DeleteUserAttributes"
          },
          {
            "ActionName": "DeleteUserPool",
            "FullActionName": "cognito-idp::DeleteUserPool"
          },
          {
            "ActionName": "DeleteUserPoolClient",
            "FullActionName": "cognito-idp::DeleteUserPoolClient"
          },
          {
            "ActionName": "DeleteUserPoolDomain",
            "FullActionName": "cognito-idp::DeleteUserPoolDomain"
          },
          {
            "ActionName": "ForgetDevice",
            "FullActionName": "cognito-idp::ForgetDevice"
          },
          {
            "ActionName": "ForgotPassword",
            "FullActionName": "cognito-idp::ForgotPassword"
          },
          {
            "ActionName": "GlobalSignOut",
            "FullActionName": "cognito-idp::GlobalSignOut"
          },
          {
            "ActionName": "InitiateAuth",
            "FullActionName": "cognito-idp::InitiateAuth"
          },
          {
            "ActionName": "ResendConfirmationCode",
            "FullActionName": "cognito-idp::ResendConfirmationCode"
          },
          {
            "ActionName": "RespondToAuthChallenge",
            "FullActionName": "cognito-idp::RespondToAuthChallenge"
          },
          {
            "ActionName": "SetRiskConfiguration",
            "FullActionName": "cognito-idp::SetRiskConfiguration"
          },
          {
            "ActionName": "SetUICustomization",
            "FullActionName": "cognito-idp::SetUICustomization"
          },
          {
            "ActionName": "SetUserMFAPreference",
            "FullActionName": "cognito-idp::SetUserMFAPreference"
          },
          {
            "ActionName": "SetUserPoolMfaConfig",
            "FullActionName": "cognito-idp::SetUserPoolMfaConfig"
          },
          {
            "ActionName": "SetUserSettings",
            "FullActionName": "cognito-idp::SetUserSettings"
          },
          {
            "ActionName": "SignUp",
            "FullActionName": "cognito-idp::SignUp"
          },
          {
            "ActionName": "StartUserImportJob",
            "FullActionName": "cognito-idp::StartUserImportJob"
          },
          {
            "ActionName": "StopUserImportJob",
            "FullActionName": "cognito-idp::StopUserImportJob"
          },
          {
            "ActionName": "UpdateAuthEventFeedback",
            "FullActionName": "cognito-idp::UpdateAuthEventFeedback"
          },
          {
            "ActionName": "UpdateDeviceStatus",
            "FullActionName": "cognito-idp::UpdateDeviceStatus"
          },
          {
            "ActionName": "UpdateGroup",
            "FullActionName": "cognito-idp::UpdateGroup"
          },
          {
            "ActionName": "UpdateIdentityProvider",
            "FullActionName": "cognito-idp::UpdateIdentityProvider"
          },
          {
            "ActionName": "UpdateResourceServer",
            "FullActionName": "cognito-idp::UpdateResourceServer"
          },
          {
            "ActionName": "UpdateUserAttributes",
            "FullActionName": "cognito-idp::UpdateUserAttributes"
          },
          {
            "ActionName": "UpdateUserPool",
            "FullActionName": "cognito-idp::UpdateUserPool"
          },
          {
            "ActionName": "UpdateUserPoolClient",
            "FullActionName": "cognito-idp::UpdateUserPoolClient"
          },
          {
            "ActionName": "UpdateUserPoolDomain",
            "FullActionName": "cognito-idp::UpdateUserPoolDomain"
          },
          {
            "ActionName": "VerifySoftwareToken",
            "FullActionName": "cognito-idp::VerifySoftwareToken"
          },
          {
            "ActionName": "VerifyUserAttribute",
            "FullActionName": "cognito-idp::VerifyUserAttribute"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "AdminGetDevice",
            "FullActionName": "cognito-idp::AdminGetDevice"
          },
          {
            "ActionName": "AdminGetUser",
            "FullActionName": "cognito-idp::AdminGetUser"
          },
          {
            "ActionName": "AdminListUserAuthEvents",
            "FullActionName": "cognito-idp::AdminListUserAuthEvents"
          },
          {
            "ActionName": "DescribeIdentityProvider",
            "FullActionName": "cognito-idp::DescribeIdentityProvider"
          },
          {
            "ActionName": "DescribeResourceServer",
            "FullActionName": "cognito-idp::DescribeResourceServer"
          },
          {
            "ActionName": "DescribeRiskConfiguration",
            "FullActionName": "cognito-idp::DescribeRiskConfiguration"
          },
          {
            "ActionName": "DescribeUserImportJob",
            "FullActionName": "cognito-idp::DescribeUserImportJob"
          },
          {
            "ActionName": "DescribeUserPool",
            "FullActionName": "cognito-idp::DescribeUserPool"
          },
          {
            "ActionName": "DescribeUserPoolClient",
            "FullActionName": "cognito-idp::DescribeUserPoolClient"
          },
          {
            "ActionName": "DescribeUserPoolDomain",
            "FullActionName": "cognito-idp::DescribeUserPoolDomain"
          },
          {
            "ActionName": "GetCSVHeader",
            "FullActionName": "cognito-idp::GetCSVHeader"
          },
          {
            "ActionName": "GetDevice",
            "FullActionName": "cognito-idp::GetDevice"
          },
          {
            "ActionName": "GetGroup",
            "FullActionName": "cognito-idp::GetGroup"
          },
          {
            "ActionName": "GetIdentityProviderByIdentifier",
            "FullActionName": "cognito-idp::GetIdentityProviderByIdentifier"
          },
          {
            "ActionName": "GetSigningCertificate",
            "FullActionName": "cognito-idp::GetSigningCertificate"
          },
          {
            "ActionName": "GetUICustomization",
            "FullActionName": "cognito-idp::GetUICustomization"
          },
          {
            "ActionName": "GetUser",
            "FullActionName": "cognito-idp::GetUser"
          },
          {
            "ActionName": "GetUserAttributeVerificationCode",
            "FullActionName": "cognito-idp::GetUserAttributeVerificationCode"
          },
          {
            "ActionName": "GetUserPoolMfaConfig",
            "FullActionName": "cognito-idp::GetUserPoolMfaConfig"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "AdminListDevices",
            "FullActionName": "cognito-idp::AdminListDevices"
          },
          {
            "ActionName": "AdminListGroupsForUser",
            "FullActionName": "cognito-idp::AdminListGroupsForUser"
          },
          {
            "ActionName": "ListDevices",
            "FullActionName": "cognito-idp::ListDevices"
          },
          {
            "ActionName": "ListGroups",
            "FullActionName": "cognito-idp::ListGroups"
          },
          {
            "ActionName": "ListIdentityProviders",
            "FullActionName": "cognito-idp::ListIdentityProviders"
          },
          {
            "ActionName": "ListResourceServers",
            "FullActionName": "cognito-idp::ListResourceServers"
          },
          {
            "ActionName": "ListTagsForResource",
            "FullActionName": "cognito-idp::ListTagsForResource"
          },
          {
            "ActionName": "ListUserImportJobs",
            "FullActionName": "cognito-idp::ListUserImportJobs"
          },
          {
            "ActionName": "ListUserPoolClients",
            "FullActionName": "cognito-idp::ListUserPoolClients"
          },
          {
            "ActionName": "ListUserPools",
            "FullActionName": "cognito-idp::ListUserPools"
          },
          {
            "ActionName": "ListUsers",
            "FullActionName": "cognito-idp::ListUsers"
          },
          {
            "ActionName": "ListUsersInGroup",
            "FullActionName": "cognito-idp::ListUsersInGroup"
          }
        ]
      },
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "TagResource",
            "FullActionName": "cognito-idp::TagResource"
          },
          {
            "ActionName": "UntagResource",
            "FullActionName": "cognito-idp::UntagResource"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Comprehend",
    "AccessLevels": [
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "BatchDetectDominantLanguage",
            "FullActionName": "comprehend::BatchDetectDominantLanguage"
          },
          {
            "ActionName": "BatchDetectEntities",
            "FullActionName": "comprehend::BatchDetectEntities"
          },
          {
            "ActionName": "BatchDetectKeyPhrases",
            "FullActionName": "comprehend::BatchDetectKeyPhrases"
          },
          {
            "ActionName": "BatchDetectSentiment",
            "FullActionName": "comprehend::BatchDetectSentiment"
          },
          {
            "ActionName": "BatchDetectSyntax",
            "FullActionName": "comprehend::BatchDetectSyntax"
          },
          {
            "ActionName": "DescribeDocumentClassificationJob",
            "FullActionName": "comprehend::DescribeDocumentClassificationJob"
          },
          {
            "ActionName": "DescribeDocumentClassifier",
            "FullActionName": "comprehend::DescribeDocumentClassifier"
          },
          {
            "ActionName": "DescribeDominantLanguageDetectionJob",
            "FullActionName": "comprehend::DescribeDominantLanguageDetectionJob"
          },
          {
            "ActionName": "DescribeEntitiesDetectionJob",
            "FullActionName": "comprehend::DescribeEntitiesDetectionJob"
          },
          {
            "ActionName": "DescribeEntityRecognizer",
            "FullActionName": "comprehend::DescribeEntityRecognizer"
          },
          {
            "ActionName": "DescribeKeyPhrasesDetectionJob",
            "FullActionName": "comprehend::DescribeKeyPhrasesDetectionJob"
          },
          {
            "ActionName": "DescribeSentimentDetectionJob",
            "FullActionName": "comprehend::DescribeSentimentDetectionJob"
          },
          {
            "ActionName": "DescribeTopicsDetectionJob",
            "FullActionName": "comprehend::DescribeTopicsDetectionJob"
          },
          {
            "ActionName": "DetectDominantLanguage",
            "FullActionName": "comprehend::DetectDominantLanguage"
          },
          {
            "ActionName": "DetectEntities",
            "FullActionName": "comprehend::DetectEntities"
          },
          {
            "ActionName": "DetectKeyPhrases",
            "FullActionName": "comprehend::DetectKeyPhrases"
          },
          {
            "ActionName": "DetectSentiment",
            "FullActionName": "comprehend::DetectSentiment"
          },
          {
            "ActionName": "DetectSyntax",
            "FullActionName": "comprehend::DetectSyntax"
          }
        ]
      },
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "CreateDocumentClassifier",
            "FullActionName": "comprehend::CreateDocumentClassifier"
          },
          {
            "ActionName": "CreateEntityRecognizer",
            "FullActionName": "comprehend::CreateEntityRecognizer"
          },
          {
            "ActionName": "DeleteDocumentClassifier",
            "FullActionName": "comprehend::DeleteDocumentClassifier"
          },
          {
            "ActionName": "DeleteEntityRecognizer",
            "FullActionName": "comprehend::DeleteEntityRecognizer"
          },
          {
            "ActionName": "StartDocumentClassificationJob",
            "FullActionName": "comprehend::StartDocumentClassificationJob"
          },
          {
            "ActionName": "StartDominantLanguageDetectionJob",
            "FullActionName": "comprehend::StartDominantLanguageDetectionJob"
          },
          {
            "ActionName": "StartEntitiesDetectionJob",
            "FullActionName": "comprehend::StartEntitiesDetectionJob"
          },
          {
            "ActionName": "StartKeyPhrasesDetectionJob",
            "FullActionName": "comprehend::StartKeyPhrasesDetectionJob"
          },
          {
            "ActionName": "StartSentimentDetectionJob",
            "FullActionName": "comprehend::StartSentimentDetectionJob"
          },
          {
            "ActionName": "StartTopicsDetectionJob",
            "FullActionName": "comprehend::StartTopicsDetectionJob"
          },
          {
            "ActionName": "StopDominantLanguageDetectionJob",
            "FullActionName": "comprehend::StopDominantLanguageDetectionJob"
          },
          {
            "ActionName": "StopEntitiesDetectionJob",
            "FullActionName": "comprehend::StopEntitiesDetectionJob"
          },
          {
            "ActionName": "StopKeyPhrasesDetectionJob",
            "FullActionName": "comprehend::StopKeyPhrasesDetectionJob"
          },
          {
            "ActionName": "StopSentimentDetectionJob",
            "FullActionName": "comprehend::StopSentimentDetectionJob"
          },
          {
            "ActionName": "StopTrainingDocumentClassifier",
            "FullActionName": "comprehend::StopTrainingDocumentClassifier"
          },
          {
            "ActionName": "StopTrainingEntityRecognizer",
            "FullActionName": "comprehend::StopTrainingEntityRecognizer"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListDocumentClassificationJobs",
            "FullActionName": "comprehend::ListDocumentClassificationJobs"
          },
          {
            "ActionName": "ListDocumentClassifiers",
            "FullActionName": "comprehend::ListDocumentClassifiers"
          },
          {
            "ActionName": "ListDominantLanguageDetectionJobs",
            "FullActionName": "comprehend::ListDominantLanguageDetectionJobs"
          },
          {
            "ActionName": "ListEntitiesDetectionJobs",
            "FullActionName": "comprehend::ListEntitiesDetectionJobs"
          },
          {
            "ActionName": "ListEntityRecognizers",
            "FullActionName": "comprehend::ListEntityRecognizers"
          },
          {
            "ActionName": "ListKeyPhrasesDetectionJobs",
            "FullActionName": "comprehend::ListKeyPhrasesDetectionJobs"
          },
          {
            "ActionName": "ListSentimentDetectionJobs",
            "FullActionName": "comprehend::ListSentimentDetectionJobs"
          },
          {
            "ActionName": "ListTagsForResource",
            "FullActionName": "comprehend::ListTagsForResource"
          },
          {
            "ActionName": "ListTopicsDetectionJobs",
            "FullActionName": "comprehend::ListTopicsDetectionJobs"
          }
        ]
      },
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "TagResource",
            "FullActionName": "comprehend::TagResource"
          },
          {
            "ActionName": "UntagResource",
            "FullActionName": "comprehend::UntagResource"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "ComprehendMedical",
    "AccessLevels": [
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DetectEntities",
            "FullActionName": "comprehendmedical::DetectEntities"
          },
          {
            "ActionName": "DetectPHI",
            "FullActionName": "comprehendmedical::DetectPHI"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Config",
    "AccessLevels": [
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "BatchGetAggregateResourceConfig",
            "FullActionName": "config::BatchGetAggregateResourceConfig"
          },
          {
            "ActionName": "BatchGetResourceConfig",
            "FullActionName": "config::BatchGetResourceConfig"
          },
          {
            "ActionName": "DeliverConfigSnapshot",
            "FullActionName": "config::DeliverConfigSnapshot"
          },
          {
            "ActionName": "GetAggregateComplianceDetailsByConfigRule",
            "FullActionName": "config::GetAggregateComplianceDetailsByConfigRule"
          },
          {
            "ActionName": "GetAggregateConfigRuleComplianceSummary",
            "FullActionName": "config::GetAggregateConfigRuleComplianceSummary"
          },
          {
            "ActionName": "GetAggregateDiscoveredResourceCounts",
            "FullActionName": "config::GetAggregateDiscoveredResourceCounts"
          },
          {
            "ActionName": "GetAggregateResourceConfig",
            "FullActionName": "config::GetAggregateResourceConfig"
          },
          {
            "ActionName": "GetComplianceDetailsByConfigRule",
            "FullActionName": "config::GetComplianceDetailsByConfigRule"
          },
          {
            "ActionName": "GetComplianceDetailsByResource",
            "FullActionName": "config::GetComplianceDetailsByResource"
          },
          {
            "ActionName": "GetComplianceSummaryByConfigRule",
            "FullActionName": "config::GetComplianceSummaryByConfigRule"
          },
          {
            "ActionName": "GetComplianceSummaryByResourceType",
            "FullActionName": "config::GetComplianceSummaryByResourceType"
          },
          {
            "ActionName": "GetDiscoveredResourceCounts",
            "FullActionName": "config::GetDiscoveredResourceCounts"
          },
          {
            "ActionName": "GetResourceConfigHistory",
            "FullActionName": "config::GetResourceConfigHistory"
          },
          {
            "ActionName": "GetResources",
            "FullActionName": "config::GetResources"
          },
          {
            "ActionName": "GetTagKeys",
            "FullActionName": "config::GetTagKeys"
          },
          {
            "ActionName": "SelectResourceConfig",
            "FullActionName": "config::SelectResourceConfig"
          }
        ]
      },
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "DeleteAggregationAuthorization",
            "FullActionName": "config::DeleteAggregationAuthorization"
          },
          {
            "ActionName": "DeleteConfigRule",
            "FullActionName": "config::DeleteConfigRule"
          },
          {
            "ActionName": "DeleteConfigurationAggregator",
            "FullActionName": "config::DeleteConfigurationAggregator"
          },
          {
            "ActionName": "DeleteConfigurationRecorder",
            "FullActionName": "config::DeleteConfigurationRecorder"
          },
          {
            "ActionName": "DeleteDeliveryChannel",
            "FullActionName": "config::DeleteDeliveryChannel"
          },
          {
            "ActionName": "DeleteEvaluationResults",
            "FullActionName": "config::DeleteEvaluationResults"
          },
          {
            "ActionName": "DeletePendingAggregationRequest",
            "FullActionName": "config::DeletePendingAggregationRequest"
          },
          {
            "ActionName": "DeleteRemediationConfiguration",
            "FullActionName": "config::DeleteRemediationConfiguration"
          },
          {
            "ActionName": "DeleteRetentionConfiguration",
            "FullActionName": "config::DeleteRetentionConfiguration"
          },
          {
            "ActionName": "PutAggregationAuthorization",
            "FullActionName": "config::PutAggregationAuthorization"
          },
          {
            "ActionName": "PutConfigRule",
            "FullActionName": "config::PutConfigRule"
          },
          {
            "ActionName": "PutConfigurationAggregator",
            "FullActionName": "config::PutConfigurationAggregator"
          },
          {
            "ActionName": "PutConfigurationRecorder",
            "FullActionName": "config::PutConfigurationRecorder"
          },
          {
            "ActionName": "PutDeliveryChannel",
            "FullActionName": "config::PutDeliveryChannel"
          },
          {
            "ActionName": "PutEvaluations",
            "FullActionName": "config::PutEvaluations"
          },
          {
            "ActionName": "PutRemediationConfigurations",
            "FullActionName": "config::PutRemediationConfigurations"
          },
          {
            "ActionName": "PutRetentionConfiguration",
            "FullActionName": "config::PutRetentionConfiguration"
          },
          {
            "ActionName": "StartConfigRulesEvaluation",
            "FullActionName": "config::StartConfigRulesEvaluation"
          },
          {
            "ActionName": "StartConfigurationRecorder",
            "FullActionName": "config::StartConfigurationRecorder"
          },
          {
            "ActionName": "StartRemediationExecution",
            "FullActionName": "config::StartRemediationExecution"
          },
          {
            "ActionName": "StopConfigurationRecorder",
            "FullActionName": "config::StopConfigurationRecorder"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "DescribeAggregateComplianceByConfigRules",
            "FullActionName": "config::DescribeAggregateComplianceByConfigRules"
          },
          {
            "ActionName": "DescribeAggregationAuthorizations",
            "FullActionName": "config::DescribeAggregationAuthorizations"
          },
          {
            "ActionName": "DescribeComplianceByConfigRule",
            "FullActionName": "config::DescribeComplianceByConfigRule"
          },
          {
            "ActionName": "DescribeComplianceByResource",
            "FullActionName": "config::DescribeComplianceByResource"
          },
          {
            "ActionName": "DescribeConfigRuleEvaluationStatus",
            "FullActionName": "config::DescribeConfigRuleEvaluationStatus"
          },
          {
            "ActionName": "DescribeConfigRules",
            "FullActionName": "config::DescribeConfigRules"
          },
          {
            "ActionName": "DescribeConfigurationAggregatorSourcesStatus",
            "FullActionName": "config::DescribeConfigurationAggregatorSourcesStatus"
          },
          {
            "ActionName": "DescribeConfigurationAggregators",
            "FullActionName": "config::DescribeConfigurationAggregators"
          },
          {
            "ActionName": "DescribeConfigurationRecorderStatus",
            "FullActionName": "config::DescribeConfigurationRecorderStatus"
          },
          {
            "ActionName": "DescribeConfigurationRecorders",
            "FullActionName": "config::DescribeConfigurationRecorders"
          },
          {
            "ActionName": "DescribeDeliveryChannelStatus",
            "FullActionName": "config::DescribeDeliveryChannelStatus"
          },
          {
            "ActionName": "DescribeDeliveryChannels",
            "FullActionName": "config::DescribeDeliveryChannels"
          },
          {
            "ActionName": "DescribePendingAggregationRequests",
            "FullActionName": "config::DescribePendingAggregationRequests"
          },
          {
            "ActionName": "DescribeRemediationConfigurations",
            "FullActionName": "config::DescribeRemediationConfigurations"
          },
          {
            "ActionName": "DescribeRemediationExecutionStatus",
            "FullActionName": "config::DescribeRemediationExecutionStatus"
          },
          {
            "ActionName": "DescribeRetentionConfigurations",
            "FullActionName": "config::DescribeRetentionConfigurations"
          },
          {
            "ActionName": "ListAggregateDiscoveredResources",
            "FullActionName": "config::ListAggregateDiscoveredResources"
          },
          {
            "ActionName": "ListDiscoveredResources",
            "FullActionName": "config::ListDiscoveredResources"
          },
          {
            "ActionName": "ListTagsForResource",
            "FullActionName": "config::ListTagsForResource"
          }
        ]
      },
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "TagResource",
            "FullActionName": "config::TagResource"
          },
          {
            "ActionName": "UntagResource",
            "FullActionName": "config::UntagResource"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Connect",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "CreateInstance",
            "FullActionName": "connect::CreateInstance"
          },
          {
            "ActionName": "DestroyInstance",
            "FullActionName": "connect::DestroyInstance"
          },
          {
            "ActionName": "GetFederationTokens",
            "FullActionName": "connect::GetFederationTokens"
          },
          {
            "ActionName": "ModifyInstance",
            "FullActionName": "connect::ModifyInstance"
          },
          {
            "ActionName": "StartOutboundVoiceContact",
            "FullActionName": "connect::StartOutboundVoiceContact"
          },
          {
            "ActionName": "StopContact",
            "FullActionName": "connect::StopContact"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeInstance",
            "FullActionName": "connect::DescribeInstance"
          },
          {
            "ActionName": "GetCurrentMetricData",
            "FullActionName": "connect::GetCurrentMetricData"
          },
          {
            "ActionName": "GetFederationToken",
            "FullActionName": "connect::GetFederationToken"
          },
          {
            "ActionName": "GetMetricData",
            "FullActionName": "connect::GetMetricData"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListInstances",
            "FullActionName": "connect::ListInstances"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Cost Explorer Service",
    "AccessLevels": [
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "GetCostAndUsage",
            "FullActionName": "ce::GetCostAndUsage"
          },
          {
            "ActionName": "GetCostForecast",
            "FullActionName": "ce::GetCostForecast"
          },
          {
            "ActionName": "GetDimensionValues",
            "FullActionName": "ce::GetDimensionValues"
          },
          {
            "ActionName": "GetReservationCoverage",
            "FullActionName": "ce::GetReservationCoverage"
          },
          {
            "ActionName": "GetReservationPurchaseRecommendation",
            "FullActionName": "ce::GetReservationPurchaseRecommendation"
          },
          {
            "ActionName": "GetReservationUtilization",
            "FullActionName": "ce::GetReservationUtilization"
          },
          {
            "ActionName": "GetRightsizingRecommendation",
            "FullActionName": "ce::GetRightsizingRecommendation"
          },
          {
            "ActionName": "GetTags",
            "FullActionName": "ce::GetTags"
          },
          {
            "ActionName": "GetUsageForecast",
            "FullActionName": "ce::GetUsageForecast"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Cost and Usage Report",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "DeleteReportDefinition",
            "FullActionName": "cur::DeleteReportDefinition"
          },
          {
            "ActionName": "ModifyReportDefinition",
            "FullActionName": "cur::ModifyReportDefinition"
          },
          {
            "ActionName": "PutReportDefinition",
            "FullActionName": "cur::PutReportDefinition"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeReportDefinitions",
            "FullActionName": "cur::DescribeReportDefinitions"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "DBQMS",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "CreateFavoriteQuery",
            "FullActionName": "dbqms::CreateFavoriteQuery"
          },
          {
            "ActionName": "CreateQueryHistory",
            "FullActionName": "dbqms::CreateQueryHistory"
          },
          {
            "ActionName": "DeleteFavoriteQueries",
            "FullActionName": "dbqms::DeleteFavoriteQueries"
          },
          {
            "ActionName": "DeleteQueryHistory",
            "FullActionName": "dbqms::DeleteQueryHistory"
          },
          {
            "ActionName": "UpdateFavoriteQuery",
            "FullActionName": "dbqms::UpdateFavoriteQuery"
          },
          {
            "ActionName": "UpdateQueryHistory",
            "FullActionName": "dbqms::UpdateQueryHistory"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "DescribeFavoriteQueries",
            "FullActionName": "dbqms::DescribeFavoriteQueries"
          },
          {
            "ActionName": "DescribeQueryHistory",
            "FullActionName": "dbqms::DescribeQueryHistory"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "GetQueryString",
            "FullActionName": "dbqms::GetQueryString"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "DMS",
    "AccessLevels": [
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "AddTagsToResource",
            "FullActionName": "dms::AddTagsToResource"
          },
          {
            "ActionName": "RemoveTagsFromResource",
            "FullActionName": "dms::RemoveTagsFromResource"
          }
        ]
      },
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "ApplyPendingMaintenanceAction",
            "FullActionName": "dms::ApplyPendingMaintenanceAction"
          },
          {
            "ActionName": "CreateEndpoint",
            "FullActionName": "dms::CreateEndpoint"
          },
          {
            "ActionName": "CreateEventSubscription",
            "FullActionName": "dms::CreateEventSubscription"
          },
          {
            "ActionName": "CreateReplicationInstance",
            "FullActionName": "dms::CreateReplicationInstance"
          },
          {
            "ActionName": "CreateReplicationSubnetGroup",
            "FullActionName": "dms::CreateReplicationSubnetGroup"
          },
          {
            "ActionName": "CreateReplicationTask",
            "FullActionName": "dms::CreateReplicationTask"
          },
          {
            "ActionName": "DeleteCertificate",
            "FullActionName": "dms::DeleteCertificate"
          },
          {
            "ActionName": "DeleteEndpoint",
            "FullActionName": "dms::DeleteEndpoint"
          },
          {
            "ActionName": "DeleteEventSubscription",
            "FullActionName": "dms::DeleteEventSubscription"
          },
          {
            "ActionName": "DeleteReplicationInstance",
            "FullActionName": "dms::DeleteReplicationInstance"
          },
          {
            "ActionName": "DeleteReplicationSubnetGroup",
            "FullActionName": "dms::DeleteReplicationSubnetGroup"
          },
          {
            "ActionName": "DeleteReplicationTask",
            "FullActionName": "dms::DeleteReplicationTask"
          },
          {
            "ActionName": "ImportCertificate",
            "FullActionName": "dms::ImportCertificate"
          },
          {
            "ActionName": "ModifyEndpoint",
            "FullActionName": "dms::ModifyEndpoint"
          },
          {
            "ActionName": "ModifyEventSubscription",
            "FullActionName": "dms::ModifyEventSubscription"
          },
          {
            "ActionName": "ModifyReplicationInstance",
            "FullActionName": "dms::ModifyReplicationInstance"
          },
          {
            "ActionName": "ModifyReplicationSubnetGroup",
            "FullActionName": "dms::ModifyReplicationSubnetGroup"
          },
          {
            "ActionName": "ModifyReplicationTask",
            "FullActionName": "dms::ModifyReplicationTask"
          },
          {
            "ActionName": "RebootReplicationInstance",
            "FullActionName": "dms::RebootReplicationInstance"
          },
          {
            "ActionName": "RefreshSchemas",
            "FullActionName": "dms::RefreshSchemas"
          },
          {
            "ActionName": "ReloadTables",
            "FullActionName": "dms::ReloadTables"
          },
          {
            "ActionName": "StartReplicationTask",
            "FullActionName": "dms::StartReplicationTask"
          },
          {
            "ActionName": "StartReplicationTaskAssessment",
            "FullActionName": "dms::StartReplicationTaskAssessment"
          },
          {
            "ActionName": "StopReplicationTask",
            "FullActionName": "dms::StopReplicationTask"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeAccountAttributes",
            "FullActionName": "dms::DescribeAccountAttributes"
          },
          {
            "ActionName": "DescribeCertificates",
            "FullActionName": "dms::DescribeCertificates"
          },
          {
            "ActionName": "DescribeConnections",
            "FullActionName": "dms::DescribeConnections"
          },
          {
            "ActionName": "DescribeEndpointTypes",
            "FullActionName": "dms::DescribeEndpointTypes"
          },
          {
            "ActionName": "DescribeEndpoints",
            "FullActionName": "dms::DescribeEndpoints"
          },
          {
            "ActionName": "DescribeEventCategories",
            "FullActionName": "dms::DescribeEventCategories"
          },
          {
            "ActionName": "DescribeEventSubscriptions",
            "FullActionName": "dms::DescribeEventSubscriptions"
          },
          {
            "ActionName": "DescribeEvents",
            "FullActionName": "dms::DescribeEvents"
          },
          {
            "ActionName": "DescribeOrderableReplicationInstances",
            "FullActionName": "dms::DescribeOrderableReplicationInstances"
          },
          {
            "ActionName": "DescribeRefreshSchemasStatus",
            "FullActionName": "dms::DescribeRefreshSchemasStatus"
          },
          {
            "ActionName": "DescribeReplicationInstanceTaskLogs",
            "FullActionName": "dms::DescribeReplicationInstanceTaskLogs"
          },
          {
            "ActionName": "DescribeReplicationInstances",
            "FullActionName": "dms::DescribeReplicationInstances"
          },
          {
            "ActionName": "DescribeReplicationSubnetGroups",
            "FullActionName": "dms::DescribeReplicationSubnetGroups"
          },
          {
            "ActionName": "DescribeReplicationTaskAssessmentResults",
            "FullActionName": "dms::DescribeReplicationTaskAssessmentResults"
          },
          {
            "ActionName": "DescribeReplicationTasks",
            "FullActionName": "dms::DescribeReplicationTasks"
          },
          {
            "ActionName": "DescribeSchemas",
            "FullActionName": "dms::DescribeSchemas"
          },
          {
            "ActionName": "DescribeTableStatistics",
            "FullActionName": "dms::DescribeTableStatistics"
          },
          {
            "ActionName": "TestConnection",
            "FullActionName": "dms::TestConnection"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListTagsForResource",
            "FullActionName": "dms::ListTagsForResource"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Data Lifecycle Manager",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "CreateLifecyclePolicy",
            "FullActionName": "dlm::CreateLifecyclePolicy"
          },
          {
            "ActionName": "DeleteLifecyclePolicy",
            "FullActionName": "dlm::DeleteLifecyclePolicy"
          },
          {
            "ActionName": "UpdateLifecyclePolicy",
            "FullActionName": "dlm::UpdateLifecyclePolicy"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "GetLifecyclePolicies",
            "FullActionName": "dlm::GetLifecyclePolicies"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "GetLifecyclePolicy",
            "FullActionName": "dlm::GetLifecyclePolicy"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Data Pipeline",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "ActivatePipeline",
            "FullActionName": "datapipeline::ActivatePipeline"
          },
          {
            "ActionName": "CreatePipeline",
            "FullActionName": "datapipeline::CreatePipeline"
          },
          {
            "ActionName": "DeactivatePipeline",
            "FullActionName": "datapipeline::DeactivatePipeline"
          },
          {
            "ActionName": "DeletePipeline",
            "FullActionName": "datapipeline::DeletePipeline"
          },
          {
            "ActionName": "PollForTask",
            "FullActionName": "datapipeline::PollForTask"
          },
          {
            "ActionName": "PutAccountLimits",
            "FullActionName": "datapipeline::PutAccountLimits"
          },
          {
            "ActionName": "PutPipelineDefinition",
            "FullActionName": "datapipeline::PutPipelineDefinition"
          },
          {
            "ActionName": "ReportTaskProgress",
            "FullActionName": "datapipeline::ReportTaskProgress"
          },
          {
            "ActionName": "ReportTaskRunnerHeartbeat",
            "FullActionName": "datapipeline::ReportTaskRunnerHeartbeat"
          },
          {
            "ActionName": "SetStatus",
            "FullActionName": "datapipeline::SetStatus"
          },
          {
            "ActionName": "SetTaskStatus",
            "FullActionName": "datapipeline::SetTaskStatus"
          }
        ]
      },
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "AddTags",
            "FullActionName": "datapipeline::AddTags"
          },
          {
            "ActionName": "RemoveTags",
            "FullActionName": "datapipeline::RemoveTags"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeObjects",
            "FullActionName": "datapipeline::DescribeObjects"
          },
          {
            "ActionName": "EvaluateExpression",
            "FullActionName": "datapipeline::EvaluateExpression"
          },
          {
            "ActionName": "GetPipelineDefinition",
            "FullActionName": "datapipeline::GetPipelineDefinition"
          },
          {
            "ActionName": "QueryObjects",
            "FullActionName": "datapipeline::QueryObjects"
          },
          {
            "ActionName": "ValidatePipelineDefinition",
            "FullActionName": "datapipeline::ValidatePipelineDefinition"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "DescribePipelines",
            "FullActionName": "datapipeline::DescribePipelines"
          },
          {
            "ActionName": "GetAccountLimits",
            "FullActionName": "datapipeline::GetAccountLimits"
          },
          {
            "ActionName": "ListPipelines",
            "FullActionName": "datapipeline::ListPipelines"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "DataSync",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "CancelTaskExecution",
            "FullActionName": "datasync::CancelTaskExecution"
          },
          {
            "ActionName": "CreateAgent",
            "FullActionName": "datasync::CreateAgent"
          },
          {
            "ActionName": "CreateLocationEfs",
            "FullActionName": "datasync::CreateLocationEfs"
          },
          {
            "ActionName": "CreateLocationNfs",
            "FullActionName": "datasync::CreateLocationNfs"
          },
          {
            "ActionName": "CreateLocationS3",
            "FullActionName": "datasync::CreateLocationS3"
          },
          {
            "ActionName": "CreateLocationSmb",
            "FullActionName": "datasync::CreateLocationSmb"
          },
          {
            "ActionName": "CreateTask",
            "FullActionName": "datasync::CreateTask"
          },
          {
            "ActionName": "DeleteAgent",
            "FullActionName": "datasync::DeleteAgent"
          },
          {
            "ActionName": "DeleteLocation",
            "FullActionName": "datasync::DeleteLocation"
          },
          {
            "ActionName": "DeleteTask",
            "FullActionName": "datasync::DeleteTask"
          },
          {
            "ActionName": "StartTaskExecution",
            "FullActionName": "datasync::StartTaskExecution"
          },
          {
            "ActionName": "TagResource",
            "FullActionName": "datasync::TagResource"
          },
          {
            "ActionName": "UpdateAgent",
            "FullActionName": "datasync::UpdateAgent"
          },
          {
            "ActionName": "UpdateTask",
            "FullActionName": "datasync::UpdateTask"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeAgent",
            "FullActionName": "datasync::DescribeAgent"
          },
          {
            "ActionName": "DescribeLocationEfs",
            "FullActionName": "datasync::DescribeLocationEfs"
          },
          {
            "ActionName": "DescribeLocationNfs",
            "FullActionName": "datasync::DescribeLocationNfs"
          },
          {
            "ActionName": "DescribeLocationS3",
            "FullActionName": "datasync::DescribeLocationS3"
          },
          {
            "ActionName": "DescribeLocationSmb",
            "FullActionName": "datasync::DescribeLocationSmb"
          },
          {
            "ActionName": "DescribeTask",
            "FullActionName": "datasync::DescribeTask"
          },
          {
            "ActionName": "DescribeTaskExecution",
            "FullActionName": "datasync::DescribeTaskExecution"
          },
          {
            "ActionName": "ListTagsForResource",
            "FullActionName": "datasync::ListTagsForResource"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListAgents",
            "FullActionName": "datasync::ListAgents"
          },
          {
            "ActionName": "ListLocations",
            "FullActionName": "datasync::ListLocations"
          },
          {
            "ActionName": "ListTaskExecutions",
            "FullActionName": "datasync::ListTaskExecutions"
          },
          {
            "ActionName": "ListTasks",
            "FullActionName": "datasync::ListTasks"
          }
        ]
      },
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "UntagResource",
            "FullActionName": "datasync::UntagResource"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "DeepLens",
    "AccessLevels": [
      {
        "AccessLevel": "Permissions",
        "Actions": [
          {
            "ActionName": "AssociateServiceRoleToAccount",
            "FullActionName": "deeplens::AssociateServiceRoleToAccount"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "BatchGetDevice",
            "FullActionName": "deeplens::BatchGetDevice"
          },
          {
            "ActionName": "BatchGetModel",
            "FullActionName": "deeplens::BatchGetModel"
          },
          {
            "ActionName": "BatchGetProject",
            "FullActionName": "deeplens::BatchGetProject"
          },
          {
            "ActionName": "GetAssociatedResources",
            "FullActionName": "deeplens::GetAssociatedResources"
          },
          {
            "ActionName": "GetDeploymentStatus",
            "FullActionName": "deeplens::GetDeploymentStatus"
          },
          {
            "ActionName": "GetDevice",
            "FullActionName": "deeplens::GetDevice"
          },
          {
            "ActionName": "GetModel",
            "FullActionName": "deeplens::GetModel"
          },
          {
            "ActionName": "GetProject",
            "FullActionName": "deeplens::GetProject"
          }
        ]
      },
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "CreateDeviceCertificates",
            "FullActionName": "deeplens::CreateDeviceCertificates"
          },
          {
            "ActionName": "CreateModel",
            "FullActionName": "deeplens::CreateModel"
          },
          {
            "ActionName": "CreateProject",
            "FullActionName": "deeplens::CreateProject"
          },
          {
            "ActionName": "DeleteModel",
            "FullActionName": "deeplens::DeleteModel"
          },
          {
            "ActionName": "DeleteProject",
            "FullActionName": "deeplens::DeleteProject"
          },
          {
            "ActionName": "DeployProject",
            "FullActionName": "deeplens::DeployProject"
          },
          {
            "ActionName": "DeregisterDevice",
            "FullActionName": "deeplens::DeregisterDevice"
          },
          {
            "ActionName": "ImportProjectFromTemplate",
            "FullActionName": "deeplens::ImportProjectFromTemplate"
          },
          {
            "ActionName": "RegisterDevice",
            "FullActionName": "deeplens::RegisterDevice"
          },
          {
            "ActionName": "RemoveProject",
            "FullActionName": "deeplens::RemoveProject"
          },
          {
            "ActionName": "UpdateProject",
            "FullActionName": "deeplens::UpdateProject"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListDeployments",
            "FullActionName": "deeplens::ListDeployments"
          },
          {
            "ActionName": "ListDevices",
            "FullActionName": "deeplens::ListDevices"
          },
          {
            "ActionName": "ListModels",
            "FullActionName": "deeplens::ListModels"
          },
          {
            "ActionName": "ListProjects",
            "FullActionName": "deeplens::ListProjects"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "DeepRacer",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "CloneReinforcementLearningModel",
            "FullActionName": "deepracer::CloneReinforcementLearningModel"
          },
          {
            "ActionName": "CreateAccountResources",
            "FullActionName": "deepracer::CreateAccountResources"
          },
          {
            "ActionName": "CreateLeaderboardSubmission",
            "FullActionName": "deepracer::CreateLeaderboardSubmission"
          },
          {
            "ActionName": "CreateReinforcementLearningModel",
            "FullActionName": "deepracer::CreateReinforcementLearningModel"
          },
          {
            "ActionName": "DeleteAccountResources",
            "FullActionName": "deepracer::DeleteAccountResources"
          },
          {
            "ActionName": "DeleteModel",
            "FullActionName": "deepracer::DeleteModel"
          },
          {
            "ActionName": "SetAlias",
            "FullActionName": "deepracer::SetAlias"
          },
          {
            "ActionName": "StartEvaluation",
            "FullActionName": "deepracer::StartEvaluation"
          },
          {
            "ActionName": "StopEvaluation",
            "FullActionName": "deepracer::StopEvaluation"
          },
          {
            "ActionName": "StopTrainingReinforcementLearningModel",
            "FullActionName": "deepracer::StopTrainingReinforcementLearningModel"
          },
          {
            "ActionName": "TestRewardFunction",
            "FullActionName": "deepracer::TestRewardFunction"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "GetAccountResources",
            "FullActionName": "deepracer::GetAccountResources"
          },
          {
            "ActionName": "GetAlias",
            "FullActionName": "deepracer::GetAlias"
          },
          {
            "ActionName": "GetEvaluation",
            "FullActionName": "deepracer::GetEvaluation"
          },
          {
            "ActionName": "GetLatestUserSubmission",
            "FullActionName": "deepracer::GetLatestUserSubmission"
          },
          {
            "ActionName": "GetLeaderboard",
            "FullActionName": "deepracer::GetLeaderboard"
          },
          {
            "ActionName": "GetModel",
            "FullActionName": "deepracer::GetModel"
          },
          {
            "ActionName": "GetRankedUserSubmission",
            "FullActionName": "deepracer::GetRankedUserSubmission"
          },
          {
            "ActionName": "GetTrack",
            "FullActionName": "deepracer::GetTrack"
          },
          {
            "ActionName": "GetTrainingJob",
            "FullActionName": "deepracer::GetTrainingJob"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListEvaluations",
            "FullActionName": "deepracer::ListEvaluations"
          },
          {
            "ActionName": "ListLeaderboardSubmissions",
            "FullActionName": "deepracer::ListLeaderboardSubmissions"
          },
          {
            "ActionName": "ListLeaderboards",
            "FullActionName": "deepracer::ListLeaderboards"
          },
          {
            "ActionName": "ListModels",
            "FullActionName": "deepracer::ListModels"
          },
          {
            "ActionName": "ListTracks",
            "FullActionName": "deepracer::ListTracks"
          },
          {
            "ActionName": "ListTrainingJobs",
            "FullActionName": "deepracer::ListTrainingJobs"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Device Farm",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "CreateDevicePool",
            "FullActionName": "devicefarm::CreateDevicePool"
          },
          {
            "ActionName": "CreateInstanceProfile",
            "FullActionName": "devicefarm::CreateInstanceProfile"
          },
          {
            "ActionName": "CreateNetworkProfile",
            "FullActionName": "devicefarm::CreateNetworkProfile"
          },
          {
            "ActionName": "CreateRemoteAccessSession",
            "FullActionName": "devicefarm::CreateRemoteAccessSession"
          },
          {
            "ActionName": "CreateUpload",
            "FullActionName": "devicefarm::CreateUpload"
          },
          {
            "ActionName": "CreateVPCEConfiguration",
            "FullActionName": "devicefarm::CreateVPCEConfiguration"
          },
          {
            "ActionName": "DeleteDevicePool",
            "FullActionName": "devicefarm::DeleteDevicePool"
          },
          {
            "ActionName": "DeleteInstanceProfile",
            "FullActionName": "devicefarm::DeleteInstanceProfile"
          },
          {
            "ActionName": "DeleteNetworkProfile",
            "FullActionName": "devicefarm::DeleteNetworkProfile"
          },
          {
            "ActionName": "DeleteProject",
            "FullActionName": "devicefarm::DeleteProject"
          },
          {
            "ActionName": "DeleteRemoteAccessSession",
            "FullActionName": "devicefarm::DeleteRemoteAccessSession"
          },
          {
            "ActionName": "DeleteRun",
            "FullActionName": "devicefarm::DeleteRun"
          },
          {
            "ActionName": "DeleteUpload",
            "FullActionName": "devicefarm::DeleteUpload"
          },
          {
            "ActionName": "DeleteVPCEConfiguration",
            "FullActionName": "devicefarm::DeleteVPCEConfiguration"
          },
          {
            "ActionName": "InstallToRemoteAccessSession",
            "FullActionName": "devicefarm::InstallToRemoteAccessSession"
          },
          {
            "ActionName": "PurchaseOffering",
            "FullActionName": "devicefarm::PurchaseOffering"
          },
          {
            "ActionName": "RenewOffering",
            "FullActionName": "devicefarm::RenewOffering"
          },
          {
            "ActionName": "ScheduleRun",
            "FullActionName": "devicefarm::ScheduleRun"
          },
          {
            "ActionName": "StopJob",
            "FullActionName": "devicefarm::StopJob"
          },
          {
            "ActionName": "StopRemoteAccessSession",
            "FullActionName": "devicefarm::StopRemoteAccessSession"
          },
          {
            "ActionName": "StopRun",
            "FullActionName": "devicefarm::StopRun"
          },
          {
            "ActionName": "UpdateDeviceInstance",
            "FullActionName": "devicefarm::UpdateDeviceInstance"
          },
          {
            "ActionName": "UpdateDevicePool",
            "FullActionName": "devicefarm::UpdateDevicePool"
          },
          {
            "ActionName": "UpdateInstanceProfile",
            "FullActionName": "devicefarm::UpdateInstanceProfile"
          },
          {
            "ActionName": "UpdateNetworkProfile",
            "FullActionName": "devicefarm::UpdateNetworkProfile"
          },
          {
            "ActionName": "UpdateProject",
            "FullActionName": "devicefarm::UpdateProject"
          },
          {
            "ActionName": "UpdateUpload",
            "FullActionName": "devicefarm::UpdateUpload"
          },
          {
            "ActionName": "UpdateVPCEConfiguration",
            "FullActionName": "devicefarm::UpdateVPCEConfiguration"
          }
        ]
      },
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "CreateProject",
            "FullActionName": "devicefarm::CreateProject"
          },
          {
            "ActionName": "TagResource",
            "FullActionName": "devicefarm::TagResource"
          },
          {
            "ActionName": "UntagResource",
            "FullActionName": "devicefarm::UntagResource"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "GetAccountSettings",
            "FullActionName": "devicefarm::GetAccountSettings"
          },
          {
            "ActionName": "GetDevice",
            "FullActionName": "devicefarm::GetDevice"
          },
          {
            "ActionName": "GetDeviceInstance",
            "FullActionName": "devicefarm::GetDeviceInstance"
          },
          {
            "ActionName": "GetDevicePool",
            "FullActionName": "devicefarm::GetDevicePool"
          },
          {
            "ActionName": "GetDevicePoolCompatibility",
            "FullActionName": "devicefarm::GetDevicePoolCompatibility"
          },
          {
            "ActionName": "GetInstanceProfile",
            "FullActionName": "devicefarm::GetInstanceProfile"
          },
          {
            "ActionName": "GetJob",
            "FullActionName": "devicefarm::GetJob"
          },
          {
            "ActionName": "GetNetworkProfile",
            "FullActionName": "devicefarm::GetNetworkProfile"
          },
          {
            "ActionName": "GetOfferingStatus",
            "FullActionName": "devicefarm::GetOfferingStatus"
          },
          {
            "ActionName": "GetProject",
            "FullActionName": "devicefarm::GetProject"
          },
          {
            "ActionName": "GetRemoteAccessSession",
            "FullActionName": "devicefarm::GetRemoteAccessSession"
          },
          {
            "ActionName": "GetRun",
            "FullActionName": "devicefarm::GetRun"
          },
          {
            "ActionName": "GetSuite",
            "FullActionName": "devicefarm::GetSuite"
          },
          {
            "ActionName": "GetTest",
            "FullActionName": "devicefarm::GetTest"
          },
          {
            "ActionName": "GetUpload",
            "FullActionName": "devicefarm::GetUpload"
          },
          {
            "ActionName": "GetVPCEConfiguration",
            "FullActionName": "devicefarm::GetVPCEConfiguration"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListArtifacts",
            "FullActionName": "devicefarm::ListArtifacts"
          },
          {
            "ActionName": "ListDeviceInstances",
            "FullActionName": "devicefarm::ListDeviceInstances"
          },
          {
            "ActionName": "ListDevicePools",
            "FullActionName": "devicefarm::ListDevicePools"
          },
          {
            "ActionName": "ListDevices",
            "FullActionName": "devicefarm::ListDevices"
          },
          {
            "ActionName": "ListInstanceProfiles",
            "FullActionName": "devicefarm::ListInstanceProfiles"
          },
          {
            "ActionName": "ListJobs",
            "FullActionName": "devicefarm::ListJobs"
          },
          {
            "ActionName": "ListNetworkProfiles",
            "FullActionName": "devicefarm::ListNetworkProfiles"
          },
          {
            "ActionName": "ListOfferingPromotions",
            "FullActionName": "devicefarm::ListOfferingPromotions"
          },
          {
            "ActionName": "ListOfferingTransactions",
            "FullActionName": "devicefarm::ListOfferingTransactions"
          },
          {
            "ActionName": "ListOfferings",
            "FullActionName": "devicefarm::ListOfferings"
          },
          {
            "ActionName": "ListProjects",
            "FullActionName": "devicefarm::ListProjects"
          },
          {
            "ActionName": "ListRemoteAccessSessions",
            "FullActionName": "devicefarm::ListRemoteAccessSessions"
          },
          {
            "ActionName": "ListRuns",
            "FullActionName": "devicefarm::ListRuns"
          },
          {
            "ActionName": "ListSamples",
            "FullActionName": "devicefarm::ListSamples"
          },
          {
            "ActionName": "ListSuites",
            "FullActionName": "devicefarm::ListSuites"
          },
          {
            "ActionName": "ListTagsForResource",
            "FullActionName": "devicefarm::ListTagsForResource"
          },
          {
            "ActionName": "ListTests",
            "FullActionName": "devicefarm::ListTests"
          },
          {
            "ActionName": "ListUniqueProblems",
            "FullActionName": "devicefarm::ListUniqueProblems"
          },
          {
            "ActionName": "ListUploads",
            "FullActionName": "devicefarm::ListUploads"
          },
          {
            "ActionName": "ListVPCEConfigurations",
            "FullActionName": "devicefarm::ListVPCEConfigurations"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Direct Connect",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "AcceptDirectConnectGatewayAssociationProposal",
            "FullActionName": "directconnect::AcceptDirectConnectGatewayAssociationProposal"
          },
          {
            "ActionName": "AllocateConnectionOnInterconnect",
            "FullActionName": "directconnect::AllocateConnectionOnInterconnect"
          },
          {
            "ActionName": "AllocateHostedConnection",
            "FullActionName": "directconnect::AllocateHostedConnection"
          },
          {
            "ActionName": "AllocatePrivateVirtualInterface",
            "FullActionName": "directconnect::AllocatePrivateVirtualInterface"
          },
          {
            "ActionName": "AllocatePublicVirtualInterface",
            "FullActionName": "directconnect::AllocatePublicVirtualInterface"
          },
          {
            "ActionName": "AllocateTransitVirtualInterface",
            "FullActionName": "directconnect::AllocateTransitVirtualInterface"
          },
          {
            "ActionName": "AssociateConnectionWithLag",
            "FullActionName": "directconnect::AssociateConnectionWithLag"
          },
          {
            "ActionName": "AssociateHostedConnection",
            "FullActionName": "directconnect::AssociateHostedConnection"
          },
          {
            "ActionName": "AssociateVirtualInterface",
            "FullActionName": "directconnect::AssociateVirtualInterface"
          },
          {
            "ActionName": "ConfirmConnection",
            "FullActionName": "directconnect::ConfirmConnection"
          },
          {
            "ActionName": "ConfirmPrivateVirtualInterface",
            "FullActionName": "directconnect::ConfirmPrivateVirtualInterface"
          },
          {
            "ActionName": "ConfirmPublicVirtualInterface",
            "FullActionName": "directconnect::ConfirmPublicVirtualInterface"
          },
          {
            "ActionName": "ConfirmTransitVirtualInterface",
            "FullActionName": "directconnect::ConfirmTransitVirtualInterface"
          },
          {
            "ActionName": "CreateBGPPeer",
            "FullActionName": "directconnect::CreateBGPPeer"
          },
          {
            "ActionName": "CreateConnection",
            "FullActionName": "directconnect::CreateConnection"
          },
          {
            "ActionName": "CreateDirectConnectGateway",
            "FullActionName": "directconnect::CreateDirectConnectGateway"
          },
          {
            "ActionName": "CreateDirectConnectGatewayAssociation",
            "FullActionName": "directconnect::CreateDirectConnectGatewayAssociation"
          },
          {
            "ActionName": "CreateDirectConnectGatewayAssociationProposal",
            "FullActionName": "directconnect::CreateDirectConnectGatewayAssociationProposal"
          },
          {
            "ActionName": "CreateInterconnect",
            "FullActionName": "directconnect::CreateInterconnect"
          },
          {
            "ActionName": "CreateLag",
            "FullActionName": "directconnect::CreateLag"
          },
          {
            "ActionName": "CreatePrivateVirtualInterface",
            "FullActionName": "directconnect::CreatePrivateVirtualInterface"
          },
          {
            "ActionName": "CreatePublicVirtualInterface",
            "FullActionName": "directconnect::CreatePublicVirtualInterface"
          },
          {
            "ActionName": "CreateTransitVirtualInterface",
            "FullActionName": "directconnect::CreateTransitVirtualInterface"
          },
          {
            "ActionName": "DeleteBGPPeer",
            "FullActionName": "directconnect::DeleteBGPPeer"
          },
          {
            "ActionName": "DeleteConnection",
            "FullActionName": "directconnect::DeleteConnection"
          },
          {
            "ActionName": "DeleteDirectConnectGateway",
            "FullActionName": "directconnect::DeleteDirectConnectGateway"
          },
          {
            "ActionName": "DeleteDirectConnectGatewayAssociation",
            "FullActionName": "directconnect::DeleteDirectConnectGatewayAssociation"
          },
          {
            "ActionName": "DeleteDirectConnectGatewayAssociationProposal",
            "FullActionName": "directconnect::DeleteDirectConnectGatewayAssociationProposal"
          },
          {
            "ActionName": "DeleteInterconnect",
            "FullActionName": "directconnect::DeleteInterconnect"
          },
          {
            "ActionName": "DeleteLag",
            "FullActionName": "directconnect::DeleteLag"
          },
          {
            "ActionName": "DeleteVirtualInterface",
            "FullActionName": "directconnect::DeleteVirtualInterface"
          },
          {
            "ActionName": "DisassociateConnectionFromLag",
            "FullActionName": "directconnect::DisassociateConnectionFromLag"
          },
          {
            "ActionName": "UpdateDirectConnectGatewayAssociation",
            "FullActionName": "directconnect::UpdateDirectConnectGatewayAssociation"
          },
          {
            "ActionName": "UpdateLag",
            "FullActionName": "directconnect::UpdateLag"
          },
          {
            "ActionName": "UpdateVirtualInterfaceAttributes",
            "FullActionName": "directconnect::UpdateVirtualInterfaceAttributes"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeConnectionLoa",
            "FullActionName": "directconnect::DescribeConnectionLoa"
          },
          {
            "ActionName": "DescribeConnections",
            "FullActionName": "directconnect::DescribeConnections"
          },
          {
            "ActionName": "DescribeConnectionsOnInterconnect",
            "FullActionName": "directconnect::DescribeConnectionsOnInterconnect"
          },
          {
            "ActionName": "DescribeDirectConnectGatewayAssociationProposals",
            "FullActionName": "directconnect::DescribeDirectConnectGatewayAssociationProposals"
          },
          {
            "ActionName": "DescribeDirectConnectGatewayAssociations",
            "FullActionName": "directconnect::DescribeDirectConnectGatewayAssociations"
          },
          {
            "ActionName": "DescribeDirectConnectGatewayAttachments",
            "FullActionName": "directconnect::DescribeDirectConnectGatewayAttachments"
          },
          {
            "ActionName": "DescribeDirectConnectGateways",
            "FullActionName": "directconnect::DescribeDirectConnectGateways"
          },
          {
            "ActionName": "DescribeHostedConnections",
            "FullActionName": "directconnect::DescribeHostedConnections"
          },
          {
            "ActionName": "DescribeInterconnectLoa",
            "FullActionName": "directconnect::DescribeInterconnectLoa"
          },
          {
            "ActionName": "DescribeInterconnects",
            "FullActionName": "directconnect::DescribeInterconnects"
          },
          {
            "ActionName": "DescribeLags",
            "FullActionName": "directconnect::DescribeLags"
          },
          {
            "ActionName": "DescribeLoa",
            "FullActionName": "directconnect::DescribeLoa"
          },
          {
            "ActionName": "DescribeTags",
            "FullActionName": "directconnect::DescribeTags"
          },
          {
            "ActionName": "DescribeVirtualGateways",
            "FullActionName": "directconnect::DescribeVirtualGateways"
          },
          {
            "ActionName": "DescribeVirtualInterfaces",
            "FullActionName": "directconnect::DescribeVirtualInterfaces"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "DescribeLocations",
            "FullActionName": "directconnect::DescribeLocations"
          }
        ]
      },
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "TagResource",
            "FullActionName": "directconnect::TagResource"
          },
          {
            "ActionName": "UntagResource",
            "FullActionName": "directconnect::UntagResource"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Directory Service",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "AcceptSharedDirectory",
            "FullActionName": "ds::AcceptSharedDirectory"
          },
          {
            "ActionName": "AddIpRoutes",
            "FullActionName": "ds::AddIpRoutes"
          },
          {
            "ActionName": "AuthorizeApplication",
            "FullActionName": "ds::AuthorizeApplication"
          },
          {
            "ActionName": "CancelSchemaExtension",
            "FullActionName": "ds::CancelSchemaExtension"
          },
          {
            "ActionName": "CreateAlias",
            "FullActionName": "ds::CreateAlias"
          },
          {
            "ActionName": "CreateComputer",
            "FullActionName": "ds::CreateComputer"
          },
          {
            "ActionName": "CreateConditionalForwarder",
            "FullActionName": "ds::CreateConditionalForwarder"
          },
          {
            "ActionName": "CreateLogSubscription",
            "FullActionName": "ds::CreateLogSubscription"
          },
          {
            "ActionName": "CreateSnapshot",
            "FullActionName": "ds::CreateSnapshot"
          },
          {
            "ActionName": "CreateTrust",
            "FullActionName": "ds::CreateTrust"
          },
          {
            "ActionName": "DeleteConditionalForwarder",
            "FullActionName": "ds::DeleteConditionalForwarder"
          },
          {
            "ActionName": "DeleteDirectory",
            "FullActionName": "ds::DeleteDirectory"
          },
          {
            "ActionName": "DeleteLogSubscription",
            "FullActionName": "ds::DeleteLogSubscription"
          },
          {
            "ActionName": "DeleteSnapshot",
            "FullActionName": "ds::DeleteSnapshot"
          },
          {
            "ActionName": "DeleteTrust",
            "FullActionName": "ds::DeleteTrust"
          },
          {
            "ActionName": "DeregisterEventTopic",
            "FullActionName": "ds::DeregisterEventTopic"
          },
          {
            "ActionName": "DisableRadius",
            "FullActionName": "ds::DisableRadius"
          },
          {
            "ActionName": "DisableSso",
            "FullActionName": "ds::DisableSso"
          },
          {
            "ActionName": "EnableRadius",
            "FullActionName": "ds::EnableRadius"
          },
          {
            "ActionName": "EnableSso",
            "FullActionName": "ds::EnableSso"
          },
          {
            "ActionName": "RegisterEventTopic",
            "FullActionName": "ds::RegisterEventTopic"
          },
          {
            "ActionName": "RejectSharedDirectory",
            "FullActionName": "ds::RejectSharedDirectory"
          },
          {
            "ActionName": "RemoveIpRoutes",
            "FullActionName": "ds::RemoveIpRoutes"
          },
          {
            "ActionName": "ResetUserPassword",
            "FullActionName": "ds::ResetUserPassword"
          },
          {
            "ActionName": "RestoreFromSnapshot",
            "FullActionName": "ds::RestoreFromSnapshot"
          },
          {
            "ActionName": "ShareDirectory",
            "FullActionName": "ds::ShareDirectory"
          },
          {
            "ActionName": "StartSchemaExtension",
            "FullActionName": "ds::StartSchemaExtension"
          },
          {
            "ActionName": "UnauthorizeApplication",
            "FullActionName": "ds::UnauthorizeApplication"
          },
          {
            "ActionName": "UnshareDirectory",
            "FullActionName": "ds::UnshareDirectory"
          },
          {
            "ActionName": "UpdateConditionalForwarder",
            "FullActionName": "ds::UpdateConditionalForwarder"
          },
          {
            "ActionName": "UpdateNumberOfDomainControllers",
            "FullActionName": "ds::UpdateNumberOfDomainControllers"
          },
          {
            "ActionName": "UpdateRadius",
            "FullActionName": "ds::UpdateRadius"
          }
        ]
      },
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "AddTagsToResource",
            "FullActionName": "ds::AddTagsToResource"
          },
          {
            "ActionName": "ConnectDirectory",
            "FullActionName": "ds::ConnectDirectory"
          },
          {
            "ActionName": "CreateDirectory",
            "FullActionName": "ds::CreateDirectory"
          },
          {
            "ActionName": "CreateIdentityPoolDirectory",
            "FullActionName": "ds::CreateIdentityPoolDirectory"
          },
          {
            "ActionName": "CreateMicrosoftAD",
            "FullActionName": "ds::CreateMicrosoftAD"
          },
          {
            "ActionName": "RemoveTagsFromResource",
            "FullActionName": "ds::RemoveTagsFromResource"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeConditionalForwarders",
            "FullActionName": "ds::DescribeConditionalForwarders"
          },
          {
            "ActionName": "DescribeDomainControllers",
            "FullActionName": "ds::DescribeDomainControllers"
          },
          {
            "ActionName": "DescribeEventTopics",
            "FullActionName": "ds::DescribeEventTopics"
          },
          {
            "ActionName": "DescribeSharedDirectories",
            "FullActionName": "ds::DescribeSharedDirectories"
          },
          {
            "ActionName": "DescribeSnapshots",
            "FullActionName": "ds::DescribeSnapshots"
          },
          {
            "ActionName": "DescribeTrusts",
            "FullActionName": "ds::DescribeTrusts"
          },
          {
            "ActionName": "GetAuthorizedApplicationDetails",
            "FullActionName": "ds::GetAuthorizedApplicationDetails"
          },
          {
            "ActionName": "GetDirectoryLimits",
            "FullActionName": "ds::GetDirectoryLimits"
          },
          {
            "ActionName": "GetSnapshotLimits",
            "FullActionName": "ds::GetSnapshotLimits"
          },
          {
            "ActionName": "ListAuthorizedApplications",
            "FullActionName": "ds::ListAuthorizedApplications"
          },
          {
            "ActionName": "ListIpRoutes",
            "FullActionName": "ds::ListIpRoutes"
          },
          {
            "ActionName": "ListLogSubscriptions",
            "FullActionName": "ds::ListLogSubscriptions"
          },
          {
            "ActionName": "ListTagsForResource",
            "FullActionName": "ds::ListTagsForResource"
          },
          {
            "ActionName": "VerifyTrust",
            "FullActionName": "ds::VerifyTrust"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "DescribeDirectories",
            "FullActionName": "ds::DescribeDirectories"
          },
          {
            "ActionName": "ListSchemaExtensions",
            "FullActionName": "ds::ListSchemaExtensions"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "DynamoDB",
    "AccessLevels": [
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "BatchGetItem",
            "FullActionName": "dynamodb::BatchGetItem"
          },
          {
            "ActionName": "ConditionCheckItem",
            "FullActionName": "dynamodb::ConditionCheckItem"
          },
          {
            "ActionName": "DescribeBackup",
            "FullActionName": "dynamodb::DescribeBackup"
          },
          {
            "ActionName": "DescribeContinuousBackups",
            "FullActionName": "dynamodb::DescribeContinuousBackups"
          },
          {
            "ActionName": "DescribeGlobalTable",
            "FullActionName": "dynamodb::DescribeGlobalTable"
          },
          {
            "ActionName": "DescribeGlobalTableSettings",
            "FullActionName": "dynamodb::DescribeGlobalTableSettings"
          },
          {
            "ActionName": "DescribeLimits",
            "FullActionName": "dynamodb::DescribeLimits"
          },
          {
            "ActionName": "DescribeReservedCapacity",
            "FullActionName": "dynamodb::DescribeReservedCapacity"
          },
          {
            "ActionName": "DescribeReservedCapacityOfferings",
            "FullActionName": "dynamodb::DescribeReservedCapacityOfferings"
          },
          {
            "ActionName": "DescribeStream",
            "FullActionName": "dynamodb::DescribeStream"
          },
          {
            "ActionName": "DescribeTable",
            "FullActionName": "dynamodb::DescribeTable"
          },
          {
            "ActionName": "DescribeTimeToLive",
            "FullActionName": "dynamodb::DescribeTimeToLive"
          },
          {
            "ActionName": "GetItem",
            "FullActionName": "dynamodb::GetItem"
          },
          {
            "ActionName": "GetRecords",
            "FullActionName": "dynamodb::GetRecords"
          },
          {
            "ActionName": "GetShardIterator",
            "FullActionName": "dynamodb::GetShardIterator"
          },
          {
            "ActionName": "ListStreams",
            "FullActionName": "dynamodb::ListStreams"
          },
          {
            "ActionName": "ListTagsOfResource",
            "FullActionName": "dynamodb::ListTagsOfResource"
          },
          {
            "ActionName": "Query",
            "FullActionName": "dynamodb::Query"
          },
          {
            "ActionName": "Scan",
            "FullActionName": "dynamodb::Scan"
          }
        ]
      },
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "BatchWriteItem",
            "FullActionName": "dynamodb::BatchWriteItem"
          },
          {
            "ActionName": "CreateBackup",
            "FullActionName": "dynamodb::CreateBackup"
          },
          {
            "ActionName": "CreateGlobalTable",
            "FullActionName": "dynamodb::CreateGlobalTable"
          },
          {
            "ActionName": "CreateTable",
            "FullActionName": "dynamodb::CreateTable"
          },
          {
            "ActionName": "DeleteBackup",
            "FullActionName": "dynamodb::DeleteBackup"
          },
          {
            "ActionName": "DeleteItem",
            "FullActionName": "dynamodb::DeleteItem"
          },
          {
            "ActionName": "DeleteTable",
            "FullActionName": "dynamodb::DeleteTable"
          },
          {
            "ActionName": "PurchaseReservedCapacityOfferings",
            "FullActionName": "dynamodb::PurchaseReservedCapacityOfferings"
          },
          {
            "ActionName": "PutItem",
            "FullActionName": "dynamodb::PutItem"
          },
          {
            "ActionName": "RestoreTableFromBackup",
            "FullActionName": "dynamodb::RestoreTableFromBackup"
          },
          {
            "ActionName": "RestoreTableToPointInTime",
            "FullActionName": "dynamodb::RestoreTableToPointInTime"
          },
          {
            "ActionName": "UpdateContinuousBackups",
            "FullActionName": "dynamodb::UpdateContinuousBackups"
          },
          {
            "ActionName": "UpdateGlobalTable",
            "FullActionName": "dynamodb::UpdateGlobalTable"
          },
          {
            "ActionName": "UpdateGlobalTableSettings",
            "FullActionName": "dynamodb::UpdateGlobalTableSettings"
          },
          {
            "ActionName": "UpdateItem",
            "FullActionName": "dynamodb::UpdateItem"
          },
          {
            "ActionName": "UpdateTable",
            "FullActionName": "dynamodb::UpdateTable"
          },
          {
            "ActionName": "UpdateTimeToLive",
            "FullActionName": "dynamodb::UpdateTimeToLive"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListBackups",
            "FullActionName": "dynamodb::ListBackups"
          },
          {
            "ActionName": "ListGlobalTables",
            "FullActionName": "dynamodb::ListGlobalTables"
          },
          {
            "ActionName": "ListTables",
            "FullActionName": "dynamodb::ListTables"
          }
        ]
      },
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "TagResource",
            "FullActionName": "dynamodb::TagResource"
          },
          {
            "ActionName": "UntagResource",
            "FullActionName": "dynamodb::UntagResource"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "DynamoDBAccelerator",
    "AccessLevels": [
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "BatchGetItem",
            "FullActionName": "dax::BatchGetItem"
          },
          {
            "ActionName": "ConditionCheckItem",
            "FullActionName": "dax::ConditionCheckItem"
          },
          {
            "ActionName": "DescribeParameters",
            "FullActionName": "dax::DescribeParameters"
          },
          {
            "ActionName": "GetItem",
            "FullActionName": "dax::GetItem"
          },
          {
            "ActionName": "ListTags",
            "FullActionName": "dax::ListTags"
          },
          {
            "ActionName": "Query",
            "FullActionName": "dax::Query"
          },
          {
            "ActionName": "Scan",
            "FullActionName": "dax::Scan"
          }
        ]
      },
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "BatchWriteItem",
            "FullActionName": "dax::BatchWriteItem"
          },
          {
            "ActionName": "CreateCluster",
            "FullActionName": "dax::CreateCluster"
          },
          {
            "ActionName": "CreateParameterGroup",
            "FullActionName": "dax::CreateParameterGroup"
          },
          {
            "ActionName": "CreateSubnetGroup",
            "FullActionName": "dax::CreateSubnetGroup"
          },
          {
            "ActionName": "DecreaseReplicationFactor",
            "FullActionName": "dax::DecreaseReplicationFactor"
          },
          {
            "ActionName": "DeleteCluster",
            "FullActionName": "dax::DeleteCluster"
          },
          {
            "ActionName": "DeleteItem",
            "FullActionName": "dax::DeleteItem"
          },
          {
            "ActionName": "DeleteParameterGroup",
            "FullActionName": "dax::DeleteParameterGroup"
          },
          {
            "ActionName": "DeleteSubnetGroup",
            "FullActionName": "dax::DeleteSubnetGroup"
          },
          {
            "ActionName": "IncreaseReplicationFactor",
            "FullActionName": "dax::IncreaseReplicationFactor"
          },
          {
            "ActionName": "PutItem",
            "FullActionName": "dax::PutItem"
          },
          {
            "ActionName": "RebootNode",
            "FullActionName": "dax::RebootNode"
          },
          {
            "ActionName": "UpdateCluster",
            "FullActionName": "dax::UpdateCluster"
          },
          {
            "ActionName": "UpdateItem",
            "FullActionName": "dax::UpdateItem"
          },
          {
            "ActionName": "UpdateParameterGroup",
            "FullActionName": "dax::UpdateParameterGroup"
          },
          {
            "ActionName": "UpdateSubnetGroup",
            "FullActionName": "dax::UpdateSubnetGroup"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "DescribeClusters",
            "FullActionName": "dax::DescribeClusters"
          },
          {
            "ActionName": "DescribeDefaultParameters",
            "FullActionName": "dax::DescribeDefaultParameters"
          },
          {
            "ActionName": "DescribeEvents",
            "FullActionName": "dax::DescribeEvents"
          },
          {
            "ActionName": "DescribeParameterGroups",
            "FullActionName": "dax::DescribeParameterGroups"
          },
          {
            "ActionName": "DescribeSubnetGroups",
            "FullActionName": "dax::DescribeSubnetGroups"
          }
        ]
      },
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "TagResource",
            "FullActionName": "dax::TagResource"
          },
          {
            "ActionName": "UntagResource",
            "FullActionName": "dax::UntagResource"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "EC2",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "AcceptReservedInstancesExchangeQuote",
            "FullActionName": "ec2::AcceptReservedInstancesExchangeQuote"
          },
          {
            "ActionName": "AcceptTransitGatewayVpcAttachment",
            "FullActionName": "ec2::AcceptTransitGatewayVpcAttachment"
          },
          {
            "ActionName": "AcceptVpcEndpointConnections",
            "FullActionName": "ec2::AcceptVpcEndpointConnections"
          },
          {
            "ActionName": "AcceptVpcPeeringConnection",
            "FullActionName": "ec2::AcceptVpcPeeringConnection"
          },
          {
            "ActionName": "AdvertiseByoipCidr",
            "FullActionName": "ec2::AdvertiseByoipCidr"
          },
          {
            "ActionName": "AllocateAddress",
            "FullActionName": "ec2::AllocateAddress"
          },
          {
            "ActionName": "AllocateHosts",
            "FullActionName": "ec2::AllocateHosts"
          },
          {
            "ActionName": "ApplySecurityGroupsToClientVpnTargetNetwork",
            "FullActionName": "ec2::ApplySecurityGroupsToClientVpnTargetNetwork"
          },
          {
            "ActionName": "AssignIpv6Addresses",
            "FullActionName": "ec2::AssignIpv6Addresses"
          },
          {
            "ActionName": "AssignPrivateIpAddresses",
            "FullActionName": "ec2::AssignPrivateIpAddresses"
          },
          {
            "ActionName": "AssociateAddress",
            "FullActionName": "ec2::AssociateAddress"
          },
          {
            "ActionName": "AssociateClientVpnTargetNetwork",
            "FullActionName": "ec2::AssociateClientVpnTargetNetwork"
          },
          {
            "ActionName": "AssociateDhcpOptions",
            "FullActionName": "ec2::AssociateDhcpOptions"
          },
          {
            "ActionName": "AssociateIamInstanceProfile",
            "FullActionName": "ec2::AssociateIamInstanceProfile"
          },
          {
            "ActionName": "AssociateRouteTable",
            "FullActionName": "ec2::AssociateRouteTable"
          },
          {
            "ActionName": "AssociateSubnetCidrBlock",
            "FullActionName": "ec2::AssociateSubnetCidrBlock"
          },
          {
            "ActionName": "AssociateTransitGatewayRouteTable",
            "FullActionName": "ec2::AssociateTransitGatewayRouteTable"
          },
          {
            "ActionName": "AssociateVpcCidrBlock",
            "FullActionName": "ec2::AssociateVpcCidrBlock"
          },
          {
            "ActionName": "AttachClassicLinkVpc",
            "FullActionName": "ec2::AttachClassicLinkVpc"
          },
          {
            "ActionName": "AttachInternetGateway",
            "FullActionName": "ec2::AttachInternetGateway"
          },
          {
            "ActionName": "AttachNetworkInterface",
            "FullActionName": "ec2::AttachNetworkInterface"
          },
          {
            "ActionName": "AttachVolume",
            "FullActionName": "ec2::AttachVolume"
          },
          {
            "ActionName": "AttachVpnGateway",
            "FullActionName": "ec2::AttachVpnGateway"
          },
          {
            "ActionName": "AuthorizeClientVpnIngress",
            "FullActionName": "ec2::AuthorizeClientVpnIngress"
          },
          {
            "ActionName": "AuthorizeSecurityGroupEgress",
            "FullActionName": "ec2::AuthorizeSecurityGroupEgress"
          },
          {
            "ActionName": "AuthorizeSecurityGroupIngress",
            "FullActionName": "ec2::AuthorizeSecurityGroupIngress"
          },
          {
            "ActionName": "BundleInstance",
            "FullActionName": "ec2::BundleInstance"
          },
          {
            "ActionName": "CancelBundleTask",
            "FullActionName": "ec2::CancelBundleTask"
          },
          {
            "ActionName": "CancelCapacityReservation",
            "FullActionName": "ec2::CancelCapacityReservation"
          },
          {
            "ActionName": "CancelConversionTask",
            "FullActionName": "ec2::CancelConversionTask"
          },
          {
            "ActionName": "CancelExportTask",
            "FullActionName": "ec2::CancelExportTask"
          },
          {
            "ActionName": "CancelImportTask",
            "FullActionName": "ec2::CancelImportTask"
          },
          {
            "ActionName": "CancelReservedInstancesListing",
            "FullActionName": "ec2::CancelReservedInstancesListing"
          },
          {
            "ActionName": "CancelSpotFleetRequests",
            "FullActionName": "ec2::CancelSpotFleetRequests"
          },
          {
            "ActionName": "CancelSpotInstanceRequests",
            "FullActionName": "ec2::CancelSpotInstanceRequests"
          },
          {
            "ActionName": "ConfirmProductInstance",
            "FullActionName": "ec2::ConfirmProductInstance"
          },
          {
            "ActionName": "CopyFpgaImage",
            "FullActionName": "ec2::CopyFpgaImage"
          },
          {
            "ActionName": "CopyImage",
            "FullActionName": "ec2::CopyImage"
          },
          {
            "ActionName": "CopySnapshot",
            "FullActionName": "ec2::CopySnapshot"
          },
          {
            "ActionName": "CreateCapacityReservation",
            "FullActionName": "ec2::CreateCapacityReservation"
          },
          {
            "ActionName": "CreateClientVpnEndpoint",
            "FullActionName": "ec2::CreateClientVpnEndpoint"
          },
          {
            "ActionName": "CreateClientVpnRoute",
            "FullActionName": "ec2::CreateClientVpnRoute"
          },
          {
            "ActionName": "CreateCustomerGateway",
            "FullActionName": "ec2::CreateCustomerGateway"
          },
          {
            "ActionName": "CreateDefaultSubnet",
            "FullActionName": "ec2::CreateDefaultSubnet"
          },
          {
            "ActionName": "CreateDefaultVpc",
            "FullActionName": "ec2::CreateDefaultVpc"
          },
          {
            "ActionName": "CreateDhcpOptions",
            "FullActionName": "ec2::CreateDhcpOptions"
          },
          {
            "ActionName": "CreateEgressOnlyInternetGateway",
            "FullActionName": "ec2::CreateEgressOnlyInternetGateway"
          },
          {
            "ActionName": "CreateFleet",
            "FullActionName": "ec2::CreateFleet"
          },
          {
            "ActionName": "CreateFlowLogs",
            "FullActionName": "ec2::CreateFlowLogs"
          },
          {
            "ActionName": "CreateFpgaImage",
            "FullActionName": "ec2::CreateFpgaImage"
          },
          {
            "ActionName": "CreateImage",
            "FullActionName": "ec2::CreateImage"
          },
          {
            "ActionName": "CreateInstanceExportTask",
            "FullActionName": "ec2::CreateInstanceExportTask"
          },
          {
            "ActionName": "CreateInternetGateway",
            "FullActionName": "ec2::CreateInternetGateway"
          },
          {
            "ActionName": "CreateKeyPair",
            "FullActionName": "ec2::CreateKeyPair"
          },
          {
            "ActionName": "CreateLaunchTemplate",
            "FullActionName": "ec2::CreateLaunchTemplate"
          },
          {
            "ActionName": "CreateLaunchTemplateVersion",
            "FullActionName": "ec2::CreateLaunchTemplateVersion"
          },
          {
            "ActionName": "CreateNatGateway",
            "FullActionName": "ec2::CreateNatGateway"
          },
          {
            "ActionName": "CreateNetworkAcl",
            "FullActionName": "ec2::CreateNetworkAcl"
          },
          {
            "ActionName": "CreateNetworkAclEntry",
            "FullActionName": "ec2::CreateNetworkAclEntry"
          },
          {
            "ActionName": "CreateNetworkInterface",
            "FullActionName": "ec2::CreateNetworkInterface"
          },
          {
            "ActionName": "CreateNetworkInterfacePermission",
            "FullActionName": "ec2::CreateNetworkInterfacePermission"
          },
          {
            "ActionName": "CreatePlacementGroup",
            "FullActionName": "ec2::CreatePlacementGroup"
          },
          {
            "ActionName": "CreateReservedInstancesListing",
            "FullActionName": "ec2::CreateReservedInstancesListing"
          },
          {
            "ActionName": "CreateRoute",
            "FullActionName": "ec2::CreateRoute"
          },
          {
            "ActionName": "CreateRouteTable",
            "FullActionName": "ec2::CreateRouteTable"
          },
          {
            "ActionName": "CreateSecurityGroup",
            "FullActionName": "ec2::CreateSecurityGroup"
          },
          {
            "ActionName": "CreateSnapshot",
            "FullActionName": "ec2::CreateSnapshot"
          },
          {
            "ActionName": "CreateSnapshots",
            "FullActionName": "ec2::CreateSnapshots"
          },
          {
            "ActionName": "CreateSpotDatafeedSubscription",
            "FullActionName": "ec2::CreateSpotDatafeedSubscription"
          },
          {
            "ActionName": "CreateSubnet",
            "FullActionName": "ec2::CreateSubnet"
          },
          {
            "ActionName": "CreateTrafficMirrorFilter",
            "FullActionName": "ec2::CreateTrafficMirrorFilter"
          },
          {
            "ActionName": "CreateTrafficMirrorFilterRule",
            "FullActionName": "ec2::CreateTrafficMirrorFilterRule"
          },
          {
            "ActionName": "CreateTrafficMirrorSession",
            "FullActionName": "ec2::CreateTrafficMirrorSession"
          },
          {
            "ActionName": "CreateTrafficMirrorTarget",
            "FullActionName": "ec2::CreateTrafficMirrorTarget"
          },
          {
            "ActionName": "CreateTransitGateway",
            "FullActionName": "ec2::CreateTransitGateway"
          },
          {
            "ActionName": "CreateTransitGatewayRoute",
            "FullActionName": "ec2::CreateTransitGatewayRoute"
          },
          {
            "ActionName": "CreateTransitGatewayRouteTable",
            "FullActionName": "ec2::CreateTransitGatewayRouteTable"
          },
          {
            "ActionName": "CreateTransitGatewayVpcAttachment",
            "FullActionName": "ec2::CreateTransitGatewayVpcAttachment"
          },
          {
            "ActionName": "CreateVolume",
            "FullActionName": "ec2::CreateVolume"
          },
          {
            "ActionName": "CreateVpc",
            "FullActionName": "ec2::CreateVpc"
          },
          {
            "ActionName": "CreateVpcEndpoint",
            "FullActionName": "ec2::CreateVpcEndpoint"
          },
          {
            "ActionName": "CreateVpcEndpointConnectionNotification",
            "FullActionName": "ec2::CreateVpcEndpointConnectionNotification"
          },
          {
            "ActionName": "CreateVpcEndpointServiceConfiguration",
            "FullActionName": "ec2::CreateVpcEndpointServiceConfiguration"
          },
          {
            "ActionName": "CreateVpcPeeringConnection",
            "FullActionName": "ec2::CreateVpcPeeringConnection"
          },
          {
            "ActionName": "CreateVpnConnection",
            "FullActionName": "ec2::CreateVpnConnection"
          },
          {
            "ActionName": "CreateVpnConnectionRoute",
            "FullActionName": "ec2::CreateVpnConnectionRoute"
          },
          {
            "ActionName": "CreateVpnGateway",
            "FullActionName": "ec2::CreateVpnGateway"
          },
          {
            "ActionName": "DeleteClientVpnEndpoint",
            "FullActionName": "ec2::DeleteClientVpnEndpoint"
          },
          {
            "ActionName": "DeleteClientVpnRoute",
            "FullActionName": "ec2::DeleteClientVpnRoute"
          },
          {
            "ActionName": "DeleteCustomerGateway",
            "FullActionName": "ec2::DeleteCustomerGateway"
          },
          {
            "ActionName": "DeleteDhcpOptions",
            "FullActionName": "ec2::DeleteDhcpOptions"
          },
          {
            "ActionName": "DeleteEgressOnlyInternetGateway",
            "FullActionName": "ec2::DeleteEgressOnlyInternetGateway"
          },
          {
            "ActionName": "DeleteFleets",
            "FullActionName": "ec2::DeleteFleets"
          },
          {
            "ActionName": "DeleteFlowLogs",
            "FullActionName": "ec2::DeleteFlowLogs"
          },
          {
            "ActionName": "DeleteFpgaImage",
            "FullActionName": "ec2::DeleteFpgaImage"
          },
          {
            "ActionName": "DeleteInternetGateway",
            "FullActionName": "ec2::DeleteInternetGateway"
          },
          {
            "ActionName": "DeleteKeyPair",
            "FullActionName": "ec2::DeleteKeyPair"
          },
          {
            "ActionName": "DeleteLaunchTemplate",
            "FullActionName": "ec2::DeleteLaunchTemplate"
          },
          {
            "ActionName": "DeleteLaunchTemplateVersions",
            "FullActionName": "ec2::DeleteLaunchTemplateVersions"
          },
          {
            "ActionName": "DeleteNatGateway",
            "FullActionName": "ec2::DeleteNatGateway"
          },
          {
            "ActionName": "DeleteNetworkAcl",
            "FullActionName": "ec2::DeleteNetworkAcl"
          },
          {
            "ActionName": "DeleteNetworkAclEntry",
            "FullActionName": "ec2::DeleteNetworkAclEntry"
          },
          {
            "ActionName": "DeleteNetworkInterface",
            "FullActionName": "ec2::DeleteNetworkInterface"
          },
          {
            "ActionName": "DeleteNetworkInterfacePermission",
            "FullActionName": "ec2::DeleteNetworkInterfacePermission"
          },
          {
            "ActionName": "DeletePlacementGroup",
            "FullActionName": "ec2::DeletePlacementGroup"
          },
          {
            "ActionName": "DeleteRoute",
            "FullActionName": "ec2::DeleteRoute"
          },
          {
            "ActionName": "DeleteRouteTable",
            "FullActionName": "ec2::DeleteRouteTable"
          },
          {
            "ActionName": "DeleteSecurityGroup",
            "FullActionName": "ec2::DeleteSecurityGroup"
          },
          {
            "ActionName": "DeleteSnapshot",
            "FullActionName": "ec2::DeleteSnapshot"
          },
          {
            "ActionName": "DeleteSpotDatafeedSubscription",
            "FullActionName": "ec2::DeleteSpotDatafeedSubscription"
          },
          {
            "ActionName": "DeleteSubnet",
            "FullActionName": "ec2::DeleteSubnet"
          },
          {
            "ActionName": "DeleteTrafficMirrorFilter",
            "FullActionName": "ec2::DeleteTrafficMirrorFilter"
          },
          {
            "ActionName": "DeleteTrafficMirrorFilterRule",
            "FullActionName": "ec2::DeleteTrafficMirrorFilterRule"
          },
          {
            "ActionName": "DeleteTrafficMirrorSession",
            "FullActionName": "ec2::DeleteTrafficMirrorSession"
          },
          {
            "ActionName": "DeleteTrafficMirrorTarget",
            "FullActionName": "ec2::DeleteTrafficMirrorTarget"
          },
          {
            "ActionName": "DeleteTransitGateway",
            "FullActionName": "ec2::DeleteTransitGateway"
          },
          {
            "ActionName": "DeleteTransitGatewayRoute",
            "FullActionName": "ec2::DeleteTransitGatewayRoute"
          },
          {
            "ActionName": "DeleteTransitGatewayRouteTable",
            "FullActionName": "ec2::DeleteTransitGatewayRouteTable"
          },
          {
            "ActionName": "DeleteTransitGatewayVpcAttachment",
            "FullActionName": "ec2::DeleteTransitGatewayVpcAttachment"
          },
          {
            "ActionName": "DeleteVolume",
            "FullActionName": "ec2::DeleteVolume"
          },
          {
            "ActionName": "DeleteVpc",
            "FullActionName": "ec2::DeleteVpc"
          },
          {
            "ActionName": "DeleteVpcEndpointConnectionNotifications",
            "FullActionName": "ec2::DeleteVpcEndpointConnectionNotifications"
          },
          {
            "ActionName": "DeleteVpcEndpointServiceConfigurations",
            "FullActionName": "ec2::DeleteVpcEndpointServiceConfigurations"
          },
          {
            "ActionName": "DeleteVpcEndpoints",
            "FullActionName": "ec2::DeleteVpcEndpoints"
          },
          {
            "ActionName": "DeleteVpcPeeringConnection",
            "FullActionName": "ec2::DeleteVpcPeeringConnection"
          },
          {
            "ActionName": "DeleteVpnConnection",
            "FullActionName": "ec2::DeleteVpnConnection"
          },
          {
            "ActionName": "DeleteVpnConnectionRoute",
            "FullActionName": "ec2::DeleteVpnConnectionRoute"
          },
          {
            "ActionName": "DeleteVpnGateway",
            "FullActionName": "ec2::DeleteVpnGateway"
          },
          {
            "ActionName": "DeprovisionByoipCidr",
            "FullActionName": "ec2::DeprovisionByoipCidr"
          },
          {
            "ActionName": "DeregisterImage",
            "FullActionName": "ec2::DeregisterImage"
          },
          {
            "ActionName": "DetachClassicLinkVpc",
            "FullActionName": "ec2::DetachClassicLinkVpc"
          },
          {
            "ActionName": "DetachInternetGateway",
            "FullActionName": "ec2::DetachInternetGateway"
          },
          {
            "ActionName": "DetachNetworkInterface",
            "FullActionName": "ec2::DetachNetworkInterface"
          },
          {
            "ActionName": "DetachVolume",
            "FullActionName": "ec2::DetachVolume"
          },
          {
            "ActionName": "DetachVpnGateway",
            "FullActionName": "ec2::DetachVpnGateway"
          },
          {
            "ActionName": "DisableEbsEncryptionByDefault",
            "FullActionName": "ec2::DisableEbsEncryptionByDefault"
          },
          {
            "ActionName": "DisableTransitGatewayRouteTablePropagation",
            "FullActionName": "ec2::DisableTransitGatewayRouteTablePropagation"
          },
          {
            "ActionName": "DisableVgwRoutePropagation",
            "FullActionName": "ec2::DisableVgwRoutePropagation"
          },
          {
            "ActionName": "DisableVpcClassicLink",
            "FullActionName": "ec2::DisableVpcClassicLink"
          },
          {
            "ActionName": "DisableVpcClassicLinkDnsSupport",
            "FullActionName": "ec2::DisableVpcClassicLinkDnsSupport"
          },
          {
            "ActionName": "DisassociateAddress",
            "FullActionName": "ec2::DisassociateAddress"
          },
          {
            "ActionName": "DisassociateClientVpnTargetNetwork",
            "FullActionName": "ec2::DisassociateClientVpnTargetNetwork"
          },
          {
            "ActionName": "DisassociateIamInstanceProfile",
            "FullActionName": "ec2::DisassociateIamInstanceProfile"
          },
          {
            "ActionName": "DisassociateRouteTable",
            "FullActionName": "ec2::DisassociateRouteTable"
          },
          {
            "ActionName": "DisassociateSubnetCidrBlock",
            "FullActionName": "ec2::DisassociateSubnetCidrBlock"
          },
          {
            "ActionName": "DisassociateTransitGatewayRouteTable",
            "FullActionName": "ec2::DisassociateTransitGatewayRouteTable"
          },
          {
            "ActionName": "DisassociateVpcCidrBlock",
            "FullActionName": "ec2::DisassociateVpcCidrBlock"
          },
          {
            "ActionName": "EnableEbsEncryptionByDefault",
            "FullActionName": "ec2::EnableEbsEncryptionByDefault"
          },
          {
            "ActionName": "EnableTransitGatewayRouteTablePropagation",
            "FullActionName": "ec2::EnableTransitGatewayRouteTablePropagation"
          },
          {
            "ActionName": "EnableVgwRoutePropagation",
            "FullActionName": "ec2::EnableVgwRoutePropagation"
          },
          {
            "ActionName": "EnableVolumeIO",
            "FullActionName": "ec2::EnableVolumeIO"
          },
          {
            "ActionName": "EnableVpcClassicLink",
            "FullActionName": "ec2::EnableVpcClassicLink"
          },
          {
            "ActionName": "EnableVpcClassicLinkDnsSupport",
            "FullActionName": "ec2::EnableVpcClassicLinkDnsSupport"
          },
          {
            "ActionName": "ExportTransitGatewayRoutes",
            "FullActionName": "ec2::ExportTransitGatewayRoutes"
          },
          {
            "ActionName": "ImportClientVpnClientCertificateRevocationList",
            "FullActionName": "ec2::ImportClientVpnClientCertificateRevocationList"
          },
          {
            "ActionName": "ImportImage",
            "FullActionName": "ec2::ImportImage"
          },
          {
            "ActionName": "ImportInstance",
            "FullActionName": "ec2::ImportInstance"
          },
          {
            "ActionName": "ImportKeyPair",
            "FullActionName": "ec2::ImportKeyPair"
          },
          {
            "ActionName": "ImportSnapshot",
            "FullActionName": "ec2::ImportSnapshot"
          },
          {
            "ActionName": "ImportVolume",
            "FullActionName": "ec2::ImportVolume"
          },
          {
            "ActionName": "ModifyCapacityReservation",
            "FullActionName": "ec2::ModifyCapacityReservation"
          },
          {
            "ActionName": "ModifyClientVpnEndpoint",
            "FullActionName": "ec2::ModifyClientVpnEndpoint"
          },
          {
            "ActionName": "ModifyEbsDefaultKmsKeyId",
            "FullActionName": "ec2::ModifyEbsDefaultKmsKeyId"
          },
          {
            "ActionName": "ModifyFleet",
            "FullActionName": "ec2::ModifyFleet"
          },
          {
            "ActionName": "ModifyFpgaImageAttribute",
            "FullActionName": "ec2::ModifyFpgaImageAttribute"
          },
          {
            "ActionName": "ModifyHosts",
            "FullActionName": "ec2::ModifyHosts"
          },
          {
            "ActionName": "ModifyIdFormat",
            "FullActionName": "ec2::ModifyIdFormat"
          },
          {
            "ActionName": "ModifyIdentityIdFormat",
            "FullActionName": "ec2::ModifyIdentityIdFormat"
          },
          {
            "ActionName": "ModifyImageAttribute",
            "FullActionName": "ec2::ModifyImageAttribute"
          },
          {
            "ActionName": "ModifyInstanceAttribute",
            "FullActionName": "ec2::ModifyInstanceAttribute"
          },
          {
            "ActionName": "ModifyInstanceCapacityReservationAttributes",
            "FullActionName": "ec2::ModifyInstanceCapacityReservationAttributes"
          },
          {
            "ActionName": "ModifyInstanceCreditSpecification",
            "FullActionName": "ec2::ModifyInstanceCreditSpecification"
          },
          {
            "ActionName": "ModifyInstanceEventStartTime",
            "FullActionName": "ec2::ModifyInstanceEventStartTime"
          },
          {
            "ActionName": "ModifyInstancePlacement",
            "FullActionName": "ec2::ModifyInstancePlacement"
          },
          {
            "ActionName": "ModifyLaunchTemplate",
            "FullActionName": "ec2::ModifyLaunchTemplate"
          },
          {
            "ActionName": "ModifyNetworkInterfaceAttribute",
            "FullActionName": "ec2::ModifyNetworkInterfaceAttribute"
          },
          {
            "ActionName": "ModifyReservedInstances",
            "FullActionName": "ec2::ModifyReservedInstances"
          },
          {
            "ActionName": "ModifySnapshotAttribute",
            "FullActionName": "ec2::ModifySnapshotAttribute"
          },
          {
            "ActionName": "ModifySpotFleetRequest",
            "FullActionName": "ec2::ModifySpotFleetRequest"
          },
          {
            "ActionName": "ModifySubnetAttribute",
            "FullActionName": "ec2::ModifySubnetAttribute"
          },
          {
            "ActionName": "ModifyTrafficMirrorFilterNetworkServices",
            "FullActionName": "ec2::ModifyTrafficMirrorFilterNetworkServices"
          },
          {
            "ActionName": "ModifyTrafficMirrorFilterRule",
            "FullActionName": "ec2::ModifyTrafficMirrorFilterRule"
          },
          {
            "ActionName": "ModifyTrafficMirrorSession",
            "FullActionName": "ec2::ModifyTrafficMirrorSession"
          },
          {
            "ActionName": "ModifyTransitGatewayVpcAttachment",
            "FullActionName": "ec2::ModifyTransitGatewayVpcAttachment"
          },
          {
            "ActionName": "ModifyVolume",
            "FullActionName": "ec2::ModifyVolume"
          },
          {
            "ActionName": "ModifyVolumeAttribute",
            "FullActionName": "ec2::ModifyVolumeAttribute"
          },
          {
            "ActionName": "ModifyVpcAttribute",
            "FullActionName": "ec2::ModifyVpcAttribute"
          },
          {
            "ActionName": "ModifyVpcEndpoint",
            "FullActionName": "ec2::ModifyVpcEndpoint"
          },
          {
            "ActionName": "ModifyVpcEndpointConnectionNotification",
            "FullActionName": "ec2::ModifyVpcEndpointConnectionNotification"
          },
          {
            "ActionName": "ModifyVpcEndpointServiceConfiguration",
            "FullActionName": "ec2::ModifyVpcEndpointServiceConfiguration"
          },
          {
            "ActionName": "ModifyVpcEndpointServicePermissions",
            "FullActionName": "ec2::ModifyVpcEndpointServicePermissions"
          },
          {
            "ActionName": "ModifyVpcPeeringConnectionOptions",
            "FullActionName": "ec2::ModifyVpcPeeringConnectionOptions"
          },
          {
            "ActionName": "ModifyVpcTenancy",
            "FullActionName": "ec2::ModifyVpcTenancy"
          },
          {
            "ActionName": "ModifyVpnConnection",
            "FullActionName": "ec2::ModifyVpnConnection"
          },
          {
            "ActionName": "MonitorInstances",
            "FullActionName": "ec2::MonitorInstances"
          },
          {
            "ActionName": "MoveAddressToVpc",
            "FullActionName": "ec2::MoveAddressToVpc"
          },
          {
            "ActionName": "ProvisionByoipCidr",
            "FullActionName": "ec2::ProvisionByoipCidr"
          },
          {
            "ActionName": "PurchaseHostReservation",
            "FullActionName": "ec2::PurchaseHostReservation"
          },
          {
            "ActionName": "PurchaseReservedInstancesOffering",
            "FullActionName": "ec2::PurchaseReservedInstancesOffering"
          },
          {
            "ActionName": "PurchaseScheduledInstances",
            "FullActionName": "ec2::PurchaseScheduledInstances"
          },
          {
            "ActionName": "RebootInstances",
            "FullActionName": "ec2::RebootInstances"
          },
          {
            "ActionName": "RegisterImage",
            "FullActionName": "ec2::RegisterImage"
          },
          {
            "ActionName": "RejectTransitGatewayVpcAttachment",
            "FullActionName": "ec2::RejectTransitGatewayVpcAttachment"
          },
          {
            "ActionName": "RejectVpcEndpointConnections",
            "FullActionName": "ec2::RejectVpcEndpointConnections"
          },
          {
            "ActionName": "RejectVpcPeeringConnection",
            "FullActionName": "ec2::RejectVpcPeeringConnection"
          },
          {
            "ActionName": "ReleaseAddress",
            "FullActionName": "ec2::ReleaseAddress"
          },
          {
            "ActionName": "ReleaseHosts",
            "FullActionName": "ec2::ReleaseHosts"
          },
          {
            "ActionName": "ReplaceIamInstanceProfileAssociation",
            "FullActionName": "ec2::ReplaceIamInstanceProfileAssociation"
          },
          {
            "ActionName": "ReplaceNetworkAclAssociation",
            "FullActionName": "ec2::ReplaceNetworkAclAssociation"
          },
          {
            "ActionName": "ReplaceNetworkAclEntry",
            "FullActionName": "ec2::ReplaceNetworkAclEntry"
          },
          {
            "ActionName": "ReplaceRoute",
            "FullActionName": "ec2::ReplaceRoute"
          },
          {
            "ActionName": "ReplaceRouteTableAssociation",
            "FullActionName": "ec2::ReplaceRouteTableAssociation"
          },
          {
            "ActionName": "ReplaceTransitGatewayRoute",
            "FullActionName": "ec2::ReplaceTransitGatewayRoute"
          },
          {
            "ActionName": "ReportInstanceStatus",
            "FullActionName": "ec2::ReportInstanceStatus"
          },
          {
            "ActionName": "RequestSpotFleet",
            "FullActionName": "ec2::RequestSpotFleet"
          },
          {
            "ActionName": "RequestSpotInstances",
            "FullActionName": "ec2::RequestSpotInstances"
          },
          {
            "ActionName": "ResetEbsDefaultKmsKeyId",
            "FullActionName": "ec2::ResetEbsDefaultKmsKeyId"
          },
          {
            "ActionName": "ResetFpgaImageAttribute",
            "FullActionName": "ec2::ResetFpgaImageAttribute"
          },
          {
            "ActionName": "ResetImageAttribute",
            "FullActionName": "ec2::ResetImageAttribute"
          },
          {
            "ActionName": "ResetInstanceAttribute",
            "FullActionName": "ec2::ResetInstanceAttribute"
          },
          {
            "ActionName": "ResetNetworkInterfaceAttribute",
            "FullActionName": "ec2::ResetNetworkInterfaceAttribute"
          },
          {
            "ActionName": "ResetSnapshotAttribute",
            "FullActionName": "ec2::ResetSnapshotAttribute"
          },
          {
            "ActionName": "RestoreAddressToClassic",
            "FullActionName": "ec2::RestoreAddressToClassic"
          },
          {
            "ActionName": "RevokeClientVpnIngress",
            "FullActionName": "ec2::RevokeClientVpnIngress"
          },
          {
            "ActionName": "RevokeSecurityGroupEgress",
            "FullActionName": "ec2::RevokeSecurityGroupEgress"
          },
          {
            "ActionName": "RevokeSecurityGroupIngress",
            "FullActionName": "ec2::RevokeSecurityGroupIngress"
          },
          {
            "ActionName": "RunInstances",
            "FullActionName": "ec2::RunInstances"
          },
          {
            "ActionName": "RunScheduledInstances",
            "FullActionName": "ec2::RunScheduledInstances"
          },
          {
            "ActionName": "SendDiagnosticInterrupt",
            "FullActionName": "ec2::SendDiagnosticInterrupt"
          },
          {
            "ActionName": "StartInstances",
            "FullActionName": "ec2::StartInstances"
          },
          {
            "ActionName": "StopInstances",
            "FullActionName": "ec2::StopInstances"
          },
          {
            "ActionName": "TerminateClientVpnConnections",
            "FullActionName": "ec2::TerminateClientVpnConnections"
          },
          {
            "ActionName": "TerminateInstances",
            "FullActionName": "ec2::TerminateInstances"
          },
          {
            "ActionName": "UnassignIpv6Addresses",
            "FullActionName": "ec2::UnassignIpv6Addresses"
          },
          {
            "ActionName": "UnassignPrivateIpAddresses",
            "FullActionName": "ec2::UnassignPrivateIpAddresses"
          },
          {
            "ActionName": "UnmonitorInstances",
            "FullActionName": "ec2::UnmonitorInstances"
          },
          {
            "ActionName": "UpdateSecurityGroupRuleDescriptionsEgress",
            "FullActionName": "ec2::UpdateSecurityGroupRuleDescriptionsEgress"
          },
          {
            "ActionName": "UpdateSecurityGroupRuleDescriptionsIngress",
            "FullActionName": "ec2::UpdateSecurityGroupRuleDescriptionsIngress"
          },
          {
            "ActionName": "WithdrawByoipCidr",
            "FullActionName": "ec2::WithdrawByoipCidr"
          }
        ]
      },
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "CreateTags",
            "FullActionName": "ec2::CreateTags"
          },
          {
            "ActionName": "DeleteTags",
            "FullActionName": "ec2::DeleteTags"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "DescribeAccountAttributes",
            "FullActionName": "ec2::DescribeAccountAttributes"
          },
          {
            "ActionName": "DescribeAddresses",
            "FullActionName": "ec2::DescribeAddresses"
          },
          {
            "ActionName": "DescribeAggregateIdFormat",
            "FullActionName": "ec2::DescribeAggregateIdFormat"
          },
          {
            "ActionName": "DescribeAvailabilityZones",
            "FullActionName": "ec2::DescribeAvailabilityZones"
          },
          {
            "ActionName": "DescribeBundleTasks",
            "FullActionName": "ec2::DescribeBundleTasks"
          },
          {
            "ActionName": "DescribeByoipCidrs",
            "FullActionName": "ec2::DescribeByoipCidrs"
          },
          {
            "ActionName": "DescribeCapacityReservations",
            "FullActionName": "ec2::DescribeCapacityReservations"
          },
          {
            "ActionName": "DescribeClassicLinkInstances",
            "FullActionName": "ec2::DescribeClassicLinkInstances"
          },
          {
            "ActionName": "DescribeClientVpnAuthorizationRules",
            "FullActionName": "ec2::DescribeClientVpnAuthorizationRules"
          },
          {
            "ActionName": "DescribeClientVpnConnections",
            "FullActionName": "ec2::DescribeClientVpnConnections"
          },
          {
            "ActionName": "DescribeClientVpnEndpoints",
            "FullActionName": "ec2::DescribeClientVpnEndpoints"
          },
          {
            "ActionName": "DescribeClientVpnRoutes",
            "FullActionName": "ec2::DescribeClientVpnRoutes"
          },
          {
            "ActionName": "DescribeClientVpnTargetNetworks",
            "FullActionName": "ec2::DescribeClientVpnTargetNetworks"
          },
          {
            "ActionName": "DescribeConversionTasks",
            "FullActionName": "ec2::DescribeConversionTasks"
          },
          {
            "ActionName": "DescribeCustomerGateways",
            "FullActionName": "ec2::DescribeCustomerGateways"
          },
          {
            "ActionName": "DescribeDhcpOptions",
            "FullActionName": "ec2::DescribeDhcpOptions"
          },
          {
            "ActionName": "DescribeEgressOnlyInternetGateways",
            "FullActionName": "ec2::DescribeEgressOnlyInternetGateways"
          },
          {
            "ActionName": "DescribeExportTasks",
            "FullActionName": "ec2::DescribeExportTasks"
          },
          {
            "ActionName": "DescribeFleetHistory",
            "FullActionName": "ec2::DescribeFleetHistory"
          },
          {
            "ActionName": "DescribeFleetInstances",
            "FullActionName": "ec2::DescribeFleetInstances"
          },
          {
            "ActionName": "DescribeFleets",
            "FullActionName": "ec2::DescribeFleets"
          },
          {
            "ActionName": "DescribeFlowLogs",
            "FullActionName": "ec2::DescribeFlowLogs"
          },
          {
            "ActionName": "DescribeFpgaImageAttribute",
            "FullActionName": "ec2::DescribeFpgaImageAttribute"
          },
          {
            "ActionName": "DescribeFpgaImages",
            "FullActionName": "ec2::DescribeFpgaImages"
          },
          {
            "ActionName": "DescribeHostReservationOfferings",
            "FullActionName": "ec2::DescribeHostReservationOfferings"
          },
          {
            "ActionName": "DescribeHostReservations",
            "FullActionName": "ec2::DescribeHostReservations"
          },
          {
            "ActionName": "DescribeHosts",
            "FullActionName": "ec2::DescribeHosts"
          },
          {
            "ActionName": "DescribeIamInstanceProfileAssociations",
            "FullActionName": "ec2::DescribeIamInstanceProfileAssociations"
          },
          {
            "ActionName": "DescribeIdFormat",
            "FullActionName": "ec2::DescribeIdFormat"
          },
          {
            "ActionName": "DescribeIdentityIdFormat",
            "FullActionName": "ec2::DescribeIdentityIdFormat"
          },
          {
            "ActionName": "DescribeImageAttribute",
            "FullActionName": "ec2::DescribeImageAttribute"
          },
          {
            "ActionName": "DescribeImages",
            "FullActionName": "ec2::DescribeImages"
          },
          {
            "ActionName": "DescribeImportImageTasks",
            "FullActionName": "ec2::DescribeImportImageTasks"
          },
          {
            "ActionName": "DescribeImportSnapshotTasks",
            "FullActionName": "ec2::DescribeImportSnapshotTasks"
          },
          {
            "ActionName": "DescribeInstanceAttribute",
            "FullActionName": "ec2::DescribeInstanceAttribute"
          },
          {
            "ActionName": "DescribeInstanceCreditSpecifications",
            "FullActionName": "ec2::DescribeInstanceCreditSpecifications"
          },
          {
            "ActionName": "DescribeInstanceStatus",
            "FullActionName": "ec2::DescribeInstanceStatus"
          },
          {
            "ActionName": "DescribeInstances",
            "FullActionName": "ec2::DescribeInstances"
          },
          {
            "ActionName": "DescribeInternetGateways",
            "FullActionName": "ec2::DescribeInternetGateways"
          },
          {
            "ActionName": "DescribeKeyPairs",
            "FullActionName": "ec2::DescribeKeyPairs"
          },
          {
            "ActionName": "DescribeLaunchTemplateVersions",
            "FullActionName": "ec2::DescribeLaunchTemplateVersions"
          },
          {
            "ActionName": "DescribeLaunchTemplates",
            "FullActionName": "ec2::DescribeLaunchTemplates"
          },
          {
            "ActionName": "DescribeMovingAddresses",
            "FullActionName": "ec2::DescribeMovingAddresses"
          },
          {
            "ActionName": "DescribeNatGateways",
            "FullActionName": "ec2::DescribeNatGateways"
          },
          {
            "ActionName": "DescribeNetworkAcls",
            "FullActionName": "ec2::DescribeNetworkAcls"
          },
          {
            "ActionName": "DescribeNetworkInterfaceAttribute",
            "FullActionName": "ec2::DescribeNetworkInterfaceAttribute"
          },
          {
            "ActionName": "DescribeNetworkInterfacePermissions",
            "FullActionName": "ec2::DescribeNetworkInterfacePermissions"
          },
          {
            "ActionName": "DescribeNetworkInterfaces",
            "FullActionName": "ec2::DescribeNetworkInterfaces"
          },
          {
            "ActionName": "DescribePlacementGroups",
            "FullActionName": "ec2::DescribePlacementGroups"
          },
          {
            "ActionName": "DescribePrefixLists",
            "FullActionName": "ec2::DescribePrefixLists"
          },
          {
            "ActionName": "DescribePrincipalIdFormat",
            "FullActionName": "ec2::DescribePrincipalIdFormat"
          },
          {
            "ActionName": "DescribePublicIpv4Pools",
            "FullActionName": "ec2::DescribePublicIpv4Pools"
          },
          {
            "ActionName": "DescribeRegions",
            "FullActionName": "ec2::DescribeRegions"
          },
          {
            "ActionName": "DescribeReservedInstances",
            "FullActionName": "ec2::DescribeReservedInstances"
          },
          {
            "ActionName": "DescribeReservedInstancesListings",
            "FullActionName": "ec2::DescribeReservedInstancesListings"
          },
          {
            "ActionName": "DescribeReservedInstancesModifications",
            "FullActionName": "ec2::DescribeReservedInstancesModifications"
          },
          {
            "ActionName": "DescribeReservedInstancesOfferings",
            "FullActionName": "ec2::DescribeReservedInstancesOfferings"
          },
          {
            "ActionName": "DescribeRouteTables",
            "FullActionName": "ec2::DescribeRouteTables"
          },
          {
            "ActionName": "DescribeSecurityGroupReferences",
            "FullActionName": "ec2::DescribeSecurityGroupReferences"
          },
          {
            "ActionName": "DescribeSecurityGroups",
            "FullActionName": "ec2::DescribeSecurityGroups"
          },
          {
            "ActionName": "DescribeSnapshotAttribute",
            "FullActionName": "ec2::DescribeSnapshotAttribute"
          },
          {
            "ActionName": "DescribeSnapshots",
            "FullActionName": "ec2::DescribeSnapshots"
          },
          {
            "ActionName": "DescribeSpotDatafeedSubscription",
            "FullActionName": "ec2::DescribeSpotDatafeedSubscription"
          },
          {
            "ActionName": "DescribeSpotFleetInstances",
            "FullActionName": "ec2::DescribeSpotFleetInstances"
          },
          {
            "ActionName": "DescribeSpotFleetRequestHistory",
            "FullActionName": "ec2::DescribeSpotFleetRequestHistory"
          },
          {
            "ActionName": "DescribeSpotFleetRequests",
            "FullActionName": "ec2::DescribeSpotFleetRequests"
          },
          {
            "ActionName": "DescribeSpotInstanceRequests",
            "FullActionName": "ec2::DescribeSpotInstanceRequests"
          },
          {
            "ActionName": "DescribeSpotPriceHistory",
            "FullActionName": "ec2::DescribeSpotPriceHistory"
          },
          {
            "ActionName": "DescribeStaleSecurityGroups",
            "FullActionName": "ec2::DescribeStaleSecurityGroups"
          },
          {
            "ActionName": "DescribeSubnets",
            "FullActionName": "ec2::DescribeSubnets"
          },
          {
            "ActionName": "DescribeTrafficMirrorFilters",
            "FullActionName": "ec2::DescribeTrafficMirrorFilters"
          },
          {
            "ActionName": "DescribeTrafficMirrorSessions",
            "FullActionName": "ec2::DescribeTrafficMirrorSessions"
          },
          {
            "ActionName": "DescribeTrafficMirrorTargets",
            "FullActionName": "ec2::DescribeTrafficMirrorTargets"
          },
          {
            "ActionName": "DescribeTransitGatewayAttachments",
            "FullActionName": "ec2::DescribeTransitGatewayAttachments"
          },
          {
            "ActionName": "DescribeTransitGatewayRouteTables",
            "FullActionName": "ec2::DescribeTransitGatewayRouteTables"
          },
          {
            "ActionName": "DescribeTransitGatewayVpcAttachments",
            "FullActionName": "ec2::DescribeTransitGatewayVpcAttachments"
          },
          {
            "ActionName": "DescribeTransitGateways",
            "FullActionName": "ec2::DescribeTransitGateways"
          },
          {
            "ActionName": "DescribeVolumeAttribute",
            "FullActionName": "ec2::DescribeVolumeAttribute"
          },
          {
            "ActionName": "DescribeVolumeStatus",
            "FullActionName": "ec2::DescribeVolumeStatus"
          },
          {
            "ActionName": "DescribeVolumes",
            "FullActionName": "ec2::DescribeVolumes"
          },
          {
            "ActionName": "DescribeVpcAttribute",
            "FullActionName": "ec2::DescribeVpcAttribute"
          },
          {
            "ActionName": "DescribeVpcClassicLink",
            "FullActionName": "ec2::DescribeVpcClassicLink"
          },
          {
            "ActionName": "DescribeVpcClassicLinkDnsSupport",
            "FullActionName": "ec2::DescribeVpcClassicLinkDnsSupport"
          },
          {
            "ActionName": "DescribeVpcEndpointConnectionNotifications",
            "FullActionName": "ec2::DescribeVpcEndpointConnectionNotifications"
          },
          {
            "ActionName": "DescribeVpcEndpointConnections",
            "FullActionName": "ec2::DescribeVpcEndpointConnections"
          },
          {
            "ActionName": "DescribeVpcEndpointServiceConfigurations",
            "FullActionName": "ec2::DescribeVpcEndpointServiceConfigurations"
          },
          {
            "ActionName": "DescribeVpcEndpointServicePermissions",
            "FullActionName": "ec2::DescribeVpcEndpointServicePermissions"
          },
          {
            "ActionName": "DescribeVpcEndpointServices",
            "FullActionName": "ec2::DescribeVpcEndpointServices"
          },
          {
            "ActionName": "DescribeVpcEndpoints",
            "FullActionName": "ec2::DescribeVpcEndpoints"
          },
          {
            "ActionName": "DescribeVpcPeeringConnections",
            "FullActionName": "ec2::DescribeVpcPeeringConnections"
          },
          {
            "ActionName": "DescribeVpcs",
            "FullActionName": "ec2::DescribeVpcs"
          },
          {
            "ActionName": "DescribeVpnGateways",
            "FullActionName": "ec2::DescribeVpnGateways"
          },
          {
            "ActionName": "ExportClientVpnClientCertificateRevocationList",
            "FullActionName": "ec2::ExportClientVpnClientCertificateRevocationList"
          },
          {
            "ActionName": "ExportClientVpnClientConfiguration",
            "FullActionName": "ec2::ExportClientVpnClientConfiguration"
          },
          {
            "ActionName": "GetTransitGatewayAttachmentPropagations",
            "FullActionName": "ec2::GetTransitGatewayAttachmentPropagations"
          },
          {
            "ActionName": "GetTransitGatewayRouteTableAssociations",
            "FullActionName": "ec2::GetTransitGatewayRouteTableAssociations"
          },
          {
            "ActionName": "GetTransitGatewayRouteTablePropagations",
            "FullActionName": "ec2::GetTransitGatewayRouteTablePropagations"
          },
          {
            "ActionName": "SearchTransitGatewayRoutes",
            "FullActionName": "ec2::SearchTransitGatewayRoutes"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeElasticGpus",
            "FullActionName": "ec2::DescribeElasticGpus"
          },
          {
            "ActionName": "DescribeScheduledInstanceAvailability",
            "FullActionName": "ec2::DescribeScheduledInstanceAvailability"
          },
          {
            "ActionName": "DescribeScheduledInstances",
            "FullActionName": "ec2::DescribeScheduledInstances"
          },
          {
            "ActionName": "DescribeTags",
            "FullActionName": "ec2::DescribeTags"
          },
          {
            "ActionName": "DescribeVolumesModifications",
            "FullActionName": "ec2::DescribeVolumesModifications"
          },
          {
            "ActionName": "DescribeVpnConnections",
            "FullActionName": "ec2::DescribeVpnConnections"
          },
          {
            "ActionName": "GetCapacityReservationUsage",
            "FullActionName": "ec2::GetCapacityReservationUsage"
          },
          {
            "ActionName": "GetConsoleOutput",
            "FullActionName": "ec2::GetConsoleOutput"
          },
          {
            "ActionName": "GetConsoleScreenshot",
            "FullActionName": "ec2::GetConsoleScreenshot"
          },
          {
            "ActionName": "GetEbsDefaultKmsKeyId",
            "FullActionName": "ec2::GetEbsDefaultKmsKeyId"
          },
          {
            "ActionName": "GetEbsEncryptionByDefault",
            "FullActionName": "ec2::GetEbsEncryptionByDefault"
          },
          {
            "ActionName": "GetHostReservationPurchasePreview",
            "FullActionName": "ec2::GetHostReservationPurchasePreview"
          },
          {
            "ActionName": "GetLaunchTemplateData",
            "FullActionName": "ec2::GetLaunchTemplateData"
          },
          {
            "ActionName": "GetPasswordData",
            "FullActionName": "ec2::GetPasswordData"
          },
          {
            "ActionName": "GetReservedInstancesExchangeQuote",
            "FullActionName": "ec2::GetReservedInstancesExchangeQuote"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "EC2 Auto Scaling",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "AttachInstances",
            "FullActionName": "autoscaling::AttachInstances"
          },
          {
            "ActionName": "AttachLoadBalancerTargetGroups",
            "FullActionName": "autoscaling::AttachLoadBalancerTargetGroups"
          },
          {
            "ActionName": "AttachLoadBalancers",
            "FullActionName": "autoscaling::AttachLoadBalancers"
          },
          {
            "ActionName": "BatchDeleteScheduledAction",
            "FullActionName": "autoscaling::BatchDeleteScheduledAction"
          },
          {
            "ActionName": "BatchPutScheduledUpdateGroupAction",
            "FullActionName": "autoscaling::BatchPutScheduledUpdateGroupAction"
          },
          {
            "ActionName": "CompleteLifecycleAction",
            "FullActionName": "autoscaling::CompleteLifecycleAction"
          },
          {
            "ActionName": "CreateLaunchConfiguration",
            "FullActionName": "autoscaling::CreateLaunchConfiguration"
          },
          {
            "ActionName": "DeleteAutoScalingGroup",
            "FullActionName": "autoscaling::DeleteAutoScalingGroup"
          },
          {
            "ActionName": "DeleteLaunchConfiguration",
            "FullActionName": "autoscaling::DeleteLaunchConfiguration"
          },
          {
            "ActionName": "DeleteLifecycleHook",
            "FullActionName": "autoscaling::DeleteLifecycleHook"
          },
          {
            "ActionName": "DeleteNotificationConfiguration",
            "FullActionName": "autoscaling::DeleteNotificationConfiguration"
          },
          {
            "ActionName": "DeletePolicy",
            "FullActionName": "autoscaling::DeletePolicy"
          },
          {
            "ActionName": "DeleteScheduledAction",
            "FullActionName": "autoscaling::DeleteScheduledAction"
          },
          {
            "ActionName": "DetachInstances",
            "FullActionName": "autoscaling::DetachInstances"
          },
          {
            "ActionName": "DetachLoadBalancerTargetGroups",
            "FullActionName": "autoscaling::DetachLoadBalancerTargetGroups"
          },
          {
            "ActionName": "DetachLoadBalancers",
            "FullActionName": "autoscaling::DetachLoadBalancers"
          },
          {
            "ActionName": "DisableMetricsCollection",
            "FullActionName": "autoscaling::DisableMetricsCollection"
          },
          {
            "ActionName": "EnableMetricsCollection",
            "FullActionName": "autoscaling::EnableMetricsCollection"
          },
          {
            "ActionName": "EnterStandby",
            "FullActionName": "autoscaling::EnterStandby"
          },
          {
            "ActionName": "ExecutePolicy",
            "FullActionName": "autoscaling::ExecutePolicy"
          },
          {
            "ActionName": "ExitStandby",
            "FullActionName": "autoscaling::ExitStandby"
          },
          {
            "ActionName": "PutLifecycleHook",
            "FullActionName": "autoscaling::PutLifecycleHook"
          },
          {
            "ActionName": "PutNotificationConfiguration",
            "FullActionName": "autoscaling::PutNotificationConfiguration"
          },
          {
            "ActionName": "PutScalingPolicy",
            "FullActionName": "autoscaling::PutScalingPolicy"
          },
          {
            "ActionName": "PutScheduledUpdateGroupAction",
            "FullActionName": "autoscaling::PutScheduledUpdateGroupAction"
          },
          {
            "ActionName": "RecordLifecycleActionHeartbeat",
            "FullActionName": "autoscaling::RecordLifecycleActionHeartbeat"
          },
          {
            "ActionName": "ResumeProcesses",
            "FullActionName": "autoscaling::ResumeProcesses"
          },
          {
            "ActionName": "SetDesiredCapacity",
            "FullActionName": "autoscaling::SetDesiredCapacity"
          },
          {
            "ActionName": "SetInstanceHealth",
            "FullActionName": "autoscaling::SetInstanceHealth"
          },
          {
            "ActionName": "SetInstanceProtection",
            "FullActionName": "autoscaling::SetInstanceProtection"
          },
          {
            "ActionName": "SuspendProcesses",
            "FullActionName": "autoscaling::SuspendProcesses"
          },
          {
            "ActionName": "TerminateInstanceInAutoScalingGroup",
            "FullActionName": "autoscaling::TerminateInstanceInAutoScalingGroup"
          },
          {
            "ActionName": "UpdateAutoScalingGroup",
            "FullActionName": "autoscaling::UpdateAutoScalingGroup"
          }
        ]
      },
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "CreateAutoScalingGroup",
            "FullActionName": "autoscaling::CreateAutoScalingGroup"
          },
          {
            "ActionName": "CreateOrUpdateTags",
            "FullActionName": "autoscaling::CreateOrUpdateTags"
          },
          {
            "ActionName": "DeleteTags",
            "FullActionName": "autoscaling::DeleteTags"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "DescribeAccountLimits",
            "FullActionName": "autoscaling::DescribeAccountLimits"
          },
          {
            "ActionName": "DescribeAdjustmentTypes",
            "FullActionName": "autoscaling::DescribeAdjustmentTypes"
          },
          {
            "ActionName": "DescribeAutoScalingGroups",
            "FullActionName": "autoscaling::DescribeAutoScalingGroups"
          },
          {
            "ActionName": "DescribeAutoScalingInstances",
            "FullActionName": "autoscaling::DescribeAutoScalingInstances"
          },
          {
            "ActionName": "DescribeAutoScalingNotificationTypes",
            "FullActionName": "autoscaling::DescribeAutoScalingNotificationTypes"
          },
          {
            "ActionName": "DescribeLaunchConfigurations",
            "FullActionName": "autoscaling::DescribeLaunchConfigurations"
          },
          {
            "ActionName": "DescribeLifecycleHookTypes",
            "FullActionName": "autoscaling::DescribeLifecycleHookTypes"
          },
          {
            "ActionName": "DescribeLifecycleHooks",
            "FullActionName": "autoscaling::DescribeLifecycleHooks"
          },
          {
            "ActionName": "DescribeLoadBalancerTargetGroups",
            "FullActionName": "autoscaling::DescribeLoadBalancerTargetGroups"
          },
          {
            "ActionName": "DescribeLoadBalancers",
            "FullActionName": "autoscaling::DescribeLoadBalancers"
          },
          {
            "ActionName": "DescribeMetricCollectionTypes",
            "FullActionName": "autoscaling::DescribeMetricCollectionTypes"
          },
          {
            "ActionName": "DescribeNotificationConfigurations",
            "FullActionName": "autoscaling::DescribeNotificationConfigurations"
          },
          {
            "ActionName": "DescribePolicies",
            "FullActionName": "autoscaling::DescribePolicies"
          },
          {
            "ActionName": "DescribeScalingActivities",
            "FullActionName": "autoscaling::DescribeScalingActivities"
          },
          {
            "ActionName": "DescribeScalingProcessTypes",
            "FullActionName": "autoscaling::DescribeScalingProcessTypes"
          },
          {
            "ActionName": "DescribeScheduledActions",
            "FullActionName": "autoscaling::DescribeScheduledActions"
          },
          {
            "ActionName": "DescribeTerminationPolicyTypes",
            "FullActionName": "autoscaling::DescribeTerminationPolicyTypes"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeTags",
            "FullActionName": "autoscaling::DescribeTags"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "EC2 Instance Connect",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "SendSSHPublicKey",
            "FullActionName": "ec2-instance-connect::SendSSHPublicKey"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "EC2 Messages",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "AcknowledgeMessage",
            "FullActionName": "ec2messages::AcknowledgeMessage"
          },
          {
            "ActionName": "DeleteMessage",
            "FullActionName": "ec2messages::DeleteMessage"
          },
          {
            "ActionName": "FailMessage",
            "FullActionName": "ec2messages::FailMessage"
          },
          {
            "ActionName": "SendReply",
            "FullActionName": "ec2messages::SendReply"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "GetEndpoint",
            "FullActionName": "ec2messages::GetEndpoint"
          },
          {
            "ActionName": "GetMessages",
            "FullActionName": "ec2messages::GetMessages"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "EFS",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "Backup",
            "FullActionName": "elasticfilesystem::Backup"
          },
          {
            "ActionName": "CreateMountTarget",
            "FullActionName": "elasticfilesystem::CreateMountTarget"
          },
          {
            "ActionName": "DeleteFileSystem",
            "FullActionName": "elasticfilesystem::DeleteFileSystem"
          },
          {
            "ActionName": "DeleteMountTarget",
            "FullActionName": "elasticfilesystem::DeleteMountTarget"
          },
          {
            "ActionName": "ModifyMountTargetSecurityGroups",
            "FullActionName": "elasticfilesystem::ModifyMountTargetSecurityGroups"
          },
          {
            "ActionName": "PutLifecycleConfiguration",
            "FullActionName": "elasticfilesystem::PutLifecycleConfiguration"
          },
          {
            "ActionName": "Restore",
            "FullActionName": "elasticfilesystem::Restore"
          },
          {
            "ActionName": "UpdateFileSystem",
            "FullActionName": "elasticfilesystem::UpdateFileSystem"
          }
        ]
      },
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "CreateFileSystem",
            "FullActionName": "elasticfilesystem::CreateFileSystem"
          },
          {
            "ActionName": "CreateTags",
            "FullActionName": "elasticfilesystem::CreateTags"
          },
          {
            "ActionName": "DeleteTags",
            "FullActionName": "elasticfilesystem::DeleteTags"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "DescribeFileSystems",
            "FullActionName": "elasticfilesystem::DescribeFileSystems"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeLifecycleConfiguration",
            "FullActionName": "elasticfilesystem::DescribeLifecycleConfiguration"
          },
          {
            "ActionName": "DescribeMountTargetSecurityGroups",
            "FullActionName": "elasticfilesystem::DescribeMountTargetSecurityGroups"
          },
          {
            "ActionName": "DescribeMountTargets",
            "FullActionName": "elasticfilesystem::DescribeMountTargets"
          },
          {
            "ActionName": "DescribeTags",
            "FullActionName": "elasticfilesystem::DescribeTags"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "EI",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "Connect",
            "FullActionName": "elastic-inference::Connect"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "EKS",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "CreateCluster",
            "FullActionName": "eks::CreateCluster"
          },
          {
            "ActionName": "DeleteCluster",
            "FullActionName": "eks::DeleteCluster"
          },
          {
            "ActionName": "UpdateClusterConfig",
            "FullActionName": "eks::UpdateClusterConfig"
          },
          {
            "ActionName": "UpdateClusterVersion",
            "FullActionName": "eks::UpdateClusterVersion"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeCluster",
            "FullActionName": "eks::DescribeCluster"
          },
          {
            "ActionName": "DescribeUpdate",
            "FullActionName": "eks::DescribeUpdate"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListClusters",
            "FullActionName": "eks::ListClusters"
          },
          {
            "ActionName": "ListUpdates",
            "FullActionName": "eks::ListUpdates"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "ELB v2",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "AddListenerCertificates",
            "FullActionName": "elasticloadbalancing::AddListenerCertificates"
          },
          {
            "ActionName": "CreateListener",
            "FullActionName": "elasticloadbalancing::CreateListener"
          },
          {
            "ActionName": "CreateLoadBalancer",
            "FullActionName": "elasticloadbalancing::CreateLoadBalancer"
          },
          {
            "ActionName": "CreateRule",
            "FullActionName": "elasticloadbalancing::CreateRule"
          },
          {
            "ActionName": "CreateTargetGroup",
            "FullActionName": "elasticloadbalancing::CreateTargetGroup"
          },
          {
            "ActionName": "DeleteListener",
            "FullActionName": "elasticloadbalancing::DeleteListener"
          },
          {
            "ActionName": "DeleteLoadBalancer",
            "FullActionName": "elasticloadbalancing::DeleteLoadBalancer"
          },
          {
            "ActionName": "DeleteRule",
            "FullActionName": "elasticloadbalancing::DeleteRule"
          },
          {
            "ActionName": "DeleteTargetGroup",
            "FullActionName": "elasticloadbalancing::DeleteTargetGroup"
          },
          {
            "ActionName": "DeregisterTargets",
            "FullActionName": "elasticloadbalancing::DeregisterTargets"
          },
          {
            "ActionName": "ModifyListener",
            "FullActionName": "elasticloadbalancing::ModifyListener"
          },
          {
            "ActionName": "ModifyLoadBalancerAttributes",
            "FullActionName": "elasticloadbalancing::ModifyLoadBalancerAttributes"
          },
          {
            "ActionName": "ModifyRule",
            "FullActionName": "elasticloadbalancing::ModifyRule"
          },
          {
            "ActionName": "ModifyTargetGroup",
            "FullActionName": "elasticloadbalancing::ModifyTargetGroup"
          },
          {
            "ActionName": "ModifyTargetGroupAttributes",
            "FullActionName": "elasticloadbalancing::ModifyTargetGroupAttributes"
          },
          {
            "ActionName": "RegisterTargets",
            "FullActionName": "elasticloadbalancing::RegisterTargets"
          },
          {
            "ActionName": "RemoveListenerCertificates",
            "FullActionName": "elasticloadbalancing::RemoveListenerCertificates"
          },
          {
            "ActionName": "SetIpAddressType",
            "FullActionName": "elasticloadbalancing::SetIpAddressType"
          },
          {
            "ActionName": "SetRulePriorities",
            "FullActionName": "elasticloadbalancing::SetRulePriorities"
          },
          {
            "ActionName": "SetSecurityGroups",
            "FullActionName": "elasticloadbalancing::SetSecurityGroups"
          },
          {
            "ActionName": "SetSubnets",
            "FullActionName": "elasticloadbalancing::SetSubnets"
          },
          {
            "ActionName": "SetWebAcl",
            "FullActionName": "elasticloadbalancing::SetWebAcl"
          }
        ]
      },
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "AddTags",
            "FullActionName": "elasticloadbalancing::AddTags"
          },
          {
            "ActionName": "RemoveTags",
            "FullActionName": "elasticloadbalancing::RemoveTags"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeAccountLimits",
            "FullActionName": "elasticloadbalancing::DescribeAccountLimits"
          },
          {
            "ActionName": "DescribeListenerCertificates",
            "FullActionName": "elasticloadbalancing::DescribeListenerCertificates"
          },
          {
            "ActionName": "DescribeListeners",
            "FullActionName": "elasticloadbalancing::DescribeListeners"
          },
          {
            "ActionName": "DescribeLoadBalancerAttributes",
            "FullActionName": "elasticloadbalancing::DescribeLoadBalancerAttributes"
          },
          {
            "ActionName": "DescribeLoadBalancers",
            "FullActionName": "elasticloadbalancing::DescribeLoadBalancers"
          },
          {
            "ActionName": "DescribeRules",
            "FullActionName": "elasticloadbalancing::DescribeRules"
          },
          {
            "ActionName": "DescribeSSLPolicies",
            "FullActionName": "elasticloadbalancing::DescribeSSLPolicies"
          },
          {
            "ActionName": "DescribeTags",
            "FullActionName": "elasticloadbalancing::DescribeTags"
          },
          {
            "ActionName": "DescribeTargetGroupAttributes",
            "FullActionName": "elasticloadbalancing::DescribeTargetGroupAttributes"
          },
          {
            "ActionName": "DescribeTargetGroups",
            "FullActionName": "elasticloadbalancing::DescribeTargetGroups"
          },
          {
            "ActionName": "DescribeTargetHealth",
            "FullActionName": "elasticloadbalancing::DescribeTargetHealth"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "EMR",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "AddInstanceFleet",
            "FullActionName": "elasticmapreduce::AddInstanceFleet"
          },
          {
            "ActionName": "AddInstanceGroups",
            "FullActionName": "elasticmapreduce::AddInstanceGroups"
          },
          {
            "ActionName": "AddJobFlowSteps",
            "FullActionName": "elasticmapreduce::AddJobFlowSteps"
          },
          {
            "ActionName": "CancelSteps",
            "FullActionName": "elasticmapreduce::CancelSteps"
          },
          {
            "ActionName": "CreateSecurityConfiguration",
            "FullActionName": "elasticmapreduce::CreateSecurityConfiguration"
          },
          {
            "ActionName": "DeleteEditor",
            "FullActionName": "elasticmapreduce::DeleteEditor"
          },
          {
            "ActionName": "DeleteSecurityConfiguration",
            "FullActionName": "elasticmapreduce::DeleteSecurityConfiguration"
          },
          {
            "ActionName": "ModifyInstanceFleet",
            "FullActionName": "elasticmapreduce::ModifyInstanceFleet"
          },
          {
            "ActionName": "ModifyInstanceGroups",
            "FullActionName": "elasticmapreduce::ModifyInstanceGroups"
          },
          {
            "ActionName": "OpenEditorInConsole",
            "FullActionName": "elasticmapreduce::OpenEditorInConsole"
          },
          {
            "ActionName": "PutAutoScalingPolicy",
            "FullActionName": "elasticmapreduce::PutAutoScalingPolicy"
          },
          {
            "ActionName": "RemoveAutoScalingPolicy",
            "FullActionName": "elasticmapreduce::RemoveAutoScalingPolicy"
          },
          {
            "ActionName": "SetTerminationProtection",
            "FullActionName": "elasticmapreduce::SetTerminationProtection"
          },
          {
            "ActionName": "StartEditor",
            "FullActionName": "elasticmapreduce::StartEditor"
          },
          {
            "ActionName": "StopEditor",
            "FullActionName": "elasticmapreduce::StopEditor"
          },
          {
            "ActionName": "TerminateJobFlows",
            "FullActionName": "elasticmapreduce::TerminateJobFlows"
          }
        ]
      },
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "AddTags",
            "FullActionName": "elasticmapreduce::AddTags"
          },
          {
            "ActionName": "CreateEditor",
            "FullActionName": "elasticmapreduce::CreateEditor"
          },
          {
            "ActionName": "RemoveTags",
            "FullActionName": "elasticmapreduce::RemoveTags"
          },
          {
            "ActionName": "RunJobFlow",
            "FullActionName": "elasticmapreduce::RunJobFlow"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeCluster",
            "FullActionName": "elasticmapreduce::DescribeCluster"
          },
          {
            "ActionName": "DescribeEditor",
            "FullActionName": "elasticmapreduce::DescribeEditor"
          },
          {
            "ActionName": "DescribeSecurityConfiguration",
            "FullActionName": "elasticmapreduce::DescribeSecurityConfiguration"
          },
          {
            "ActionName": "DescribeStep",
            "FullActionName": "elasticmapreduce::DescribeStep"
          },
          {
            "ActionName": "GetBlockPublicAccessConfiguration",
            "FullActionName": "elasticmapreduce::GetBlockPublicAccessConfiguration"
          },
          {
            "ActionName": "ListInstanceFleets",
            "FullActionName": "elasticmapreduce::ListInstanceFleets"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListBootstrapActions",
            "FullActionName": "elasticmapreduce::ListBootstrapActions"
          },
          {
            "ActionName": "ListClusters",
            "FullActionName": "elasticmapreduce::ListClusters"
          },
          {
            "ActionName": "ListEditors",
            "FullActionName": "elasticmapreduce::ListEditors"
          },
          {
            "ActionName": "ListInstanceGroups",
            "FullActionName": "elasticmapreduce::ListInstanceGroups"
          },
          {
            "ActionName": "ListInstances",
            "FullActionName": "elasticmapreduce::ListInstances"
          },
          {
            "ActionName": "ListSecurityConfigurations",
            "FullActionName": "elasticmapreduce::ListSecurityConfigurations"
          },
          {
            "ActionName": "ListSteps",
            "FullActionName": "elasticmapreduce::ListSteps"
          },
          {
            "ActionName": "ViewEventsFromAllClustersInConsole",
            "FullActionName": "elasticmapreduce::ViewEventsFromAllClustersInConsole"
          }
        ]
      },
      {
        "AccessLevel": "Permissions",
        "Actions": [
          {
            "ActionName": "PutBlockPublicAccessConfiguration",
            "FullActionName": "elasticmapreduce::PutBlockPublicAccessConfiguration"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "ElastiCache",
    "AccessLevels": [
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "AddTagsToResource",
            "FullActionName": "elasticache::AddTagsToResource"
          },
          {
            "ActionName": "RemoveTagsFromResource",
            "FullActionName": "elasticache::RemoveTagsFromResource"
          }
        ]
      },
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "AuthorizeCacheSecurityGroupIngress",
            "FullActionName": "elasticache::AuthorizeCacheSecurityGroupIngress"
          },
          {
            "ActionName": "CopySnapshot",
            "FullActionName": "elasticache::CopySnapshot"
          },
          {
            "ActionName": "CreateCacheCluster",
            "FullActionName": "elasticache::CreateCacheCluster"
          },
          {
            "ActionName": "CreateCacheParameterGroup",
            "FullActionName": "elasticache::CreateCacheParameterGroup"
          },
          {
            "ActionName": "CreateCacheSecurityGroup",
            "FullActionName": "elasticache::CreateCacheSecurityGroup"
          },
          {
            "ActionName": "CreateCacheSubnetGroup",
            "FullActionName": "elasticache::CreateCacheSubnetGroup"
          },
          {
            "ActionName": "CreateReplicationGroup",
            "FullActionName": "elasticache::CreateReplicationGroup"
          },
          {
            "ActionName": "CreateSnapshot",
            "FullActionName": "elasticache::CreateSnapshot"
          },
          {
            "ActionName": "DecreaseReplicaCount",
            "FullActionName": "elasticache::DecreaseReplicaCount"
          },
          {
            "ActionName": "DeleteCacheCluster",
            "FullActionName": "elasticache::DeleteCacheCluster"
          },
          {
            "ActionName": "DeleteCacheParameterGroup",
            "FullActionName": "elasticache::DeleteCacheParameterGroup"
          },
          {
            "ActionName": "DeleteCacheSecurityGroup",
            "FullActionName": "elasticache::DeleteCacheSecurityGroup"
          },
          {
            "ActionName": "DeleteCacheSubnetGroup",
            "FullActionName": "elasticache::DeleteCacheSubnetGroup"
          },
          {
            "ActionName": "DeleteReplicationGroup",
            "FullActionName": "elasticache::DeleteReplicationGroup"
          },
          {
            "ActionName": "DeleteSnapshot",
            "FullActionName": "elasticache::DeleteSnapshot"
          },
          {
            "ActionName": "IncreaseReplicaCount",
            "FullActionName": "elasticache::IncreaseReplicaCount"
          },
          {
            "ActionName": "ModifyCacheCluster",
            "FullActionName": "elasticache::ModifyCacheCluster"
          },
          {
            "ActionName": "ModifyCacheParameterGroup",
            "FullActionName": "elasticache::ModifyCacheParameterGroup"
          },
          {
            "ActionName": "ModifyCacheSubnetGroup",
            "FullActionName": "elasticache::ModifyCacheSubnetGroup"
          },
          {
            "ActionName": "ModifyReplicationGroup",
            "FullActionName": "elasticache::ModifyReplicationGroup"
          },
          {
            "ActionName": "ModifyReplicationGroupShardConfiguration",
            "FullActionName": "elasticache::ModifyReplicationGroupShardConfiguration"
          },
          {
            "ActionName": "PurchaseReservedCacheNodesOffering",
            "FullActionName": "elasticache::PurchaseReservedCacheNodesOffering"
          },
          {
            "ActionName": "RebootCacheCluster",
            "FullActionName": "elasticache::RebootCacheCluster"
          },
          {
            "ActionName": "ResetCacheParameterGroup",
            "FullActionName": "elasticache::ResetCacheParameterGroup"
          },
          {
            "ActionName": "RevokeCacheSecurityGroupIngress",
            "FullActionName": "elasticache::RevokeCacheSecurityGroupIngress"
          },
          {
            "ActionName": "TestFailover",
            "FullActionName": "elasticache::TestFailover"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "DescribeCacheClusters",
            "FullActionName": "elasticache::DescribeCacheClusters"
          },
          {
            "ActionName": "DescribeCacheEngineVersions",
            "FullActionName": "elasticache::DescribeCacheEngineVersions"
          },
          {
            "ActionName": "DescribeCacheParameterGroups",
            "FullActionName": "elasticache::DescribeCacheParameterGroups"
          },
          {
            "ActionName": "DescribeCacheParameters",
            "FullActionName": "elasticache::DescribeCacheParameters"
          },
          {
            "ActionName": "DescribeCacheSecurityGroups",
            "FullActionName": "elasticache::DescribeCacheSecurityGroups"
          },
          {
            "ActionName": "DescribeCacheSubnetGroups",
            "FullActionName": "elasticache::DescribeCacheSubnetGroups"
          },
          {
            "ActionName": "DescribeEngineDefaultParameters",
            "FullActionName": "elasticache::DescribeEngineDefaultParameters"
          },
          {
            "ActionName": "DescribeEvents",
            "FullActionName": "elasticache::DescribeEvents"
          },
          {
            "ActionName": "DescribeReplicationGroups",
            "FullActionName": "elasticache::DescribeReplicationGroups"
          },
          {
            "ActionName": "DescribeReservedCacheNodes",
            "FullActionName": "elasticache::DescribeReservedCacheNodes"
          },
          {
            "ActionName": "DescribeReservedCacheNodesOfferings",
            "FullActionName": "elasticache::DescribeReservedCacheNodesOfferings"
          },
          {
            "ActionName": "DescribeSnapshots",
            "FullActionName": "elasticache::DescribeSnapshots"
          },
          {
            "ActionName": "ListAllowedNodeTypeModifications",
            "FullActionName": "elasticache::ListAllowedNodeTypeModifications"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "ListTagsForResource",
            "FullActionName": "elasticache::ListTagsForResource"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Elastic Beanstalk",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "AbortEnvironmentUpdate",
            "FullActionName": "elasticbeanstalk::AbortEnvironmentUpdate"
          },
          {
            "ActionName": "ApplyEnvironmentManagedAction",
            "FullActionName": "elasticbeanstalk::ApplyEnvironmentManagedAction"
          },
          {
            "ActionName": "ComposeEnvironments",
            "FullActionName": "elasticbeanstalk::ComposeEnvironments"
          },
          {
            "ActionName": "CreateApplication",
            "FullActionName": "elasticbeanstalk::CreateApplication"
          },
          {
            "ActionName": "CreateApplicationVersion",
            "FullActionName": "elasticbeanstalk::CreateApplicationVersion"
          },
          {
            "ActionName": "CreateConfigurationTemplate",
            "FullActionName": "elasticbeanstalk::CreateConfigurationTemplate"
          },
          {
            "ActionName": "CreateEnvironment",
            "FullActionName": "elasticbeanstalk::CreateEnvironment"
          },
          {
            "ActionName": "CreatePlatformVersion",
            "FullActionName": "elasticbeanstalk::CreatePlatformVersion"
          },
          {
            "ActionName": "CreateStorageLocation",
            "FullActionName": "elasticbeanstalk::CreateStorageLocation"
          },
          {
            "ActionName": "DeleteApplication",
            "FullActionName": "elasticbeanstalk::DeleteApplication"
          },
          {
            "ActionName": "DeleteApplicationVersion",
            "FullActionName": "elasticbeanstalk::DeleteApplicationVersion"
          },
          {
            "ActionName": "DeleteConfigurationTemplate",
            "FullActionName": "elasticbeanstalk::DeleteConfigurationTemplate"
          },
          {
            "ActionName": "DeleteEnvironmentConfiguration",
            "FullActionName": "elasticbeanstalk::DeleteEnvironmentConfiguration"
          },
          {
            "ActionName": "DeletePlatformVersion",
            "FullActionName": "elasticbeanstalk::DeletePlatformVersion"
          },
          {
            "ActionName": "RebuildEnvironment",
            "FullActionName": "elasticbeanstalk::RebuildEnvironment"
          },
          {
            "ActionName": "RestartAppServer",
            "FullActionName": "elasticbeanstalk::RestartAppServer"
          },
          {
            "ActionName": "SwapEnvironmentCNAMEs",
            "FullActionName": "elasticbeanstalk::SwapEnvironmentCNAMEs"
          },
          {
            "ActionName": "TerminateEnvironment",
            "FullActionName": "elasticbeanstalk::TerminateEnvironment"
          },
          {
            "ActionName": "UpdateApplication",
            "FullActionName": "elasticbeanstalk::UpdateApplication"
          },
          {
            "ActionName": "UpdateApplicationResourceLifecycle",
            "FullActionName": "elasticbeanstalk::UpdateApplicationResourceLifecycle"
          },
          {
            "ActionName": "UpdateApplicationVersion",
            "FullActionName": "elasticbeanstalk::UpdateApplicationVersion"
          },
          {
            "ActionName": "UpdateConfigurationTemplate",
            "FullActionName": "elasticbeanstalk::UpdateConfigurationTemplate"
          },
          {
            "ActionName": "UpdateEnvironment",
            "FullActionName": "elasticbeanstalk::UpdateEnvironment"
          }
        ]
      },
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "AddTags",
            "FullActionName": "elasticbeanstalk::AddTags"
          },
          {
            "ActionName": "RemoveTags",
            "FullActionName": "elasticbeanstalk::RemoveTags"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "CheckDNSAvailability",
            "FullActionName": "elasticbeanstalk::CheckDNSAvailability"
          },
          {
            "ActionName": "DescribeAccountAttributes",
            "FullActionName": "elasticbeanstalk::DescribeAccountAttributes"
          },
          {
            "ActionName": "DescribeConfigurationOptions",
            "FullActionName": "elasticbeanstalk::DescribeConfigurationOptions"
          },
          {
            "ActionName": "DescribeConfigurationSettings",
            "FullActionName": "elasticbeanstalk::DescribeConfigurationSettings"
          },
          {
            "ActionName": "DescribeEnvironmentHealth",
            "FullActionName": "elasticbeanstalk::DescribeEnvironmentHealth"
          },
          {
            "ActionName": "DescribeEnvironmentManagedActionHistory",
            "FullActionName": "elasticbeanstalk::DescribeEnvironmentManagedActionHistory"
          },
          {
            "ActionName": "DescribeEnvironmentManagedActions",
            "FullActionName": "elasticbeanstalk::DescribeEnvironmentManagedActions"
          },
          {
            "ActionName": "DescribeEnvironmentResources",
            "FullActionName": "elasticbeanstalk::DescribeEnvironmentResources"
          },
          {
            "ActionName": "DescribeEvents",
            "FullActionName": "elasticbeanstalk::DescribeEvents"
          },
          {
            "ActionName": "DescribeInstancesHealth",
            "FullActionName": "elasticbeanstalk::DescribeInstancesHealth"
          },
          {
            "ActionName": "DescribePlatformVersion",
            "FullActionName": "elasticbeanstalk::DescribePlatformVersion"
          },
          {
            "ActionName": "ListTagsForResource",
            "FullActionName": "elasticbeanstalk::ListTagsForResource"
          },
          {
            "ActionName": "RequestEnvironmentInfo",
            "FullActionName": "elasticbeanstalk::RequestEnvironmentInfo"
          },
          {
            "ActionName": "RetrieveEnvironmentInfo",
            "FullActionName": "elasticbeanstalk::RetrieveEnvironmentInfo"
          },
          {
            "ActionName": "ValidateConfigurationSettings",
            "FullActionName": "elasticbeanstalk::ValidateConfigurationSettings"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "DescribeApplicationVersions",
            "FullActionName": "elasticbeanstalk::DescribeApplicationVersions"
          },
          {
            "ActionName": "DescribeApplications",
            "FullActionName": "elasticbeanstalk::DescribeApplications"
          },
          {
            "ActionName": "DescribeEnvironments",
            "FullActionName": "elasticbeanstalk::DescribeEnvironments"
          },
          {
            "ActionName": "ListAvailableSolutionStacks",
            "FullActionName": "elasticbeanstalk::ListAvailableSolutionStacks"
          },
          {
            "ActionName": "ListPlatformVersions",
            "FullActionName": "elasticbeanstalk::ListPlatformVersions"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Elastic Container Registry",
    "AccessLevels": [
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "BatchCheckLayerAvailability",
            "FullActionName": "ecr::BatchCheckLayerAvailability"
          },
          {
            "ActionName": "BatchGetImage",
            "FullActionName": "ecr::BatchGetImage"
          },
          {
            "ActionName": "DescribeImages",
            "FullActionName": "ecr::DescribeImages"
          },
          {
            "ActionName": "GetAuthorizationToken",
            "FullActionName": "ecr::GetAuthorizationToken"
          },
          {
            "ActionName": "GetDownloadUrlForLayer",
            "FullActionName": "ecr::GetDownloadUrlForLayer"
          },
          {
            "ActionName": "GetLifecyclePolicy",
            "FullActionName": "ecr::GetLifecyclePolicy"
          },
          {
            "ActionName": "GetLifecyclePolicyPreview",
            "FullActionName": "ecr::GetLifecyclePolicyPreview"
          },
          {
            "ActionName": "GetRepositoryPolicy",
            "FullActionName": "ecr::GetRepositoryPolicy"
          },
          {
            "ActionName": "ListTagsForResource",
            "FullActionName": "ecr::ListTagsForResource"
          }
        ]
      },
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "BatchDeleteImage",
            "FullActionName": "ecr::BatchDeleteImage"
          },
          {
            "ActionName": "CompleteLayerUpload",
            "FullActionName": "ecr::CompleteLayerUpload"
          },
          {
            "ActionName": "CreateRepository",
            "FullActionName": "ecr::CreateRepository"
          },
          {
            "ActionName": "DeleteLifecyclePolicy",
            "FullActionName": "ecr::DeleteLifecyclePolicy"
          },
          {
            "ActionName": "DeleteRepository",
            "FullActionName": "ecr::DeleteRepository"
          },
          {
            "ActionName": "DeleteRepositoryPolicy",
            "FullActionName": "ecr::DeleteRepositoryPolicy"
          },
          {
            "ActionName": "InitiateLayerUpload",
            "FullActionName": "ecr::InitiateLayerUpload"
          },
          {
            "ActionName": "PutImage",
            "FullActionName": "ecr::PutImage"
          },
          {
            "ActionName": "PutImageTagMutability",
            "FullActionName": "ecr::PutImageTagMutability"
          },
          {
            "ActionName": "PutLifecyclePolicy",
            "FullActionName": "ecr::PutLifecyclePolicy"
          },
          {
            "ActionName": "StartLifecyclePolicyPreview",
            "FullActionName": "ecr::StartLifecyclePolicyPreview"
          },
          {
            "ActionName": "UploadLayerPart",
            "FullActionName": "ecr::UploadLayerPart"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "DescribeRepositories",
            "FullActionName": "ecr::DescribeRepositories"
          },
          {
            "ActionName": "ListImages",
            "FullActionName": "ecr::ListImages"
          }
        ]
      },
      {
        "AccessLevel": "Permissions",
        "Actions": [
          {
            "ActionName": "SetRepositoryPolicy",
            "FullActionName": "ecr::SetRepositoryPolicy"
          }
        ]
      },
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "TagResource",
            "FullActionName": "ecr::TagResource"
          },
          {
            "ActionName": "UntagResource",
            "FullActionName": "ecr::UntagResource"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Elastic Container Service",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "CreateCluster",
            "FullActionName": "ecs::CreateCluster"
          },
          {
            "ActionName": "CreateService",
            "FullActionName": "ecs::CreateService"
          },
          {
            "ActionName": "CreateTaskSet",
            "FullActionName": "ecs::CreateTaskSet"
          },
          {
            "ActionName": "DeleteAccountSetting",
            "FullActionName": "ecs::DeleteAccountSetting"
          },
          {
            "ActionName": "DeleteAttributes",
            "FullActionName": "ecs::DeleteAttributes"
          },
          {
            "ActionName": "DeleteCluster",
            "FullActionName": "ecs::DeleteCluster"
          },
          {
            "ActionName": "DeleteService",
            "FullActionName": "ecs::DeleteService"
          },
          {
            "ActionName": "DeleteTaskSet",
            "FullActionName": "ecs::DeleteTaskSet"
          },
          {
            "ActionName": "DeregisterContainerInstance",
            "FullActionName": "ecs::DeregisterContainerInstance"
          },
          {
            "ActionName": "DeregisterTaskDefinition",
            "FullActionName": "ecs::DeregisterTaskDefinition"
          },
          {
            "ActionName": "DiscoverPollEndpoint",
            "FullActionName": "ecs::DiscoverPollEndpoint"
          },
          {
            "ActionName": "Poll",
            "FullActionName": "ecs::Poll"
          },
          {
            "ActionName": "PutAccountSetting",
            "FullActionName": "ecs::PutAccountSetting"
          },
          {
            "ActionName": "PutAccountSettingDefault",
            "FullActionName": "ecs::PutAccountSettingDefault"
          },
          {
            "ActionName": "PutAttributes",
            "FullActionName": "ecs::PutAttributes"
          },
          {
            "ActionName": "RegisterContainerInstance",
            "FullActionName": "ecs::RegisterContainerInstance"
          },
          {
            "ActionName": "RegisterTaskDefinition",
            "FullActionName": "ecs::RegisterTaskDefinition"
          },
          {
            "ActionName": "RunTask",
            "FullActionName": "ecs::RunTask"
          },
          {
            "ActionName": "StartTask",
            "FullActionName": "ecs::StartTask"
          },
          {
            "ActionName": "StartTelemetrySession",
            "FullActionName": "ecs::StartTelemetrySession"
          },
          {
            "ActionName": "StopTask",
            "FullActionName": "ecs::StopTask"
          },
          {
            "ActionName": "SubmitAttachmentStateChanges",
            "FullActionName": "ecs::SubmitAttachmentStateChanges"
          },
          {
            "ActionName": "SubmitContainerStateChange",
            "FullActionName": "ecs::SubmitContainerStateChange"
          },
          {
            "ActionName": "SubmitTaskStateChange",
            "FullActionName": "ecs::SubmitTaskStateChange"
          },
          {
            "ActionName": "UpdateContainerAgent",
            "FullActionName": "ecs::UpdateContainerAgent"
          },
          {
            "ActionName": "UpdateContainerInstancesState",
            "FullActionName": "ecs::UpdateContainerInstancesState"
          },
          {
            "ActionName": "UpdateService",
            "FullActionName": "ecs::UpdateService"
          },
          {
            "ActionName": "UpdateServicePrimaryTaskSet",
            "FullActionName": "ecs::UpdateServicePrimaryTaskSet"
          },
          {
            "ActionName": "UpdateTaskSet",
            "FullActionName": "ecs::UpdateTaskSet"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeClusters",
            "FullActionName": "ecs::DescribeClusters"
          },
          {
            "ActionName": "DescribeContainerInstances",
            "FullActionName": "ecs::DescribeContainerInstances"
          },
          {
            "ActionName": "DescribeServices",
            "FullActionName": "ecs::DescribeServices"
          },
          {
            "ActionName": "DescribeTaskDefinition",
            "FullActionName": "ecs::DescribeTaskDefinition"
          },
          {
            "ActionName": "DescribeTaskSets",
            "FullActionName": "ecs::DescribeTaskSets"
          },
          {
            "ActionName": "DescribeTasks",
            "FullActionName": "ecs::DescribeTasks"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListAccountSettings",
            "FullActionName": "ecs::ListAccountSettings"
          },
          {
            "ActionName": "ListAttributes",
            "FullActionName": "ecs::ListAttributes"
          },
          {
            "ActionName": "ListClusters",
            "FullActionName": "ecs::ListClusters"
          },
          {
            "ActionName": "ListContainerInstances",
            "FullActionName": "ecs::ListContainerInstances"
          },
          {
            "ActionName": "ListServices",
            "FullActionName": "ecs::ListServices"
          },
          {
            "ActionName": "ListTagsForResource",
            "FullActionName": "ecs::ListTagsForResource"
          },
          {
            "ActionName": "ListTaskDefinitionFamilies",
            "FullActionName": "ecs::ListTaskDefinitionFamilies"
          },
          {
            "ActionName": "ListTaskDefinitions",
            "FullActionName": "ecs::ListTaskDefinitions"
          },
          {
            "ActionName": "ListTasks",
            "FullActionName": "ecs::ListTasks"
          }
        ]
      },
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "TagResource",
            "FullActionName": "ecs::TagResource"
          },
          {
            "ActionName": "UntagResource",
            "FullActionName": "ecs::UntagResource"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Elastic Transcoder",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "CancelJob",
            "FullActionName": "elastictranscoder::CancelJob"
          },
          {
            "ActionName": "CreateJob",
            "FullActionName": "elastictranscoder::CreateJob"
          },
          {
            "ActionName": "CreatePipeline",
            "FullActionName": "elastictranscoder::CreatePipeline"
          },
          {
            "ActionName": "CreatePreset",
            "FullActionName": "elastictranscoder::CreatePreset"
          },
          {
            "ActionName": "DeletePipeline",
            "FullActionName": "elastictranscoder::DeletePipeline"
          },
          {
            "ActionName": "DeletePreset",
            "FullActionName": "elastictranscoder::DeletePreset"
          },
          {
            "ActionName": "TestRole",
            "FullActionName": "elastictranscoder::TestRole"
          },
          {
            "ActionName": "UpdatePipeline",
            "FullActionName": "elastictranscoder::UpdatePipeline"
          },
          {
            "ActionName": "UpdatePipelineNotifications",
            "FullActionName": "elastictranscoder::UpdatePipelineNotifications"
          },
          {
            "ActionName": "UpdatePipelineStatus",
            "FullActionName": "elastictranscoder::UpdatePipelineStatus"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListJobsByPipeline",
            "FullActionName": "elastictranscoder::ListJobsByPipeline"
          },
          {
            "ActionName": "ListJobsByStatus",
            "FullActionName": "elastictranscoder::ListJobsByStatus"
          },
          {
            "ActionName": "ListPipelines",
            "FullActionName": "elastictranscoder::ListPipelines"
          },
          {
            "ActionName": "ListPresets",
            "FullActionName": "elastictranscoder::ListPresets"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "ReadJob",
            "FullActionName": "elastictranscoder::ReadJob"
          },
          {
            "ActionName": "ReadPipeline",
            "FullActionName": "elastictranscoder::ReadPipeline"
          },
          {
            "ActionName": "ReadPreset",
            "FullActionName": "elastictranscoder::ReadPreset"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Elasticsearch Service",
    "AccessLevels": [
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "AddTags",
            "FullActionName": "es::AddTags"
          },
          {
            "ActionName": "RemoveTags",
            "FullActionName": "es::RemoveTags"
          }
        ]
      },
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "CreateElasticsearchDomain",
            "FullActionName": "es::CreateElasticsearchDomain"
          },
          {
            "ActionName": "DeleteElasticsearchDomain",
            "FullActionName": "es::DeleteElasticsearchDomain"
          },
          {
            "ActionName": "DeleteElasticsearchServiceRole",
            "FullActionName": "es::DeleteElasticsearchServiceRole"
          },
          {
            "ActionName": "ESHttpDelete",
            "FullActionName": "es::ESHttpDelete"
          },
          {
            "ActionName": "ESHttpPost",
            "FullActionName": "es::ESHttpPost"
          },
          {
            "ActionName": "ESHttpPut",
            "FullActionName": "es::ESHttpPut"
          },
          {
            "ActionName": "PurchaseReservedElasticsearchInstance",
            "FullActionName": "es::PurchaseReservedElasticsearchInstance"
          },
          {
            "ActionName": "UpdateElasticsearchDomainConfig",
            "FullActionName": "es::UpdateElasticsearchDomainConfig"
          },
          {
            "ActionName": "UpgradeElasticsearchDomain",
            "FullActionName": "es::UpgradeElasticsearchDomain"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeElasticsearchDomain",
            "FullActionName": "es::DescribeElasticsearchDomain"
          },
          {
            "ActionName": "DescribeElasticsearchDomainConfig",
            "FullActionName": "es::DescribeElasticsearchDomainConfig"
          },
          {
            "ActionName": "ESHttpGet",
            "FullActionName": "es::ESHttpGet"
          },
          {
            "ActionName": "ESHttpHead",
            "FullActionName": "es::ESHttpHead"
          },
          {
            "ActionName": "GetUpgradeHistory",
            "FullActionName": "es::GetUpgradeHistory"
          },
          {
            "ActionName": "GetUpgradeStatus",
            "FullActionName": "es::GetUpgradeStatus"
          },
          {
            "ActionName": "ListTags",
            "FullActionName": "es::ListTags"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "DescribeElasticsearchDomains",
            "FullActionName": "es::DescribeElasticsearchDomains"
          },
          {
            "ActionName": "DescribeElasticsearchInstanceTypeLimits",
            "FullActionName": "es::DescribeElasticsearchInstanceTypeLimits"
          },
          {
            "ActionName": "DescribeReservedElasticsearchInstanceOfferings",
            "FullActionName": "es::DescribeReservedElasticsearchInstanceOfferings"
          },
          {
            "ActionName": "DescribeReservedElasticsearchInstances",
            "FullActionName": "es::DescribeReservedElasticsearchInstances"
          },
          {
            "ActionName": "GetCompatibleElasticsearchVersions",
            "FullActionName": "es::GetCompatibleElasticsearchVersions"
          },
          {
            "ActionName": "ListDomainNames",
            "FullActionName": "es::ListDomainNames"
          },
          {
            "ActionName": "ListElasticsearchInstanceTypes",
            "FullActionName": "es::ListElasticsearchInstanceTypes"
          },
          {
            "ActionName": "ListElasticsearchVersions",
            "FullActionName": "es::ListElasticsearchVersions"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Elemental Appliances and Software",
    "AccessLevels": [
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "CreateQuote",
            "FullActionName": "aesop::CreateQuote"
          },
          {
            "ActionName": "TagResource",
            "FullActionName": "aesop::TagResource"
          },
          {
            "ActionName": "UntagResource",
            "FullActionName": "aesop::UntagResource"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "GetQuote",
            "FullActionName": "aesop::GetQuote"
          },
          {
            "ActionName": "ListTagsForResource",
            "FullActionName": "aesop::ListTagsForResource"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListQuotes",
            "FullActionName": "aesop::ListQuotes"
          }
        ]
      },
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "UpdateQuote",
            "FullActionName": "aesop::UpdateQuote"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "EventBridge",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "ActivateEventSource",
            "FullActionName": "events::ActivateEventSource"
          },
          {
            "ActionName": "CreateEventBus",
            "FullActionName": "events::CreateEventBus"
          },
          {
            "ActionName": "CreatePartnerEventSource",
            "FullActionName": "events::CreatePartnerEventSource"
          },
          {
            "ActionName": "DeactivateEventSource",
            "FullActionName": "events::DeactivateEventSource"
          },
          {
            "ActionName": "DeleteEventBus",
            "FullActionName": "events::DeleteEventBus"
          },
          {
            "ActionName": "DeletePartnerEventSource",
            "FullActionName": "events::DeletePartnerEventSource"
          },
          {
            "ActionName": "DeleteRule",
            "FullActionName": "events::DeleteRule"
          },
          {
            "ActionName": "DisableRule",
            "FullActionName": "events::DisableRule"
          },
          {
            "ActionName": "EnableRule",
            "FullActionName": "events::EnableRule"
          },
          {
            "ActionName": "PutEvents",
            "FullActionName": "events::PutEvents"
          },
          {
            "ActionName": "PutPartnerEvents",
            "FullActionName": "events::PutPartnerEvents"
          },
          {
            "ActionName": "PutPermission",
            "FullActionName": "events::PutPermission"
          },
          {
            "ActionName": "PutTargets",
            "FullActionName": "events::PutTargets"
          },
          {
            "ActionName": "RemovePermission",
            "FullActionName": "events::RemovePermission"
          },
          {
            "ActionName": "RemoveTargets",
            "FullActionName": "events::RemoveTargets"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeEventBus",
            "FullActionName": "events::DescribeEventBus"
          },
          {
            "ActionName": "DescribeEventSource",
            "FullActionName": "events::DescribeEventSource"
          },
          {
            "ActionName": "DescribePartnerEventSource",
            "FullActionName": "events::DescribePartnerEventSource"
          },
          {
            "ActionName": "DescribeRule",
            "FullActionName": "events::DescribeRule"
          },
          {
            "ActionName": "TestEventPattern",
            "FullActionName": "events::TestEventPattern"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListEventBuses",
            "FullActionName": "events::ListEventBuses"
          },
          {
            "ActionName": "ListEventSources",
            "FullActionName": "events::ListEventSources"
          },
          {
            "ActionName": "ListPartnerEventSourceAccounts",
            "FullActionName": "events::ListPartnerEventSourceAccounts"
          },
          {
            "ActionName": "ListPartnerEventSources",
            "FullActionName": "events::ListPartnerEventSources"
          },
          {
            "ActionName": "ListRuleNamesByTarget",
            "FullActionName": "events::ListRuleNamesByTarget"
          },
          {
            "ActionName": "ListRules",
            "FullActionName": "events::ListRules"
          },
          {
            "ActionName": "ListTagsForResource",
            "FullActionName": "events::ListTagsForResource"
          },
          {
            "ActionName": "ListTargetsByRule",
            "FullActionName": "events::ListTargetsByRule"
          }
        ]
      },
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "PutRule",
            "FullActionName": "events::PutRule"
          },
          {
            "ActionName": "TagResource",
            "FullActionName": "events::TagResource"
          },
          {
            "ActionName": "UntagResource",
            "FullActionName": "events::UntagResource"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "ExecuteAPI",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "InvalidateCache",
            "FullActionName": "execute-api::InvalidateCache"
          },
          {
            "ActionName": "Invoke",
            "FullActionName": "execute-api::Invoke"
          },
          {
            "ActionName": "ManageConnections",
            "FullActionName": "execute-api::ManageConnections"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "FSx",
    "AccessLevels": [
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "CreateBackup",
            "FullActionName": "fsx::CreateBackup"
          },
          {
            "ActionName": "CreateFileSystem",
            "FullActionName": "fsx::CreateFileSystem"
          },
          {
            "ActionName": "CreateFileSystemFromBackup",
            "FullActionName": "fsx::CreateFileSystemFromBackup"
          },
          {
            "ActionName": "TagResource",
            "FullActionName": "fsx::TagResource"
          },
          {
            "ActionName": "UntagResource",
            "FullActionName": "fsx::UntagResource"
          }
        ]
      },
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "DeleteBackup",
            "FullActionName": "fsx::DeleteBackup"
          },
          {
            "ActionName": "DeleteFileSystem",
            "FullActionName": "fsx::DeleteFileSystem"
          },
          {
            "ActionName": "UpdateFileSystem",
            "FullActionName": "fsx::UpdateFileSystem"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeBackups",
            "FullActionName": "fsx::DescribeBackups"
          },
          {
            "ActionName": "DescribeFileSystems",
            "FullActionName": "fsx::DescribeFileSystems"
          },
          {
            "ActionName": "ListTagsForResource",
            "FullActionName": "fsx::ListTagsForResource"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Firehose",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "CreateDeliveryStream",
            "FullActionName": "firehose::CreateDeliveryStream"
          },
          {
            "ActionName": "DeleteDeliveryStream",
            "FullActionName": "firehose::DeleteDeliveryStream"
          },
          {
            "ActionName": "PutRecord",
            "FullActionName": "firehose::PutRecord"
          },
          {
            "ActionName": "PutRecordBatch",
            "FullActionName": "firehose::PutRecordBatch"
          },
          {
            "ActionName": "StartDeliveryStreamEncryption",
            "FullActionName": "firehose::StartDeliveryStreamEncryption"
          },
          {
            "ActionName": "StopDeliveryStreamEncryption",
            "FullActionName": "firehose::StopDeliveryStreamEncryption"
          },
          {
            "ActionName": "TagDeliveryStream",
            "FullActionName": "firehose::TagDeliveryStream"
          },
          {
            "ActionName": "UntagDeliveryStream",
            "FullActionName": "firehose::UntagDeliveryStream"
          },
          {
            "ActionName": "UpdateDestination",
            "FullActionName": "firehose::UpdateDestination"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "DescribeDeliveryStream",
            "FullActionName": "firehose::DescribeDeliveryStream"
          },
          {
            "ActionName": "ListDeliveryStreams",
            "FullActionName": "firehose::ListDeliveryStreams"
          },
          {
            "ActionName": "ListTagsForDeliveryStream",
            "FullActionName": "firehose::ListTagsForDeliveryStream"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Firewall Manager",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "AssociateAdminAccount",
            "FullActionName": "fms::AssociateAdminAccount"
          },
          {
            "ActionName": "DeleteNotificationChannel",
            "FullActionName": "fms::DeleteNotificationChannel"
          },
          {
            "ActionName": "DeletePolicy",
            "FullActionName": "fms::DeletePolicy"
          },
          {
            "ActionName": "DisassociateAdminAccount",
            "FullActionName": "fms::DisassociateAdminAccount"
          },
          {
            "ActionName": "PutNotificationChannel",
            "FullActionName": "fms::PutNotificationChannel"
          },
          {
            "ActionName": "PutPolicy",
            "FullActionName": "fms::PutPolicy"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "GetAdminAccount",
            "FullActionName": "fms::GetAdminAccount"
          },
          {
            "ActionName": "GetComplianceDetail",
            "FullActionName": "fms::GetComplianceDetail"
          },
          {
            "ActionName": "GetNotificationChannel",
            "FullActionName": "fms::GetNotificationChannel"
          },
          {
            "ActionName": "GetPolicy",
            "FullActionName": "fms::GetPolicy"
          },
          {
            "ActionName": "GetProtectionStatus",
            "FullActionName": "fms::GetProtectionStatus"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListComplianceStatus",
            "FullActionName": "fms::ListComplianceStatus"
          },
          {
            "ActionName": "ListMemberAccounts",
            "FullActionName": "fms::ListMemberAccounts"
          },
          {
            "ActionName": "ListPolicies",
            "FullActionName": "fms::ListPolicies"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Forecast",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "CreateDataset",
            "FullActionName": "forecast::CreateDataset"
          },
          {
            "ActionName": "CreateDatasetGroup",
            "FullActionName": "forecast::CreateDatasetGroup"
          },
          {
            "ActionName": "CreateDatasetImportJob",
            "FullActionName": "forecast::CreateDatasetImportJob"
          },
          {
            "ActionName": "CreateForecast",
            "FullActionName": "forecast::CreateForecast"
          },
          {
            "ActionName": "CreateForecastExportJob",
            "FullActionName": "forecast::CreateForecastExportJob"
          },
          {
            "ActionName": "CreatePredictor",
            "FullActionName": "forecast::CreatePredictor"
          },
          {
            "ActionName": "DeleteDataset",
            "FullActionName": "forecast::DeleteDataset"
          },
          {
            "ActionName": "DeleteDatasetGroup",
            "FullActionName": "forecast::DeleteDatasetGroup"
          },
          {
            "ActionName": "DeleteDatasetImportJob",
            "FullActionName": "forecast::DeleteDatasetImportJob"
          },
          {
            "ActionName": "DeleteForecast",
            "FullActionName": "forecast::DeleteForecast"
          },
          {
            "ActionName": "DeleteForecastExportJob",
            "FullActionName": "forecast::DeleteForecastExportJob"
          },
          {
            "ActionName": "DeletePredictor",
            "FullActionName": "forecast::DeletePredictor"
          },
          {
            "ActionName": "UpdateDatasetGroup",
            "FullActionName": "forecast::UpdateDatasetGroup"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeDataset",
            "FullActionName": "forecast::DescribeDataset"
          },
          {
            "ActionName": "DescribeDatasetGroup",
            "FullActionName": "forecast::DescribeDatasetGroup"
          },
          {
            "ActionName": "DescribeDatasetImportJob",
            "FullActionName": "forecast::DescribeDatasetImportJob"
          },
          {
            "ActionName": "DescribeForecast",
            "FullActionName": "forecast::DescribeForecast"
          },
          {
            "ActionName": "DescribeForecastExportJob",
            "FullActionName": "forecast::DescribeForecastExportJob"
          },
          {
            "ActionName": "DescribePredictor",
            "FullActionName": "forecast::DescribePredictor"
          },
          {
            "ActionName": "GetAccuracyMetrics",
            "FullActionName": "forecast::GetAccuracyMetrics"
          },
          {
            "ActionName": "QueryForecast",
            "FullActionName": "forecast::QueryForecast"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListDatasetGroups",
            "FullActionName": "forecast::ListDatasetGroups"
          },
          {
            "ActionName": "ListDatasetImportJobs",
            "FullActionName": "forecast::ListDatasetImportJobs"
          },
          {
            "ActionName": "ListDatasets",
            "FullActionName": "forecast::ListDatasets"
          },
          {
            "ActionName": "ListForecastExportJobs",
            "FullActionName": "forecast::ListForecastExportJobs"
          },
          {
            "ActionName": "ListForecasts",
            "FullActionName": "forecast::ListForecasts"
          },
          {
            "ActionName": "ListPredictors",
            "FullActionName": "forecast::ListPredictors"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "FreeRTOS",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "CreateSoftwareConfiguration",
            "FullActionName": "freertos::CreateSoftwareConfiguration"
          },
          {
            "ActionName": "DeleteSoftwareConfiguration",
            "FullActionName": "freertos::DeleteSoftwareConfiguration"
          },
          {
            "ActionName": "UpdateSoftwareConfiguration",
            "FullActionName": "freertos::UpdateSoftwareConfiguration"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeHardwarePlatform",
            "FullActionName": "freertos::DescribeHardwarePlatform"
          },
          {
            "ActionName": "DescribeSoftwareConfiguration",
            "FullActionName": "freertos::DescribeSoftwareConfiguration"
          },
          {
            "ActionName": "GetSoftwareURL",
            "FullActionName": "freertos::GetSoftwareURL"
          },
          {
            "ActionName": "GetSoftwareURLForConfiguration",
            "FullActionName": "freertos::GetSoftwareURLForConfiguration"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListFreeRTOSVersions",
            "FullActionName": "freertos::ListFreeRTOSVersions"
          },
          {
            "ActionName": "ListHardwarePlatforms",
            "FullActionName": "freertos::ListHardwarePlatforms"
          },
          {
            "ActionName": "ListHardwareVendors",
            "FullActionName": "freertos::ListHardwareVendors"
          },
          {
            "ActionName": "ListSoftwareConfigurations",
            "FullActionName": "freertos::ListSoftwareConfigurations"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "GameLift",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "CreateAlias",
            "FullActionName": "gamelift::CreateAlias"
          },
          {
            "ActionName": "CreateBuild",
            "FullActionName": "gamelift::CreateBuild"
          },
          {
            "ActionName": "CreateFleet",
            "FullActionName": "gamelift::CreateFleet"
          },
          {
            "ActionName": "CreateGameSession",
            "FullActionName": "gamelift::CreateGameSession"
          },
          {
            "ActionName": "CreatePlayerSession",
            "FullActionName": "gamelift::CreatePlayerSession"
          },
          {
            "ActionName": "CreatePlayerSessions",
            "FullActionName": "gamelift::CreatePlayerSessions"
          },
          {
            "ActionName": "DeleteAlias",
            "FullActionName": "gamelift::DeleteAlias"
          },
          {
            "ActionName": "DeleteBuild",
            "FullActionName": "gamelift::DeleteBuild"
          },
          {
            "ActionName": "DeleteFleet",
            "FullActionName": "gamelift::DeleteFleet"
          },
          {
            "ActionName": "DeleteScalingPolicy",
            "FullActionName": "gamelift::DeleteScalingPolicy"
          },
          {
            "ActionName": "PutScalingPolicy",
            "FullActionName": "gamelift::PutScalingPolicy"
          },
          {
            "ActionName": "UpdateAlias",
            "FullActionName": "gamelift::UpdateAlias"
          },
          {
            "ActionName": "UpdateBuild",
            "FullActionName": "gamelift::UpdateBuild"
          },
          {
            "ActionName": "UpdateFleetAttributes",
            "FullActionName": "gamelift::UpdateFleetAttributes"
          },
          {
            "ActionName": "UpdateFleetCapacity",
            "FullActionName": "gamelift::UpdateFleetCapacity"
          },
          {
            "ActionName": "UpdateFleetPortSettings",
            "FullActionName": "gamelift::UpdateFleetPortSettings"
          },
          {
            "ActionName": "UpdateGameSession",
            "FullActionName": "gamelift::UpdateGameSession"
          },
          {
            "ActionName": "UpdateRuntimeConfiguration",
            "FullActionName": "gamelift::UpdateRuntimeConfiguration"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeAlias",
            "FullActionName": "gamelift::DescribeAlias"
          },
          {
            "ActionName": "DescribeBuild",
            "FullActionName": "gamelift::DescribeBuild"
          },
          {
            "ActionName": "DescribeEC2InstanceLimits",
            "FullActionName": "gamelift::DescribeEC2InstanceLimits"
          },
          {
            "ActionName": "DescribeFleetAttributes",
            "FullActionName": "gamelift::DescribeFleetAttributes"
          },
          {
            "ActionName": "DescribeFleetCapacity",
            "FullActionName": "gamelift::DescribeFleetCapacity"
          },
          {
            "ActionName": "DescribeFleetEvents",
            "FullActionName": "gamelift::DescribeFleetEvents"
          },
          {
            "ActionName": "DescribeFleetPortSettings",
            "FullActionName": "gamelift::DescribeFleetPortSettings"
          },
          {
            "ActionName": "DescribeFleetUtilization",
            "FullActionName": "gamelift::DescribeFleetUtilization"
          },
          {
            "ActionName": "DescribeGameSessionDetails",
            "FullActionName": "gamelift::DescribeGameSessionDetails"
          },
          {
            "ActionName": "DescribeGameSessions",
            "FullActionName": "gamelift::DescribeGameSessions"
          },
          {
            "ActionName": "DescribeInstances",
            "FullActionName": "gamelift::DescribeInstances"
          },
          {
            "ActionName": "DescribePlayerSessions",
            "FullActionName": "gamelift::DescribePlayerSessions"
          },
          {
            "ActionName": "DescribeRuntimeConfiguration",
            "FullActionName": "gamelift::DescribeRuntimeConfiguration"
          },
          {
            "ActionName": "DescribeScalingPolicies",
            "FullActionName": "gamelift::DescribeScalingPolicies"
          },
          {
            "ActionName": "GetGameSessionLogUrl",
            "FullActionName": "gamelift::GetGameSessionLogUrl"
          },
          {
            "ActionName": "GetInstanceAccess",
            "FullActionName": "gamelift::GetInstanceAccess"
          },
          {
            "ActionName": "RequestUploadCredentials",
            "FullActionName": "gamelift::RequestUploadCredentials"
          },
          {
            "ActionName": "ResolveAlias",
            "FullActionName": "gamelift::ResolveAlias"
          },
          {
            "ActionName": "SearchGameSessions",
            "FullActionName": "gamelift::SearchGameSessions"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListAliases",
            "FullActionName": "gamelift::ListAliases"
          },
          {
            "ActionName": "ListBuilds",
            "FullActionName": "gamelift::ListBuilds"
          },
          {
            "ActionName": "ListFleets",
            "FullActionName": "gamelift::ListFleets"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Glacier",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "AbortMultipartUpload",
            "FullActionName": "glacier::AbortMultipartUpload"
          },
          {
            "ActionName": "CompleteMultipartUpload",
            "FullActionName": "glacier::CompleteMultipartUpload"
          },
          {
            "ActionName": "CreateVault",
            "FullActionName": "glacier::CreateVault"
          },
          {
            "ActionName": "DeleteArchive",
            "FullActionName": "glacier::DeleteArchive"
          },
          {
            "ActionName": "DeleteVault",
            "FullActionName": "glacier::DeleteVault"
          },
          {
            "ActionName": "DeleteVaultNotifications",
            "FullActionName": "glacier::DeleteVaultNotifications"
          },
          {
            "ActionName": "InitiateJob",
            "FullActionName": "glacier::InitiateJob"
          },
          {
            "ActionName": "InitiateMultipartUpload",
            "FullActionName": "glacier::InitiateMultipartUpload"
          },
          {
            "ActionName": "PurchaseProvisionedCapacity",
            "FullActionName": "glacier::PurchaseProvisionedCapacity"
          },
          {
            "ActionName": "SetVaultNotifications",
            "FullActionName": "glacier::SetVaultNotifications"
          },
          {
            "ActionName": "UploadArchive",
            "FullActionName": "glacier::UploadArchive"
          },
          {
            "ActionName": "UploadMultipartPart",
            "FullActionName": "glacier::UploadMultipartPart"
          }
        ]
      },
      {
        "AccessLevel": "Permissions",
        "Actions": [
          {
            "ActionName": "AbortVaultLock",
            "FullActionName": "glacier::AbortVaultLock"
          },
          {
            "ActionName": "CompleteVaultLock",
            "FullActionName": "glacier::CompleteVaultLock"
          },
          {
            "ActionName": "DeleteVaultAccessPolicy",
            "FullActionName": "glacier::DeleteVaultAccessPolicy"
          },
          {
            "ActionName": "InitiateVaultLock",
            "FullActionName": "glacier::InitiateVaultLock"
          },
          {
            "ActionName": "SetDataRetrievalPolicy",
            "FullActionName": "glacier::SetDataRetrievalPolicy"
          },
          {
            "ActionName": "SetVaultAccessPolicy",
            "FullActionName": "glacier::SetVaultAccessPolicy"
          }
        ]
      },
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "AddTagsToVault",
            "FullActionName": "glacier::AddTagsToVault"
          },
          {
            "ActionName": "RemoveTagsFromVault",
            "FullActionName": "glacier::RemoveTagsFromVault"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeJob",
            "FullActionName": "glacier::DescribeJob"
          },
          {
            "ActionName": "DescribeVault",
            "FullActionName": "glacier::DescribeVault"
          },
          {
            "ActionName": "GetDataRetrievalPolicy",
            "FullActionName": "glacier::GetDataRetrievalPolicy"
          },
          {
            "ActionName": "GetJobOutput",
            "FullActionName": "glacier::GetJobOutput"
          },
          {
            "ActionName": "GetVaultAccessPolicy",
            "FullActionName": "glacier::GetVaultAccessPolicy"
          },
          {
            "ActionName": "GetVaultLock",
            "FullActionName": "glacier::GetVaultLock"
          },
          {
            "ActionName": "GetVaultNotifications",
            "FullActionName": "glacier::GetVaultNotifications"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListJobs",
            "FullActionName": "glacier::ListJobs"
          },
          {
            "ActionName": "ListMultipartUploads",
            "FullActionName": "glacier::ListMultipartUploads"
          },
          {
            "ActionName": "ListParts",
            "FullActionName": "glacier::ListParts"
          },
          {
            "ActionName": "ListProvisionedCapacity",
            "FullActionName": "glacier::ListProvisionedCapacity"
          },
          {
            "ActionName": "ListTagsForVault",
            "FullActionName": "glacier::ListTagsForVault"
          },
          {
            "ActionName": "ListVaults",
            "FullActionName": "glacier::ListVaults"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "GlobalAccelerator",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "CreateAccelerator",
            "FullActionName": "globalaccelerator::CreateAccelerator"
          },
          {
            "ActionName": "CreateEndpointGroup",
            "FullActionName": "globalaccelerator::CreateEndpointGroup"
          },
          {
            "ActionName": "CreateListener",
            "FullActionName": "globalaccelerator::CreateListener"
          },
          {
            "ActionName": "DeleteAccelerator",
            "FullActionName": "globalaccelerator::DeleteAccelerator"
          },
          {
            "ActionName": "DeleteEndpointGroup",
            "FullActionName": "globalaccelerator::DeleteEndpointGroup"
          },
          {
            "ActionName": "DeleteListener",
            "FullActionName": "globalaccelerator::DeleteListener"
          },
          {
            "ActionName": "UpdateAccelerator",
            "FullActionName": "globalaccelerator::UpdateAccelerator"
          },
          {
            "ActionName": "UpdateAcceleratorAttributes",
            "FullActionName": "globalaccelerator::UpdateAcceleratorAttributes"
          },
          {
            "ActionName": "UpdateEndpointGroup",
            "FullActionName": "globalaccelerator::UpdateEndpointGroup"
          },
          {
            "ActionName": "UpdateListener",
            "FullActionName": "globalaccelerator::UpdateListener"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeAccelerator",
            "FullActionName": "globalaccelerator::DescribeAccelerator"
          },
          {
            "ActionName": "DescribeAcceleratorAttributes",
            "FullActionName": "globalaccelerator::DescribeAcceleratorAttributes"
          },
          {
            "ActionName": "DescribeEndpointGroup",
            "FullActionName": "globalaccelerator::DescribeEndpointGroup"
          },
          {
            "ActionName": "DescribeListener",
            "FullActionName": "globalaccelerator::DescribeListener"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListAccelerators",
            "FullActionName": "globalaccelerator::ListAccelerators"
          },
          {
            "ActionName": "ListEndpointGroups",
            "FullActionName": "globalaccelerator::ListEndpointGroups"
          },
          {
            "ActionName": "ListListeners",
            "FullActionName": "globalaccelerator::ListListeners"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Glue",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "BatchCreatePartition",
            "FullActionName": "glue::BatchCreatePartition"
          },
          {
            "ActionName": "BatchDeleteConnection",
            "FullActionName": "glue::BatchDeleteConnection"
          },
          {
            "ActionName": "BatchDeletePartition",
            "FullActionName": "glue::BatchDeletePartition"
          },
          {
            "ActionName": "BatchDeleteTable",
            "FullActionName": "glue::BatchDeleteTable"
          },
          {
            "ActionName": "BatchStopJobRun",
            "FullActionName": "glue::BatchStopJobRun"
          },
          {
            "ActionName": "CreateClassifier",
            "FullActionName": "glue::CreateClassifier"
          },
          {
            "ActionName": "CreateConnection",
            "FullActionName": "glue::CreateConnection"
          },
          {
            "ActionName": "CreateCrawler",
            "FullActionName": "glue::CreateCrawler"
          },
          {
            "ActionName": "CreateDatabase",
            "FullActionName": "glue::CreateDatabase"
          },
          {
            "ActionName": "CreateDevEndpoint",
            "FullActionName": "glue::CreateDevEndpoint"
          },
          {
            "ActionName": "CreateJob",
            "FullActionName": "glue::CreateJob"
          },
          {
            "ActionName": "CreatePartition",
            "FullActionName": "glue::CreatePartition"
          },
          {
            "ActionName": "CreateScript",
            "FullActionName": "glue::CreateScript"
          },
          {
            "ActionName": "CreateSecurityConfiguration",
            "FullActionName": "glue::CreateSecurityConfiguration"
          },
          {
            "ActionName": "CreateTable",
            "FullActionName": "glue::CreateTable"
          },
          {
            "ActionName": "CreateTrigger",
            "FullActionName": "glue::CreateTrigger"
          },
          {
            "ActionName": "CreateUserDefinedFunction",
            "FullActionName": "glue::CreateUserDefinedFunction"
          },
          {
            "ActionName": "CreateWorkflow",
            "FullActionName": "glue::CreateWorkflow"
          },
          {
            "ActionName": "DeleteClassifier",
            "FullActionName": "glue::DeleteClassifier"
          },
          {
            "ActionName": "DeleteConnection",
            "FullActionName": "glue::DeleteConnection"
          },
          {
            "ActionName": "DeleteCrawler",
            "FullActionName": "glue::DeleteCrawler"
          },
          {
            "ActionName": "DeleteDatabase",
            "FullActionName": "glue::DeleteDatabase"
          },
          {
            "ActionName": "DeleteDevEndpoint",
            "FullActionName": "glue::DeleteDevEndpoint"
          },
          {
            "ActionName": "DeleteJob",
            "FullActionName": "glue::DeleteJob"
          },
          {
            "ActionName": "DeletePartition",
            "FullActionName": "glue::DeletePartition"
          },
          {
            "ActionName": "DeleteResourcePolicy",
            "FullActionName": "glue::DeleteResourcePolicy"
          },
          {
            "ActionName": "DeleteSecurityConfiguration",
            "FullActionName": "glue::DeleteSecurityConfiguration"
          },
          {
            "ActionName": "DeleteTable",
            "FullActionName": "glue::DeleteTable"
          },
          {
            "ActionName": "DeleteTrigger",
            "FullActionName": "glue::DeleteTrigger"
          },
          {
            "ActionName": "DeleteUserDefinedFunction",
            "FullActionName": "glue::DeleteUserDefinedFunction"
          },
          {
            "ActionName": "DeleteWorkflow",
            "FullActionName": "glue::DeleteWorkflow"
          },
          {
            "ActionName": "GetMapping",
            "FullActionName": "glue::GetMapping"
          },
          {
            "ActionName": "ImportCatalogToGlue",
            "FullActionName": "glue::ImportCatalogToGlue"
          },
          {
            "ActionName": "PutDataCatalogEncryptionSettings",
            "FullActionName": "glue::PutDataCatalogEncryptionSettings"
          },
          {
            "ActionName": "PutResourcePolicy",
            "FullActionName": "glue::PutResourcePolicy"
          },
          {
            "ActionName": "PutWorkflowRunProperties",
            "FullActionName": "glue::PutWorkflowRunProperties"
          },
          {
            "ActionName": "ResetJobBookmark",
            "FullActionName": "glue::ResetJobBookmark"
          },
          {
            "ActionName": "StartCrawler",
            "FullActionName": "glue::StartCrawler"
          },
          {
            "ActionName": "StartCrawlerSchedule",
            "FullActionName": "glue::StartCrawlerSchedule"
          },
          {
            "ActionName": "StartJobRun",
            "FullActionName": "glue::StartJobRun"
          },
          {
            "ActionName": "StartTrigger",
            "FullActionName": "glue::StartTrigger"
          },
          {
            "ActionName": "StartWorkflowRun",
            "FullActionName": "glue::StartWorkflowRun"
          },
          {
            "ActionName": "StopCrawler",
            "FullActionName": "glue::StopCrawler"
          },
          {
            "ActionName": "StopCrawlerSchedule",
            "FullActionName": "glue::StopCrawlerSchedule"
          },
          {
            "ActionName": "StopTrigger",
            "FullActionName": "glue::StopTrigger"
          },
          {
            "ActionName": "UpdateClassifier",
            "FullActionName": "glue::UpdateClassifier"
          },
          {
            "ActionName": "UpdateConnection",
            "FullActionName": "glue::UpdateConnection"
          },
          {
            "ActionName": "UpdateCrawler",
            "FullActionName": "glue::UpdateCrawler"
          },
          {
            "ActionName": "UpdateDatabase",
            "FullActionName": "glue::UpdateDatabase"
          },
          {
            "ActionName": "UpdateDevEndpoint",
            "FullActionName": "glue::UpdateDevEndpoint"
          },
          {
            "ActionName": "UpdateJob",
            "FullActionName": "glue::UpdateJob"
          },
          {
            "ActionName": "UpdatePartition",
            "FullActionName": "glue::UpdatePartition"
          },
          {
            "ActionName": "UpdateTable",
            "FullActionName": "glue::UpdateTable"
          },
          {
            "ActionName": "UpdateTrigger",
            "FullActionName": "glue::UpdateTrigger"
          },
          {
            "ActionName": "UpdateUserDefinedFunction",
            "FullActionName": "glue::UpdateUserDefinedFunction"
          },
          {
            "ActionName": "UpdateWorkflow",
            "FullActionName": "glue::UpdateWorkflow"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "BatchDeleteTableVersion",
            "FullActionName": "glue::BatchDeleteTableVersion"
          },
          {
            "ActionName": "BatchGetCrawlers",
            "FullActionName": "glue::BatchGetCrawlers"
          },
          {
            "ActionName": "BatchGetDevEndpoints",
            "FullActionName": "glue::BatchGetDevEndpoints"
          },
          {
            "ActionName": "BatchGetJobs",
            "FullActionName": "glue::BatchGetJobs"
          },
          {
            "ActionName": "BatchGetPartition",
            "FullActionName": "glue::BatchGetPartition"
          },
          {
            "ActionName": "BatchGetTriggers",
            "FullActionName": "glue::BatchGetTriggers"
          },
          {
            "ActionName": "BatchGetWorkflows",
            "FullActionName": "glue::BatchGetWorkflows"
          },
          {
            "ActionName": "DeleteTableVersion",
            "FullActionName": "glue::DeleteTableVersion"
          },
          {
            "ActionName": "GetCatalogImportStatus",
            "FullActionName": "glue::GetCatalogImportStatus"
          },
          {
            "ActionName": "GetClassifier",
            "FullActionName": "glue::GetClassifier"
          },
          {
            "ActionName": "GetClassifiers",
            "FullActionName": "glue::GetClassifiers"
          },
          {
            "ActionName": "GetConnection",
            "FullActionName": "glue::GetConnection"
          },
          {
            "ActionName": "GetConnections",
            "FullActionName": "glue::GetConnections"
          },
          {
            "ActionName": "GetCrawler",
            "FullActionName": "glue::GetCrawler"
          },
          {
            "ActionName": "GetCrawlerMetrics",
            "FullActionName": "glue::GetCrawlerMetrics"
          },
          {
            "ActionName": "GetCrawlers",
            "FullActionName": "glue::GetCrawlers"
          },
          {
            "ActionName": "GetDataCatalogEncryptionSettings",
            "FullActionName": "glue::GetDataCatalogEncryptionSettings"
          },
          {
            "ActionName": "GetDatabase",
            "FullActionName": "glue::GetDatabase"
          },
          {
            "ActionName": "GetDatabases",
            "FullActionName": "glue::GetDatabases"
          },
          {
            "ActionName": "GetDataflowGraph",
            "FullActionName": "glue::GetDataflowGraph"
          },
          {
            "ActionName": "GetDevEndpoint",
            "FullActionName": "glue::GetDevEndpoint"
          },
          {
            "ActionName": "GetDevEndpoints",
            "FullActionName": "glue::GetDevEndpoints"
          },
          {
            "ActionName": "GetJob",
            "FullActionName": "glue::GetJob"
          },
          {
            "ActionName": "GetJobRun",
            "FullActionName": "glue::GetJobRun"
          },
          {
            "ActionName": "GetJobRuns",
            "FullActionName": "glue::GetJobRuns"
          },
          {
            "ActionName": "GetJobs",
            "FullActionName": "glue::GetJobs"
          },
          {
            "ActionName": "GetPartition",
            "FullActionName": "glue::GetPartition"
          },
          {
            "ActionName": "GetPartitions",
            "FullActionName": "glue::GetPartitions"
          },
          {
            "ActionName": "GetPlan",
            "FullActionName": "glue::GetPlan"
          },
          {
            "ActionName": "GetResourcePolicy",
            "FullActionName": "glue::GetResourcePolicy"
          },
          {
            "ActionName": "GetSecurityConfiguration",
            "FullActionName": "glue::GetSecurityConfiguration"
          },
          {
            "ActionName": "GetSecurityConfigurations",
            "FullActionName": "glue::GetSecurityConfigurations"
          },
          {
            "ActionName": "GetTable",
            "FullActionName": "glue::GetTable"
          },
          {
            "ActionName": "GetTableVersion",
            "FullActionName": "glue::GetTableVersion"
          },
          {
            "ActionName": "GetTableVersions",
            "FullActionName": "glue::GetTableVersions"
          },
          {
            "ActionName": "GetTables",
            "FullActionName": "glue::GetTables"
          },
          {
            "ActionName": "GetTags",
            "FullActionName": "glue::GetTags"
          },
          {
            "ActionName": "GetTrigger",
            "FullActionName": "glue::GetTrigger"
          },
          {
            "ActionName": "GetTriggers",
            "FullActionName": "glue::GetTriggers"
          },
          {
            "ActionName": "GetUserDefinedFunction",
            "FullActionName": "glue::GetUserDefinedFunction"
          },
          {
            "ActionName": "GetUserDefinedFunctions",
            "FullActionName": "glue::GetUserDefinedFunctions"
          },
          {
            "ActionName": "GetWorkflow",
            "FullActionName": "glue::GetWorkflow"
          },
          {
            "ActionName": "GetWorkflowRun",
            "FullActionName": "glue::GetWorkflowRun"
          },
          {
            "ActionName": "GetWorkflowRunProperties",
            "FullActionName": "glue::GetWorkflowRunProperties"
          },
          {
            "ActionName": "GetWorkflowRuns",
            "FullActionName": "glue::GetWorkflowRuns"
          },
          {
            "ActionName": "TagResource",
            "FullActionName": "glue::TagResource"
          },
          {
            "ActionName": "UntagResource",
            "FullActionName": "glue::UntagResource"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListCrawlers",
            "FullActionName": "glue::ListCrawlers"
          },
          {
            "ActionName": "ListDevEndpoints",
            "FullActionName": "glue::ListDevEndpoints"
          },
          {
            "ActionName": "ListJobs",
            "FullActionName": "glue::ListJobs"
          },
          {
            "ActionName": "ListTriggers",
            "FullActionName": "glue::ListTriggers"
          },
          {
            "ActionName": "ListWorkflows",
            "FullActionName": "glue::ListWorkflows"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Ground Station",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "CancelContact",
            "FullActionName": "groundstation::CancelContact"
          },
          {
            "ActionName": "CreateConfig",
            "FullActionName": "groundstation::CreateConfig"
          },
          {
            "ActionName": "CreateDataflowEndpointGroup",
            "FullActionName": "groundstation::CreateDataflowEndpointGroup"
          },
          {
            "ActionName": "CreateMissionProfile",
            "FullActionName": "groundstation::CreateMissionProfile"
          },
          {
            "ActionName": "DeleteConfig",
            "FullActionName": "groundstation::DeleteConfig"
          },
          {
            "ActionName": "DeleteDataflowEndpointGroup",
            "FullActionName": "groundstation::DeleteDataflowEndpointGroup"
          },
          {
            "ActionName": "DeleteMissionProfile",
            "FullActionName": "groundstation::DeleteMissionProfile"
          },
          {
            "ActionName": "ReserveContact",
            "FullActionName": "groundstation::ReserveContact"
          },
          {
            "ActionName": "UpdateConfig",
            "FullActionName": "groundstation::UpdateConfig"
          },
          {
            "ActionName": "UpdateMissionProfile",
            "FullActionName": "groundstation::UpdateMissionProfile"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeContact",
            "FullActionName": "groundstation::DescribeContact"
          },
          {
            "ActionName": "GetConfig",
            "FullActionName": "groundstation::GetConfig"
          },
          {
            "ActionName": "GetDataflowEndpointGroup",
            "FullActionName": "groundstation::GetDataflowEndpointGroup"
          },
          {
            "ActionName": "GetMinuteUsage",
            "FullActionName": "groundstation::GetMinuteUsage"
          },
          {
            "ActionName": "GetMissionProfile",
            "FullActionName": "groundstation::GetMissionProfile"
          },
          {
            "ActionName": "GetSatellite",
            "FullActionName": "groundstation::GetSatellite"
          },
          {
            "ActionName": "ListTagsForResource",
            "FullActionName": "groundstation::ListTagsForResource"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListConfigs",
            "FullActionName": "groundstation::ListConfigs"
          },
          {
            "ActionName": "ListContacts",
            "FullActionName": "groundstation::ListContacts"
          },
          {
            "ActionName": "ListDataflowEndpointGroups",
            "FullActionName": "groundstation::ListDataflowEndpointGroups"
          },
          {
            "ActionName": "ListGroundStations",
            "FullActionName": "groundstation::ListGroundStations"
          },
          {
            "ActionName": "ListMissionProfiles",
            "FullActionName": "groundstation::ListMissionProfiles"
          },
          {
            "ActionName": "ListSatellites",
            "FullActionName": "groundstation::ListSatellites"
          }
        ]
      },
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "TagResource",
            "FullActionName": "groundstation::TagResource"
          },
          {
            "ActionName": "UntagResource",
            "FullActionName": "groundstation::UntagResource"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "GroundTruth Labeling",
    "AccessLevels": [
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeConsoleJob",
            "FullActionName": "groundtruthlabeling::DescribeConsoleJob"
          },
          {
            "ActionName": "ListDatasetObjects",
            "FullActionName": "groundtruthlabeling::ListDatasetObjects"
          }
        ]
      },
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "RunFilterOrSampleDatasetJob",
            "FullActionName": "groundtruthlabeling::RunFilterOrSampleDatasetJob"
          },
          {
            "ActionName": "RunGenerateManifestByCrawlingJob",
            "FullActionName": "groundtruthlabeling::RunGenerateManifestByCrawlingJob"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "GuardDuty",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "AcceptInvitation",
            "FullActionName": "guardduty::AcceptInvitation"
          },
          {
            "ActionName": "ArchiveFindings",
            "FullActionName": "guardduty::ArchiveFindings"
          },
          {
            "ActionName": "CreateDetector",
            "FullActionName": "guardduty::CreateDetector"
          },
          {
            "ActionName": "CreateFilter",
            "FullActionName": "guardduty::CreateFilter"
          },
          {
            "ActionName": "CreateIPSet",
            "FullActionName": "guardduty::CreateIPSet"
          },
          {
            "ActionName": "CreateMembers",
            "FullActionName": "guardduty::CreateMembers"
          },
          {
            "ActionName": "CreateSampleFindings",
            "FullActionName": "guardduty::CreateSampleFindings"
          },
          {
            "ActionName": "CreateThreatIntelSet",
            "FullActionName": "guardduty::CreateThreatIntelSet"
          },
          {
            "ActionName": "DeclineInvitations",
            "FullActionName": "guardduty::DeclineInvitations"
          },
          {
            "ActionName": "DeleteDetector",
            "FullActionName": "guardduty::DeleteDetector"
          },
          {
            "ActionName": "DeleteFilter",
            "FullActionName": "guardduty::DeleteFilter"
          },
          {
            "ActionName": "DeleteIPSet",
            "FullActionName": "guardduty::DeleteIPSet"
          },
          {
            "ActionName": "DeleteInvitations",
            "FullActionName": "guardduty::DeleteInvitations"
          },
          {
            "ActionName": "DeleteMembers",
            "FullActionName": "guardduty::DeleteMembers"
          },
          {
            "ActionName": "DeleteThreatIntelSet",
            "FullActionName": "guardduty::DeleteThreatIntelSet"
          },
          {
            "ActionName": "DisassociateFromMasterAccount",
            "FullActionName": "guardduty::DisassociateFromMasterAccount"
          },
          {
            "ActionName": "DisassociateMembers",
            "FullActionName": "guardduty::DisassociateMembers"
          },
          {
            "ActionName": "InviteMembers",
            "FullActionName": "guardduty::InviteMembers"
          },
          {
            "ActionName": "StartMonitoringMembers",
            "FullActionName": "guardduty::StartMonitoringMembers"
          },
          {
            "ActionName": "StopMonitoringMembers",
            "FullActionName": "guardduty::StopMonitoringMembers"
          },
          {
            "ActionName": "TagResource",
            "FullActionName": "guardduty::TagResource"
          },
          {
            "ActionName": "UnarchiveFindings",
            "FullActionName": "guardduty::UnarchiveFindings"
          },
          {
            "ActionName": "UntagResource",
            "FullActionName": "guardduty::UntagResource"
          },
          {
            "ActionName": "UpdateDetector",
            "FullActionName": "guardduty::UpdateDetector"
          },
          {
            "ActionName": "UpdateFilter",
            "FullActionName": "guardduty::UpdateFilter"
          },
          {
            "ActionName": "UpdateFindingsFeedback",
            "FullActionName": "guardduty::UpdateFindingsFeedback"
          },
          {
            "ActionName": "UpdateIPSet",
            "FullActionName": "guardduty::UpdateIPSet"
          },
          {
            "ActionName": "UpdateThreatIntelSet",
            "FullActionName": "guardduty::UpdateThreatIntelSet"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "GetDetector",
            "FullActionName": "guardduty::GetDetector"
          },
          {
            "ActionName": "GetFilter",
            "FullActionName": "guardduty::GetFilter"
          },
          {
            "ActionName": "GetFindings",
            "FullActionName": "guardduty::GetFindings"
          },
          {
            "ActionName": "GetFindingsStatistics",
            "FullActionName": "guardduty::GetFindingsStatistics"
          },
          {
            "ActionName": "GetIPSet",
            "FullActionName": "guardduty::GetIPSet"
          },
          {
            "ActionName": "GetInvitationsCount",
            "FullActionName": "guardduty::GetInvitationsCount"
          },
          {
            "ActionName": "GetMasterAccount",
            "FullActionName": "guardduty::GetMasterAccount"
          },
          {
            "ActionName": "GetMembers",
            "FullActionName": "guardduty::GetMembers"
          },
          {
            "ActionName": "GetThreatIntelSet",
            "FullActionName": "guardduty::GetThreatIntelSet"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListDetectors",
            "FullActionName": "guardduty::ListDetectors"
          },
          {
            "ActionName": "ListFilters",
            "FullActionName": "guardduty::ListFilters"
          },
          {
            "ActionName": "ListFindings",
            "FullActionName": "guardduty::ListFindings"
          },
          {
            "ActionName": "ListIPSets",
            "FullActionName": "guardduty::ListIPSets"
          },
          {
            "ActionName": "ListInvitations",
            "FullActionName": "guardduty::ListInvitations"
          },
          {
            "ActionName": "ListMembers",
            "FullActionName": "guardduty::ListMembers"
          },
          {
            "ActionName": "ListTagsForResource",
            "FullActionName": "guardduty::ListTagsForResource"
          },
          {
            "ActionName": "ListThreatIntelSets",
            "FullActionName": "guardduty::ListThreatIntelSets"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Health",
    "AccessLevels": [
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeAffectedEntities",
            "FullActionName": "health::DescribeAffectedEntities"
          },
          {
            "ActionName": "DescribeEntityAggregates",
            "FullActionName": "health::DescribeEntityAggregates"
          },
          {
            "ActionName": "DescribeEventAggregates",
            "FullActionName": "health::DescribeEventAggregates"
          },
          {
            "ActionName": "DescribeEventDetails",
            "FullActionName": "health::DescribeEventDetails"
          },
          {
            "ActionName": "DescribeEventTypes",
            "FullActionName": "health::DescribeEventTypes"
          },
          {
            "ActionName": "DescribeEvents",
            "FullActionName": "health::DescribeEvents"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "IAM",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "AddClientIDToOpenIDConnectProvider",
            "FullActionName": "iam::AddClientIDToOpenIDConnectProvider"
          },
          {
            "ActionName": "AddRoleToInstanceProfile",
            "FullActionName": "iam::AddRoleToInstanceProfile"
          },
          {
            "ActionName": "AddUserToGroup",
            "FullActionName": "iam::AddUserToGroup"
          },
          {
            "ActionName": "ChangePassword",
            "FullActionName": "iam::ChangePassword"
          },
          {
            "ActionName": "CreateAccessKey",
            "FullActionName": "iam::CreateAccessKey"
          },
          {
            "ActionName": "CreateAccountAlias",
            "FullActionName": "iam::CreateAccountAlias"
          },
          {
            "ActionName": "CreateGroup",
            "FullActionName": "iam::CreateGroup"
          },
          {
            "ActionName": "CreateInstanceProfile",
            "FullActionName": "iam::CreateInstanceProfile"
          },
          {
            "ActionName": "CreateLoginProfile",
            "FullActionName": "iam::CreateLoginProfile"
          },
          {
            "ActionName": "CreateOpenIDConnectProvider",
            "FullActionName": "iam::CreateOpenIDConnectProvider"
          },
          {
            "ActionName": "CreateRole",
            "FullActionName": "iam::CreateRole"
          },
          {
            "ActionName": "CreateSAMLProvider",
            "FullActionName": "iam::CreateSAMLProvider"
          },
          {
            "ActionName": "CreateServiceLinkedRole",
            "FullActionName": "iam::CreateServiceLinkedRole"
          },
          {
            "ActionName": "CreateServiceSpecificCredential",
            "FullActionName": "iam::CreateServiceSpecificCredential"
          },
          {
            "ActionName": "CreateUser",
            "FullActionName": "iam::CreateUser"
          },
          {
            "ActionName": "CreateVirtualMFADevice",
            "FullActionName": "iam::CreateVirtualMFADevice"
          },
          {
            "ActionName": "DeactivateMFADevice",
            "FullActionName": "iam::DeactivateMFADevice"
          },
          {
            "ActionName": "DeleteAccessKey",
            "FullActionName": "iam::DeleteAccessKey"
          },
          {
            "ActionName": "DeleteAccountAlias",
            "FullActionName": "iam::DeleteAccountAlias"
          },
          {
            "ActionName": "DeleteGroup",
            "FullActionName": "iam::DeleteGroup"
          },
          {
            "ActionName": "DeleteInstanceProfile",
            "FullActionName": "iam::DeleteInstanceProfile"
          },
          {
            "ActionName": "DeleteLoginProfile",
            "FullActionName": "iam::DeleteLoginProfile"
          },
          {
            "ActionName": "DeleteOpenIDConnectProvider",
            "FullActionName": "iam::DeleteOpenIDConnectProvider"
          },
          {
            "ActionName": "DeleteRole",
            "FullActionName": "iam::DeleteRole"
          },
          {
            "ActionName": "DeleteSAMLProvider",
            "FullActionName": "iam::DeleteSAMLProvider"
          },
          {
            "ActionName": "DeleteSSHPublicKey",
            "FullActionName": "iam::DeleteSSHPublicKey"
          },
          {
            "ActionName": "DeleteServerCertificate",
            "FullActionName": "iam::DeleteServerCertificate"
          },
          {
            "ActionName": "DeleteServiceLinkedRole",
            "FullActionName": "iam::DeleteServiceLinkedRole"
          },
          {
            "ActionName": "DeleteServiceSpecificCredential",
            "FullActionName": "iam::DeleteServiceSpecificCredential"
          },
          {
            "ActionName": "DeleteSigningCertificate",
            "FullActionName": "iam::DeleteSigningCertificate"
          },
          {
            "ActionName": "DeleteUser",
            "FullActionName": "iam::DeleteUser"
          },
          {
            "ActionName": "DeleteVirtualMFADevice",
            "FullActionName": "iam::DeleteVirtualMFADevice"
          },
          {
            "ActionName": "EnableMFADevice",
            "FullActionName": "iam::EnableMFADevice"
          },
          {
            "ActionName": "PassRole",
            "FullActionName": "iam::PassRole"
          },
          {
            "ActionName": "RemoveClientIDFromOpenIDConnectProvider",
            "FullActionName": "iam::RemoveClientIDFromOpenIDConnectProvider"
          },
          {
            "ActionName": "RemoveRoleFromInstanceProfile",
            "FullActionName": "iam::RemoveRoleFromInstanceProfile"
          },
          {
            "ActionName": "RemoveUserFromGroup",
            "FullActionName": "iam::RemoveUserFromGroup"
          },
          {
            "ActionName": "ResetServiceSpecificCredential",
            "FullActionName": "iam::ResetServiceSpecificCredential"
          },
          {
            "ActionName": "ResyncMFADevice",
            "FullActionName": "iam::ResyncMFADevice"
          },
          {
            "ActionName": "SetSecurityTokenServicePreferences",
            "FullActionName": "iam::SetSecurityTokenServicePreferences"
          },
          {
            "ActionName": "UpdateAccessKey",
            "FullActionName": "iam::UpdateAccessKey"
          },
          {
            "ActionName": "UpdateAccountPasswordPolicy",
            "FullActionName": "iam::UpdateAccountPasswordPolicy"
          },
          {
            "ActionName": "UpdateGroup",
            "FullActionName": "iam::UpdateGroup"
          },
          {
            "ActionName": "UpdateLoginProfile",
            "FullActionName": "iam::UpdateLoginProfile"
          },
          {
            "ActionName": "UpdateOpenIDConnectProviderThumbprint",
            "FullActionName": "iam::UpdateOpenIDConnectProviderThumbprint"
          },
          {
            "ActionName": "UpdateRole",
            "FullActionName": "iam::UpdateRole"
          },
          {
            "ActionName": "UpdateRoleDescription",
            "FullActionName": "iam::UpdateRoleDescription"
          },
          {
            "ActionName": "UpdateSAMLProvider",
            "FullActionName": "iam::UpdateSAMLProvider"
          },
          {
            "ActionName": "UpdateSSHPublicKey",
            "FullActionName": "iam::UpdateSSHPublicKey"
          },
          {
            "ActionName": "UpdateServerCertificate",
            "FullActionName": "iam::UpdateServerCertificate"
          },
          {
            "ActionName": "UpdateServiceSpecificCredential",
            "FullActionName": "iam::UpdateServiceSpecificCredential"
          },
          {
            "ActionName": "UpdateSigningCertificate",
            "FullActionName": "iam::UpdateSigningCertificate"
          },
          {
            "ActionName": "UpdateUser",
            "FullActionName": "iam::UpdateUser"
          },
          {
            "ActionName": "UploadSSHPublicKey",
            "FullActionName": "iam::UploadSSHPublicKey"
          },
          {
            "ActionName": "UploadServerCertificate",
            "FullActionName": "iam::UploadServerCertificate"
          },
          {
            "ActionName": "UploadSigningCertificate",
            "FullActionName": "iam::UploadSigningCertificate"
          }
        ]
      },
      {
        "AccessLevel": "Permissions",
        "Actions": [
          {
            "ActionName": "AttachGroupPolicy",
            "FullActionName": "iam::AttachGroupPolicy"
          },
          {
            "ActionName": "AttachRolePolicy",
            "FullActionName": "iam::AttachRolePolicy"
          },
          {
            "ActionName": "AttachUserPolicy",
            "FullActionName": "iam::AttachUserPolicy"
          },
          {
            "ActionName": "CreatePolicy",
            "FullActionName": "iam::CreatePolicy"
          },
          {
            "ActionName": "CreatePolicyVersion",
            "FullActionName": "iam::CreatePolicyVersion"
          },
          {
            "ActionName": "DeleteAccountPasswordPolicy",
            "FullActionName": "iam::DeleteAccountPasswordPolicy"
          },
          {
            "ActionName": "DeleteGroupPolicy",
            "FullActionName": "iam::DeleteGroupPolicy"
          },
          {
            "ActionName": "DeletePolicy",
            "FullActionName": "iam::DeletePolicy"
          },
          {
            "ActionName": "DeletePolicyVersion",
            "FullActionName": "iam::DeletePolicyVersion"
          },
          {
            "ActionName": "DeleteRolePermissionsBoundary",
            "FullActionName": "iam::DeleteRolePermissionsBoundary"
          },
          {
            "ActionName": "DeleteRolePolicy",
            "FullActionName": "iam::DeleteRolePolicy"
          },
          {
            "ActionName": "DeleteUserPermissionsBoundary",
            "FullActionName": "iam::DeleteUserPermissionsBoundary"
          },
          {
            "ActionName": "DeleteUserPolicy",
            "FullActionName": "iam::DeleteUserPolicy"
          },
          {
            "ActionName": "DetachGroupPolicy",
            "FullActionName": "iam::DetachGroupPolicy"
          },
          {
            "ActionName": "DetachRolePolicy",
            "FullActionName": "iam::DetachRolePolicy"
          },
          {
            "ActionName": "DetachUserPolicy",
            "FullActionName": "iam::DetachUserPolicy"
          },
          {
            "ActionName": "PutGroupPolicy",
            "FullActionName": "iam::PutGroupPolicy"
          },
          {
            "ActionName": "PutRolePermissionsBoundary",
            "FullActionName": "iam::PutRolePermissionsBoundary"
          },
          {
            "ActionName": "PutRolePolicy",
            "FullActionName": "iam::PutRolePolicy"
          },
          {
            "ActionName": "PutUserPermissionsBoundary",
            "FullActionName": "iam::PutUserPermissionsBoundary"
          },
          {
            "ActionName": "PutUserPolicy",
            "FullActionName": "iam::PutUserPolicy"
          },
          {
            "ActionName": "SetDefaultPolicyVersion",
            "FullActionName": "iam::SetDefaultPolicyVersion"
          },
          {
            "ActionName": "UpdateAssumeRolePolicy",
            "FullActionName": "iam::UpdateAssumeRolePolicy"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "GenerateCredentialReport",
            "FullActionName": "iam::GenerateCredentialReport"
          },
          {
            "ActionName": "GenerateOrganizationsAccessReport",
            "FullActionName": "iam::GenerateOrganizationsAccessReport"
          },
          {
            "ActionName": "GenerateServiceLastAccessedDetails",
            "FullActionName": "iam::GenerateServiceLastAccessedDetails"
          },
          {
            "ActionName": "GetAccessKeyLastUsed",
            "FullActionName": "iam::GetAccessKeyLastUsed"
          },
          {
            "ActionName": "GetAccountAuthorizationDetails",
            "FullActionName": "iam::GetAccountAuthorizationDetails"
          },
          {
            "ActionName": "GetAccountPasswordPolicy",
            "FullActionName": "iam::GetAccountPasswordPolicy"
          },
          {
            "ActionName": "GetContextKeysForCustomPolicy",
            "FullActionName": "iam::GetContextKeysForCustomPolicy"
          },
          {
            "ActionName": "GetContextKeysForPrincipalPolicy",
            "FullActionName": "iam::GetContextKeysForPrincipalPolicy"
          },
          {
            "ActionName": "GetCredentialReport",
            "FullActionName": "iam::GetCredentialReport"
          },
          {
            "ActionName": "GetGroup",
            "FullActionName": "iam::GetGroup"
          },
          {
            "ActionName": "GetGroupPolicy",
            "FullActionName": "iam::GetGroupPolicy"
          },
          {
            "ActionName": "GetInstanceProfile",
            "FullActionName": "iam::GetInstanceProfile"
          },
          {
            "ActionName": "GetOpenIDConnectProvider",
            "FullActionName": "iam::GetOpenIDConnectProvider"
          },
          {
            "ActionName": "GetOrganizationsAccessReport",
            "FullActionName": "iam::GetOrganizationsAccessReport"
          },
          {
            "ActionName": "GetPolicy",
            "FullActionName": "iam::GetPolicy"
          },
          {
            "ActionName": "GetPolicyVersion",
            "FullActionName": "iam::GetPolicyVersion"
          },
          {
            "ActionName": "GetRole",
            "FullActionName": "iam::GetRole"
          },
          {
            "ActionName": "GetRolePolicy",
            "FullActionName": "iam::GetRolePolicy"
          },
          {
            "ActionName": "GetSAMLProvider",
            "FullActionName": "iam::GetSAMLProvider"
          },
          {
            "ActionName": "GetSSHPublicKey",
            "FullActionName": "iam::GetSSHPublicKey"
          },
          {
            "ActionName": "GetServerCertificate",
            "FullActionName": "iam::GetServerCertificate"
          },
          {
            "ActionName": "GetServiceLastAccessedDetails",
            "FullActionName": "iam::GetServiceLastAccessedDetails"
          },
          {
            "ActionName": "GetServiceLastAccessedDetailsWithEntities",
            "FullActionName": "iam::GetServiceLastAccessedDetailsWithEntities"
          },
          {
            "ActionName": "GetServiceLinkedRoleDeletionStatus",
            "FullActionName": "iam::GetServiceLinkedRoleDeletionStatus"
          },
          {
            "ActionName": "GetUser",
            "FullActionName": "iam::GetUser"
          },
          {
            "ActionName": "GetUserPolicy",
            "FullActionName": "iam::GetUserPolicy"
          },
          {
            "ActionName": "SimulateCustomPolicy",
            "FullActionName": "iam::SimulateCustomPolicy"
          },
          {
            "ActionName": "SimulatePrincipalPolicy",
            "FullActionName": "iam::SimulatePrincipalPolicy"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "GetAccountSummary",
            "FullActionName": "iam::GetAccountSummary"
          },
          {
            "ActionName": "GetLoginProfile",
            "FullActionName": "iam::GetLoginProfile"
          },
          {
            "ActionName": "ListAccessKeys",
            "FullActionName": "iam::ListAccessKeys"
          },
          {
            "ActionName": "ListAccountAliases",
            "FullActionName": "iam::ListAccountAliases"
          },
          {
            "ActionName": "ListAttachedGroupPolicies",
            "FullActionName": "iam::ListAttachedGroupPolicies"
          },
          {
            "ActionName": "ListAttachedRolePolicies",
            "FullActionName": "iam::ListAttachedRolePolicies"
          },
          {
            "ActionName": "ListAttachedUserPolicies",
            "FullActionName": "iam::ListAttachedUserPolicies"
          },
          {
            "ActionName": "ListEntitiesForPolicy",
            "FullActionName": "iam::ListEntitiesForPolicy"
          },
          {
            "ActionName": "ListGroupPolicies",
            "FullActionName": "iam::ListGroupPolicies"
          },
          {
            "ActionName": "ListGroups",
            "FullActionName": "iam::ListGroups"
          },
          {
            "ActionName": "ListGroupsForUser",
            "FullActionName": "iam::ListGroupsForUser"
          },
          {
            "ActionName": "ListInstanceProfiles",
            "FullActionName": "iam::ListInstanceProfiles"
          },
          {
            "ActionName": "ListInstanceProfilesForRole",
            "FullActionName": "iam::ListInstanceProfilesForRole"
          },
          {
            "ActionName": "ListMFADevices",
            "FullActionName": "iam::ListMFADevices"
          },
          {
            "ActionName": "ListOpenIDConnectProviders",
            "FullActionName": "iam::ListOpenIDConnectProviders"
          },
          {
            "ActionName": "ListPolicies",
            "FullActionName": "iam::ListPolicies"
          },
          {
            "ActionName": "ListPoliciesGrantingServiceAccess",
            "FullActionName": "iam::ListPoliciesGrantingServiceAccess"
          },
          {
            "ActionName": "ListPolicyVersions",
            "FullActionName": "iam::ListPolicyVersions"
          },
          {
            "ActionName": "ListRolePolicies",
            "FullActionName": "iam::ListRolePolicies"
          },
          {
            "ActionName": "ListRoleTags",
            "FullActionName": "iam::ListRoleTags"
          },
          {
            "ActionName": "ListRoles",
            "FullActionName": "iam::ListRoles"
          },
          {
            "ActionName": "ListSAMLProviders",
            "FullActionName": "iam::ListSAMLProviders"
          },
          {
            "ActionName": "ListSSHPublicKeys",
            "FullActionName": "iam::ListSSHPublicKeys"
          },
          {
            "ActionName": "ListServerCertificates",
            "FullActionName": "iam::ListServerCertificates"
          },
          {
            "ActionName": "ListServiceSpecificCredentials",
            "FullActionName": "iam::ListServiceSpecificCredentials"
          },
          {
            "ActionName": "ListSigningCertificates",
            "FullActionName": "iam::ListSigningCertificates"
          },
          {
            "ActionName": "ListUserPolicies",
            "FullActionName": "iam::ListUserPolicies"
          },
          {
            "ActionName": "ListUserTags",
            "FullActionName": "iam::ListUserTags"
          },
          {
            "ActionName": "ListUsers",
            "FullActionName": "iam::ListUsers"
          },
          {
            "ActionName": "ListVirtualMFADevices",
            "FullActionName": "iam::ListVirtualMFADevices"
          }
        ]
      },
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "TagRole",
            "FullActionName": "iam::TagRole"
          },
          {
            "ActionName": "TagUser",
            "FullActionName": "iam::TagUser"
          },
          {
            "ActionName": "UntagRole",
            "FullActionName": "iam::UntagRole"
          },
          {
            "ActionName": "UntagUser",
            "FullActionName": "iam::UntagUser"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "IQ",
    "AccessLevels": []
  },
  {
    "ServiceName": "IQ Permission",
    "AccessLevels": []
  },
  {
    "ServiceName": "Import/Export",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "CancelJob",
            "FullActionName": "importexport::CancelJob"
          },
          {
            "ActionName": "CreateJob",
            "FullActionName": "importexport::CreateJob"
          },
          {
            "ActionName": "UpdateJob",
            "FullActionName": "importexport::UpdateJob"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "GetShippingLabel",
            "FullActionName": "importexport::GetShippingLabel"
          },
          {
            "ActionName": "GetStatus",
            "FullActionName": "importexport::GetStatus"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListJobs",
            "FullActionName": "importexport::ListJobs"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Inspector",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "AddAttributesToFindings",
            "FullActionName": "inspector::AddAttributesToFindings"
          },
          {
            "ActionName": "CreateAssessmentTarget",
            "FullActionName": "inspector::CreateAssessmentTarget"
          },
          {
            "ActionName": "CreateAssessmentTemplate",
            "FullActionName": "inspector::CreateAssessmentTemplate"
          },
          {
            "ActionName": "CreateResourceGroup",
            "FullActionName": "inspector::CreateResourceGroup"
          },
          {
            "ActionName": "DeleteAssessmentRun",
            "FullActionName": "inspector::DeleteAssessmentRun"
          },
          {
            "ActionName": "DeleteAssessmentTarget",
            "FullActionName": "inspector::DeleteAssessmentTarget"
          },
          {
            "ActionName": "DeleteAssessmentTemplate",
            "FullActionName": "inspector::DeleteAssessmentTemplate"
          },
          {
            "ActionName": "RegisterCrossAccountAccessRole",
            "FullActionName": "inspector::RegisterCrossAccountAccessRole"
          },
          {
            "ActionName": "RemoveAttributesFromFindings",
            "FullActionName": "inspector::RemoveAttributesFromFindings"
          },
          {
            "ActionName": "StartAssessmentRun",
            "FullActionName": "inspector::StartAssessmentRun"
          },
          {
            "ActionName": "StopAssessmentRun",
            "FullActionName": "inspector::StopAssessmentRun"
          },
          {
            "ActionName": "SubscribeToEvent",
            "FullActionName": "inspector::SubscribeToEvent"
          },
          {
            "ActionName": "UnsubscribeFromEvent",
            "FullActionName": "inspector::UnsubscribeFromEvent"
          },
          {
            "ActionName": "UpdateAssessmentTarget",
            "FullActionName": "inspector::UpdateAssessmentTarget"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeAssessmentRuns",
            "FullActionName": "inspector::DescribeAssessmentRuns"
          },
          {
            "ActionName": "DescribeAssessmentTargets",
            "FullActionName": "inspector::DescribeAssessmentTargets"
          },
          {
            "ActionName": "DescribeAssessmentTemplates",
            "FullActionName": "inspector::DescribeAssessmentTemplates"
          },
          {
            "ActionName": "DescribeCrossAccountAccessRole",
            "FullActionName": "inspector::DescribeCrossAccountAccessRole"
          },
          {
            "ActionName": "DescribeFindings",
            "FullActionName": "inspector::DescribeFindings"
          },
          {
            "ActionName": "DescribeResourceGroups",
            "FullActionName": "inspector::DescribeResourceGroups"
          },
          {
            "ActionName": "DescribeRulesPackages",
            "FullActionName": "inspector::DescribeRulesPackages"
          },
          {
            "ActionName": "GetTelemetryMetadata",
            "FullActionName": "inspector::GetTelemetryMetadata"
          },
          {
            "ActionName": "PreviewAgents",
            "FullActionName": "inspector::PreviewAgents"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListAssessmentRunAgents",
            "FullActionName": "inspector::ListAssessmentRunAgents"
          },
          {
            "ActionName": "ListAssessmentRuns",
            "FullActionName": "inspector::ListAssessmentRuns"
          },
          {
            "ActionName": "ListAssessmentTargets",
            "FullActionName": "inspector::ListAssessmentTargets"
          },
          {
            "ActionName": "ListAssessmentTemplates",
            "FullActionName": "inspector::ListAssessmentTemplates"
          },
          {
            "ActionName": "ListEventSubscriptions",
            "FullActionName": "inspector::ListEventSubscriptions"
          },
          {
            "ActionName": "ListFindings",
            "FullActionName": "inspector::ListFindings"
          },
          {
            "ActionName": "ListRulesPackages",
            "FullActionName": "inspector::ListRulesPackages"
          },
          {
            "ActionName": "ListTagsForResource",
            "FullActionName": "inspector::ListTagsForResource"
          }
        ]
      },
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "SetTagsForResource",
            "FullActionName": "inspector::SetTagsForResource"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "IoT",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "AcceptCertificateTransfer",
            "FullActionName": "iot::AcceptCertificateTransfer"
          },
          {
            "ActionName": "AddThingToBillingGroup",
            "FullActionName": "iot::AddThingToBillingGroup"
          },
          {
            "ActionName": "AddThingToThingGroup",
            "FullActionName": "iot::AddThingToThingGroup"
          },
          {
            "ActionName": "AssociateTargetsWithJob",
            "FullActionName": "iot::AssociateTargetsWithJob"
          },
          {
            "ActionName": "AttachSecurityProfile",
            "FullActionName": "iot::AttachSecurityProfile"
          },
          {
            "ActionName": "AttachThingPrincipal",
            "FullActionName": "iot::AttachThingPrincipal"
          },
          {
            "ActionName": "CancelAuditTask",
            "FullActionName": "iot::CancelAuditTask"
          },
          {
            "ActionName": "CancelCertificateTransfer",
            "FullActionName": "iot::CancelCertificateTransfer"
          },
          {
            "ActionName": "CancelJob",
            "FullActionName": "iot::CancelJob"
          },
          {
            "ActionName": "CancelJobExecution",
            "FullActionName": "iot::CancelJobExecution"
          },
          {
            "ActionName": "ClearDefaultAuthorizer",
            "FullActionName": "iot::ClearDefaultAuthorizer"
          },
          {
            "ActionName": "Connect",
            "FullActionName": "iot::Connect"
          },
          {
            "ActionName": "CreateAuthorizer",
            "FullActionName": "iot::CreateAuthorizer"
          },
          {
            "ActionName": "CreateCertificateFromCsr",
            "FullActionName": "iot::CreateCertificateFromCsr"
          },
          {
            "ActionName": "CreateJob",
            "FullActionName": "iot::CreateJob"
          },
          {
            "ActionName": "CreateKeysAndCertificate",
            "FullActionName": "iot::CreateKeysAndCertificate"
          },
          {
            "ActionName": "CreateOTAUpdate",
            "FullActionName": "iot::CreateOTAUpdate"
          },
          {
            "ActionName": "CreatePolicy",
            "FullActionName": "iot::CreatePolicy"
          },
          {
            "ActionName": "CreatePolicyVersion",
            "FullActionName": "iot::CreatePolicyVersion"
          },
          {
            "ActionName": "CreateRoleAlias",
            "FullActionName": "iot::CreateRoleAlias"
          },
          {
            "ActionName": "CreateStream",
            "FullActionName": "iot::CreateStream"
          },
          {
            "ActionName": "CreateThing",
            "FullActionName": "iot::CreateThing"
          },
          {
            "ActionName": "CreateTopicRule",
            "FullActionName": "iot::CreateTopicRule"
          },
          {
            "ActionName": "DeleteAccountAuditConfiguration",
            "FullActionName": "iot::DeleteAccountAuditConfiguration"
          },
          {
            "ActionName": "DeleteAuthorizer",
            "FullActionName": "iot::DeleteAuthorizer"
          },
          {
            "ActionName": "DeleteCACertificate",
            "FullActionName": "iot::DeleteCACertificate"
          },
          {
            "ActionName": "DeleteCertificate",
            "FullActionName": "iot::DeleteCertificate"
          },
          {
            "ActionName": "DeleteDynamicThingGroup",
            "FullActionName": "iot::DeleteDynamicThingGroup"
          },
          {
            "ActionName": "DeleteJob",
            "FullActionName": "iot::DeleteJob"
          },
          {
            "ActionName": "DeleteJobExecution",
            "FullActionName": "iot::DeleteJobExecution"
          },
          {
            "ActionName": "DeleteOTAUpdate",
            "FullActionName": "iot::DeleteOTAUpdate"
          },
          {
            "ActionName": "DeletePolicy",
            "FullActionName": "iot::DeletePolicy"
          },
          {
            "ActionName": "DeletePolicyVersion",
            "FullActionName": "iot::DeletePolicyVersion"
          },
          {
            "ActionName": "DeleteRegistrationCode",
            "FullActionName": "iot::DeleteRegistrationCode"
          },
          {
            "ActionName": "DeleteRoleAlias",
            "FullActionName": "iot::DeleteRoleAlias"
          },
          {
            "ActionName": "DeleteScheduledAudit",
            "FullActionName": "iot::DeleteScheduledAudit"
          },
          {
            "ActionName": "DeleteSecurityProfile",
            "FullActionName": "iot::DeleteSecurityProfile"
          },
          {
            "ActionName": "DeleteStream",
            "FullActionName": "iot::DeleteStream"
          },
          {
            "ActionName": "DeleteThing",
            "FullActionName": "iot::DeleteThing"
          },
          {
            "ActionName": "DeleteThingShadow",
            "FullActionName": "iot::DeleteThingShadow"
          },
          {
            "ActionName": "DeleteTopicRule",
            "FullActionName": "iot::DeleteTopicRule"
          },
          {
            "ActionName": "DeleteV2LoggingLevel",
            "FullActionName": "iot::DeleteV2LoggingLevel"
          },
          {
            "ActionName": "DeprecateThingType",
            "FullActionName": "iot::DeprecateThingType"
          },
          {
            "ActionName": "DetachSecurityProfile",
            "FullActionName": "iot::DetachSecurityProfile"
          },
          {
            "ActionName": "DetachThingPrincipal",
            "FullActionName": "iot::DetachThingPrincipal"
          },
          {
            "ActionName": "DisableTopicRule",
            "FullActionName": "iot::DisableTopicRule"
          },
          {
            "ActionName": "EnableTopicRule",
            "FullActionName": "iot::EnableTopicRule"
          },
          {
            "ActionName": "Publish",
            "FullActionName": "iot::Publish"
          },
          {
            "ActionName": "Receive",
            "FullActionName": "iot::Receive"
          },
          {
            "ActionName": "RegisterCACertificate",
            "FullActionName": "iot::RegisterCACertificate"
          },
          {
            "ActionName": "RegisterCertificate",
            "FullActionName": "iot::RegisterCertificate"
          },
          {
            "ActionName": "RegisterThing",
            "FullActionName": "iot::RegisterThing"
          },
          {
            "ActionName": "RejectCertificateTransfer",
            "FullActionName": "iot::RejectCertificateTransfer"
          },
          {
            "ActionName": "RemoveThingFromBillingGroup",
            "FullActionName": "iot::RemoveThingFromBillingGroup"
          },
          {
            "ActionName": "RemoveThingFromThingGroup",
            "FullActionName": "iot::RemoveThingFromThingGroup"
          },
          {
            "ActionName": "ReplaceTopicRule",
            "FullActionName": "iot::ReplaceTopicRule"
          },
          {
            "ActionName": "SetLoggingOptions",
            "FullActionName": "iot::SetLoggingOptions"
          },
          {
            "ActionName": "SetV2LoggingLevel",
            "FullActionName": "iot::SetV2LoggingLevel"
          },
          {
            "ActionName": "SetV2LoggingOptions",
            "FullActionName": "iot::SetV2LoggingOptions"
          },
          {
            "ActionName": "StartNextPendingJobExecution",
            "FullActionName": "iot::StartNextPendingJobExecution"
          },
          {
            "ActionName": "StartOnDemandAuditTask",
            "FullActionName": "iot::StartOnDemandAuditTask"
          },
          {
            "ActionName": "StartThingRegistrationTask",
            "FullActionName": "iot::StartThingRegistrationTask"
          },
          {
            "ActionName": "StopThingRegistrationTask",
            "FullActionName": "iot::StopThingRegistrationTask"
          },
          {
            "ActionName": "Subscribe",
            "FullActionName": "iot::Subscribe"
          },
          {
            "ActionName": "TransferCertificate",
            "FullActionName": "iot::TransferCertificate"
          },
          {
            "ActionName": "UpdateAccountAuditConfiguration",
            "FullActionName": "iot::UpdateAccountAuditConfiguration"
          },
          {
            "ActionName": "UpdateAuthorizer",
            "FullActionName": "iot::UpdateAuthorizer"
          },
          {
            "ActionName": "UpdateBillingGroup",
            "FullActionName": "iot::UpdateBillingGroup"
          },
          {
            "ActionName": "UpdateCACertificate",
            "FullActionName": "iot::UpdateCACertificate"
          },
          {
            "ActionName": "UpdateCertificate",
            "FullActionName": "iot::UpdateCertificate"
          },
          {
            "ActionName": "UpdateDynamicThingGroup",
            "FullActionName": "iot::UpdateDynamicThingGroup"
          },
          {
            "ActionName": "UpdateEventConfigurations",
            "FullActionName": "iot::UpdateEventConfigurations"
          },
          {
            "ActionName": "UpdateIndexingConfiguration",
            "FullActionName": "iot::UpdateIndexingConfiguration"
          },
          {
            "ActionName": "UpdateJob",
            "FullActionName": "iot::UpdateJob"
          },
          {
            "ActionName": "UpdateJobExecution",
            "FullActionName": "iot::UpdateJobExecution"
          },
          {
            "ActionName": "UpdateRoleAlias",
            "FullActionName": "iot::UpdateRoleAlias"
          },
          {
            "ActionName": "UpdateScheduledAudit",
            "FullActionName": "iot::UpdateScheduledAudit"
          },
          {
            "ActionName": "UpdateSecurityProfile",
            "FullActionName": "iot::UpdateSecurityProfile"
          },
          {
            "ActionName": "UpdateStream",
            "FullActionName": "iot::UpdateStream"
          },
          {
            "ActionName": "UpdateThing",
            "FullActionName": "iot::UpdateThing"
          },
          {
            "ActionName": "UpdateThingGroup",
            "FullActionName": "iot::UpdateThingGroup"
          },
          {
            "ActionName": "UpdateThingGroupsForThing",
            "FullActionName": "iot::UpdateThingGroupsForThing"
          },
          {
            "ActionName": "UpdateThingShadow",
            "FullActionName": "iot::UpdateThingShadow"
          }
        ]
      },
      {
        "AccessLevel": "Permissions",
        "Actions": [
          {
            "ActionName": "AttachPolicy",
            "FullActionName": "iot::AttachPolicy"
          },
          {
            "ActionName": "AttachPrincipalPolicy",
            "FullActionName": "iot::AttachPrincipalPolicy"
          },
          {
            "ActionName": "DetachPolicy",
            "FullActionName": "iot::DetachPolicy"
          },
          {
            "ActionName": "DetachPrincipalPolicy",
            "FullActionName": "iot::DetachPrincipalPolicy"
          },
          {
            "ActionName": "SetDefaultAuthorizer",
            "FullActionName": "iot::SetDefaultAuthorizer"
          },
          {
            "ActionName": "SetDefaultPolicyVersion",
            "FullActionName": "iot::SetDefaultPolicyVersion"
          }
        ]
      },
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "CreateBillingGroup",
            "FullActionName": "iot::CreateBillingGroup"
          },
          {
            "ActionName": "CreateDynamicThingGroup",
            "FullActionName": "iot::CreateDynamicThingGroup"
          },
          {
            "ActionName": "CreateScheduledAudit",
            "FullActionName": "iot::CreateScheduledAudit"
          },
          {
            "ActionName": "CreateSecurityProfile",
            "FullActionName": "iot::CreateSecurityProfile"
          },
          {
            "ActionName": "CreateThingGroup",
            "FullActionName": "iot::CreateThingGroup"
          },
          {
            "ActionName": "CreateThingType",
            "FullActionName": "iot::CreateThingType"
          },
          {
            "ActionName": "DeleteBillingGroup",
            "FullActionName": "iot::DeleteBillingGroup"
          },
          {
            "ActionName": "DeleteThingGroup",
            "FullActionName": "iot::DeleteThingGroup"
          },
          {
            "ActionName": "DeleteThingType",
            "FullActionName": "iot::DeleteThingType"
          },
          {
            "ActionName": "TagResource",
            "FullActionName": "iot::TagResource"
          },
          {
            "ActionName": "UntagResource",
            "FullActionName": "iot::UntagResource"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeAccountAuditConfiguration",
            "FullActionName": "iot::DescribeAccountAuditConfiguration"
          },
          {
            "ActionName": "DescribeAuditTask",
            "FullActionName": "iot::DescribeAuditTask"
          },
          {
            "ActionName": "DescribeAuthorizer",
            "FullActionName": "iot::DescribeAuthorizer"
          },
          {
            "ActionName": "DescribeBillingGroup",
            "FullActionName": "iot::DescribeBillingGroup"
          },
          {
            "ActionName": "DescribeCACertificate",
            "FullActionName": "iot::DescribeCACertificate"
          },
          {
            "ActionName": "DescribeCertificate",
            "FullActionName": "iot::DescribeCertificate"
          },
          {
            "ActionName": "DescribeDefaultAuthorizer",
            "FullActionName": "iot::DescribeDefaultAuthorizer"
          },
          {
            "ActionName": "DescribeEndpoint",
            "FullActionName": "iot::DescribeEndpoint"
          },
          {
            "ActionName": "DescribeEventConfigurations",
            "FullActionName": "iot::DescribeEventConfigurations"
          },
          {
            "ActionName": "DescribeIndex",
            "FullActionName": "iot::DescribeIndex"
          },
          {
            "ActionName": "DescribeJob",
            "FullActionName": "iot::DescribeJob"
          },
          {
            "ActionName": "DescribeJobExecution",
            "FullActionName": "iot::DescribeJobExecution"
          },
          {
            "ActionName": "DescribeRoleAlias",
            "FullActionName": "iot::DescribeRoleAlias"
          },
          {
            "ActionName": "DescribeScheduledAudit",
            "FullActionName": "iot::DescribeScheduledAudit"
          },
          {
            "ActionName": "DescribeSecurityProfile",
            "FullActionName": "iot::DescribeSecurityProfile"
          },
          {
            "ActionName": "DescribeStream",
            "FullActionName": "iot::DescribeStream"
          },
          {
            "ActionName": "DescribeThing",
            "FullActionName": "iot::DescribeThing"
          },
          {
            "ActionName": "DescribeThingGroup",
            "FullActionName": "iot::DescribeThingGroup"
          },
          {
            "ActionName": "DescribeThingRegistrationTask",
            "FullActionName": "iot::DescribeThingRegistrationTask"
          },
          {
            "ActionName": "DescribeThingType",
            "FullActionName": "iot::DescribeThingType"
          },
          {
            "ActionName": "GetEffectivePolicies",
            "FullActionName": "iot::GetEffectivePolicies"
          },
          {
            "ActionName": "GetIndexingConfiguration",
            "FullActionName": "iot::GetIndexingConfiguration"
          },
          {
            "ActionName": "GetJobDocument",
            "FullActionName": "iot::GetJobDocument"
          },
          {
            "ActionName": "GetLoggingOptions",
            "FullActionName": "iot::GetLoggingOptions"
          },
          {
            "ActionName": "GetOTAUpdate",
            "FullActionName": "iot::GetOTAUpdate"
          },
          {
            "ActionName": "GetPendingJobExecutions",
            "FullActionName": "iot::GetPendingJobExecutions"
          },
          {
            "ActionName": "GetPolicy",
            "FullActionName": "iot::GetPolicy"
          },
          {
            "ActionName": "GetPolicyVersion",
            "FullActionName": "iot::GetPolicyVersion"
          },
          {
            "ActionName": "GetRegistrationCode",
            "FullActionName": "iot::GetRegistrationCode"
          },
          {
            "ActionName": "GetStatistics",
            "FullActionName": "iot::GetStatistics"
          },
          {
            "ActionName": "GetThingShadow",
            "FullActionName": "iot::GetThingShadow"
          },
          {
            "ActionName": "GetTopicRule",
            "FullActionName": "iot::GetTopicRule"
          },
          {
            "ActionName": "GetV2LoggingOptions",
            "FullActionName": "iot::GetV2LoggingOptions"
          },
          {
            "ActionName": "SearchIndex",
            "FullActionName": "iot::SearchIndex"
          },
          {
            "ActionName": "TestAuthorization",
            "FullActionName": "iot::TestAuthorization"
          },
          {
            "ActionName": "TestInvokeAuthorizer",
            "FullActionName": "iot::TestInvokeAuthorizer"
          },
          {
            "ActionName": "ValidateSecurityProfileBehaviors",
            "FullActionName": "iot::ValidateSecurityProfileBehaviors"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListActiveViolations",
            "FullActionName": "iot::ListActiveViolations"
          },
          {
            "ActionName": "ListAttachedPolicies",
            "FullActionName": "iot::ListAttachedPolicies"
          },
          {
            "ActionName": "ListAuditFindings",
            "FullActionName": "iot::ListAuditFindings"
          },
          {
            "ActionName": "ListAuditTasks",
            "FullActionName": "iot::ListAuditTasks"
          },
          {
            "ActionName": "ListAuthorizers",
            "FullActionName": "iot::ListAuthorizers"
          },
          {
            "ActionName": "ListBillingGroups",
            "FullActionName": "iot::ListBillingGroups"
          },
          {
            "ActionName": "ListCACertificates",
            "FullActionName": "iot::ListCACertificates"
          },
          {
            "ActionName": "ListCertificates",
            "FullActionName": "iot::ListCertificates"
          },
          {
            "ActionName": "ListCertificatesByCA",
            "FullActionName": "iot::ListCertificatesByCA"
          },
          {
            "ActionName": "ListIndices",
            "FullActionName": "iot::ListIndices"
          },
          {
            "ActionName": "ListJobExecutionsForJob",
            "FullActionName": "iot::ListJobExecutionsForJob"
          },
          {
            "ActionName": "ListJobExecutionsForThing",
            "FullActionName": "iot::ListJobExecutionsForThing"
          },
          {
            "ActionName": "ListJobs",
            "FullActionName": "iot::ListJobs"
          },
          {
            "ActionName": "ListOTAUpdates",
            "FullActionName": "iot::ListOTAUpdates"
          },
          {
            "ActionName": "ListOutgoingCertificates",
            "FullActionName": "iot::ListOutgoingCertificates"
          },
          {
            "ActionName": "ListPolicies",
            "FullActionName": "iot::ListPolicies"
          },
          {
            "ActionName": "ListPolicyPrincipals",
            "FullActionName": "iot::ListPolicyPrincipals"
          },
          {
            "ActionName": "ListPolicyVersions",
            "FullActionName": "iot::ListPolicyVersions"
          },
          {
            "ActionName": "ListPrincipalPolicies",
            "FullActionName": "iot::ListPrincipalPolicies"
          },
          {
            "ActionName": "ListPrincipalThings",
            "FullActionName": "iot::ListPrincipalThings"
          },
          {
            "ActionName": "ListRoleAliases",
            "FullActionName": "iot::ListRoleAliases"
          },
          {
            "ActionName": "ListScheduledAudits",
            "FullActionName": "iot::ListScheduledAudits"
          },
          {
            "ActionName": "ListSecurityProfiles",
            "FullActionName": "iot::ListSecurityProfiles"
          },
          {
            "ActionName": "ListSecurityProfilesForTarget",
            "FullActionName": "iot::ListSecurityProfilesForTarget"
          },
          {
            "ActionName": "ListStreams",
            "FullActionName": "iot::ListStreams"
          },
          {
            "ActionName": "ListTagsForResource",
            "FullActionName": "iot::ListTagsForResource"
          },
          {
            "ActionName": "ListTargetsForPolicy",
            "FullActionName": "iot::ListTargetsForPolicy"
          },
          {
            "ActionName": "ListTargetsForSecurityProfile",
            "FullActionName": "iot::ListTargetsForSecurityProfile"
          },
          {
            "ActionName": "ListThingGroups",
            "FullActionName": "iot::ListThingGroups"
          },
          {
            "ActionName": "ListThingGroupsForThing",
            "FullActionName": "iot::ListThingGroupsForThing"
          },
          {
            "ActionName": "ListThingPrincipals",
            "FullActionName": "iot::ListThingPrincipals"
          },
          {
            "ActionName": "ListThingRegistrationTaskReports",
            "FullActionName": "iot::ListThingRegistrationTaskReports"
          },
          {
            "ActionName": "ListThingRegistrationTasks",
            "FullActionName": "iot::ListThingRegistrationTasks"
          },
          {
            "ActionName": "ListThingTypes",
            "FullActionName": "iot::ListThingTypes"
          },
          {
            "ActionName": "ListThings",
            "FullActionName": "iot::ListThings"
          },
          {
            "ActionName": "ListThingsInBillingGroup",
            "FullActionName": "iot::ListThingsInBillingGroup"
          },
          {
            "ActionName": "ListThingsInThingGroup",
            "FullActionName": "iot::ListThingsInThingGroup"
          },
          {
            "ActionName": "ListTopicRules",
            "FullActionName": "iot::ListTopicRules"
          },
          {
            "ActionName": "ListV2LoggingLevels",
            "FullActionName": "iot::ListV2LoggingLevels"
          },
          {
            "ActionName": "ListViolationEvents",
            "FullActionName": "iot::ListViolationEvents"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "IoT 1-Click",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "AssociateDeviceWithPlacement",
            "FullActionName": "iot1click::AssociateDeviceWithPlacement"
          },
          {
            "ActionName": "CreatePlacement",
            "FullActionName": "iot1click::CreatePlacement"
          },
          {
            "ActionName": "CreateProject",
            "FullActionName": "iot1click::CreateProject"
          },
          {
            "ActionName": "DeletePlacement",
            "FullActionName": "iot1click::DeletePlacement"
          },
          {
            "ActionName": "DeleteProject",
            "FullActionName": "iot1click::DeleteProject"
          },
          {
            "ActionName": "DisassociateDeviceFromPlacement",
            "FullActionName": "iot1click::DisassociateDeviceFromPlacement"
          },
          {
            "ActionName": "InvokeDeviceMethod",
            "FullActionName": "iot1click::InvokeDeviceMethod"
          },
          {
            "ActionName": "TagResource",
            "FullActionName": "iot1click::TagResource"
          },
          {
            "ActionName": "UntagResource",
            "FullActionName": "iot1click::UntagResource"
          },
          {
            "ActionName": "UpdateDeviceState",
            "FullActionName": "iot1click::UpdateDeviceState"
          },
          {
            "ActionName": "UpdatePlacement",
            "FullActionName": "iot1click::UpdatePlacement"
          },
          {
            "ActionName": "UpdateProject",
            "FullActionName": "iot1click::UpdateProject"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "ClaimDevicesByClaimCode",
            "FullActionName": "iot1click::ClaimDevicesByClaimCode"
          },
          {
            "ActionName": "DescribeDevice",
            "FullActionName": "iot1click::DescribeDevice"
          },
          {
            "ActionName": "DescribePlacement",
            "FullActionName": "iot1click::DescribePlacement"
          },
          {
            "ActionName": "DescribeProject",
            "FullActionName": "iot1click::DescribeProject"
          },
          {
            "ActionName": "FinalizeDeviceClaim",
            "FullActionName": "iot1click::FinalizeDeviceClaim"
          },
          {
            "ActionName": "GetDeviceMethods",
            "FullActionName": "iot1click::GetDeviceMethods"
          },
          {
            "ActionName": "GetDevicesInPlacement",
            "FullActionName": "iot1click::GetDevicesInPlacement"
          },
          {
            "ActionName": "InitiateDeviceClaim",
            "FullActionName": "iot1click::InitiateDeviceClaim"
          },
          {
            "ActionName": "ListDeviceEvents",
            "FullActionName": "iot1click::ListDeviceEvents"
          },
          {
            "ActionName": "ListPlacements",
            "FullActionName": "iot1click::ListPlacements"
          },
          {
            "ActionName": "UnclaimDevice",
            "FullActionName": "iot1click::UnclaimDevice"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListDevices",
            "FullActionName": "iot1click::ListDevices"
          },
          {
            "ActionName": "ListProjects",
            "FullActionName": "iot1click::ListProjects"
          },
          {
            "ActionName": "ListTagsForResource",
            "FullActionName": "iot1click::ListTagsForResource"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "IoT Analytics",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "BatchPutMessage",
            "FullActionName": "iotanalytics::BatchPutMessage"
          },
          {
            "ActionName": "CancelPipelineReprocessing",
            "FullActionName": "iotanalytics::CancelPipelineReprocessing"
          },
          {
            "ActionName": "CreateChannel",
            "FullActionName": "iotanalytics::CreateChannel"
          },
          {
            "ActionName": "CreateDataset",
            "FullActionName": "iotanalytics::CreateDataset"
          },
          {
            "ActionName": "CreateDatasetContent",
            "FullActionName": "iotanalytics::CreateDatasetContent"
          },
          {
            "ActionName": "CreateDatastore",
            "FullActionName": "iotanalytics::CreateDatastore"
          },
          {
            "ActionName": "CreatePipeline",
            "FullActionName": "iotanalytics::CreatePipeline"
          },
          {
            "ActionName": "DeleteChannel",
            "FullActionName": "iotanalytics::DeleteChannel"
          },
          {
            "ActionName": "DeleteDataset",
            "FullActionName": "iotanalytics::DeleteDataset"
          },
          {
            "ActionName": "DeleteDatasetContent",
            "FullActionName": "iotanalytics::DeleteDatasetContent"
          },
          {
            "ActionName": "DeleteDatastore",
            "FullActionName": "iotanalytics::DeleteDatastore"
          },
          {
            "ActionName": "DeletePipeline",
            "FullActionName": "iotanalytics::DeletePipeline"
          },
          {
            "ActionName": "PutLoggingOptions",
            "FullActionName": "iotanalytics::PutLoggingOptions"
          },
          {
            "ActionName": "StartPipelineReprocessing",
            "FullActionName": "iotanalytics::StartPipelineReprocessing"
          },
          {
            "ActionName": "UpdateChannel",
            "FullActionName": "iotanalytics::UpdateChannel"
          },
          {
            "ActionName": "UpdateDataset",
            "FullActionName": "iotanalytics::UpdateDataset"
          },
          {
            "ActionName": "UpdateDatastore",
            "FullActionName": "iotanalytics::UpdateDatastore"
          },
          {
            "ActionName": "UpdatePipeline",
            "FullActionName": "iotanalytics::UpdatePipeline"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeChannel",
            "FullActionName": "iotanalytics::DescribeChannel"
          },
          {
            "ActionName": "DescribeDataset",
            "FullActionName": "iotanalytics::DescribeDataset"
          },
          {
            "ActionName": "DescribeDatastore",
            "FullActionName": "iotanalytics::DescribeDatastore"
          },
          {
            "ActionName": "DescribeLoggingOptions",
            "FullActionName": "iotanalytics::DescribeLoggingOptions"
          },
          {
            "ActionName": "DescribePipeline",
            "FullActionName": "iotanalytics::DescribePipeline"
          },
          {
            "ActionName": "GetDatasetContent",
            "FullActionName": "iotanalytics::GetDatasetContent"
          },
          {
            "ActionName": "ListTagsForResource",
            "FullActionName": "iotanalytics::ListTagsForResource"
          },
          {
            "ActionName": "RunPipelineActivity",
            "FullActionName": "iotanalytics::RunPipelineActivity"
          },
          {
            "ActionName": "SampleChannelData",
            "FullActionName": "iotanalytics::SampleChannelData"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListChannels",
            "FullActionName": "iotanalytics::ListChannels"
          },
          {
            "ActionName": "ListDatasets",
            "FullActionName": "iotanalytics::ListDatasets"
          },
          {
            "ActionName": "ListDatastores",
            "FullActionName": "iotanalytics::ListDatastores"
          },
          {
            "ActionName": "ListPipelines",
            "FullActionName": "iotanalytics::ListPipelines"
          }
        ]
      },
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "TagResource",
            "FullActionName": "iotanalytics::TagResource"
          },
          {
            "ActionName": "UntagResource",
            "FullActionName": "iotanalytics::UntagResource"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "IoT Events",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "BatchPutMessage",
            "FullActionName": "iotevents::BatchPutMessage"
          },
          {
            "ActionName": "BatchUpdateDetector",
            "FullActionName": "iotevents::BatchUpdateDetector"
          },
          {
            "ActionName": "CreateDetectorModel",
            "FullActionName": "iotevents::CreateDetectorModel"
          },
          {
            "ActionName": "CreateInput",
            "FullActionName": "iotevents::CreateInput"
          },
          {
            "ActionName": "DeleteDetectorModel",
            "FullActionName": "iotevents::DeleteDetectorModel"
          },
          {
            "ActionName": "DeleteInput",
            "FullActionName": "iotevents::DeleteInput"
          },
          {
            "ActionName": "PutLoggingOptions",
            "FullActionName": "iotevents::PutLoggingOptions"
          },
          {
            "ActionName": "UpdateDetectorModel",
            "FullActionName": "iotevents::UpdateDetectorModel"
          },
          {
            "ActionName": "UpdateInput",
            "FullActionName": "iotevents::UpdateInput"
          },
          {
            "ActionName": "UpdateInputRouting",
            "FullActionName": "iotevents::UpdateInputRouting"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeDetector",
            "FullActionName": "iotevents::DescribeDetector"
          },
          {
            "ActionName": "DescribeDetectorModel",
            "FullActionName": "iotevents::DescribeDetectorModel"
          },
          {
            "ActionName": "DescribeInput",
            "FullActionName": "iotevents::DescribeInput"
          },
          {
            "ActionName": "DescribeLoggingOptions",
            "FullActionName": "iotevents::DescribeLoggingOptions"
          },
          {
            "ActionName": "ListTagsForResource",
            "FullActionName": "iotevents::ListTagsForResource"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListDetectorModelVersions",
            "FullActionName": "iotevents::ListDetectorModelVersions"
          },
          {
            "ActionName": "ListDetectorModels",
            "FullActionName": "iotevents::ListDetectorModels"
          },
          {
            "ActionName": "ListDetectors",
            "FullActionName": "iotevents::ListDetectors"
          },
          {
            "ActionName": "ListInputs",
            "FullActionName": "iotevents::ListInputs"
          }
        ]
      },
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "TagResource",
            "FullActionName": "iotevents::TagResource"
          },
          {
            "ActionName": "UntagResource",
            "FullActionName": "iotevents::UntagResource"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "IoT Greengrass",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "AssociateRoleToGroup",
            "FullActionName": "greengrass::AssociateRoleToGroup"
          },
          {
            "ActionName": "CreateConnectorDefinition",
            "FullActionName": "greengrass::CreateConnectorDefinition"
          },
          {
            "ActionName": "CreateConnectorDefinitionVersion",
            "FullActionName": "greengrass::CreateConnectorDefinitionVersion"
          },
          {
            "ActionName": "CreateCoreDefinition",
            "FullActionName": "greengrass::CreateCoreDefinition"
          },
          {
            "ActionName": "CreateCoreDefinitionVersion",
            "FullActionName": "greengrass::CreateCoreDefinitionVersion"
          },
          {
            "ActionName": "CreateDeployment",
            "FullActionName": "greengrass::CreateDeployment"
          },
          {
            "ActionName": "CreateDeviceDefinition",
            "FullActionName": "greengrass::CreateDeviceDefinition"
          },
          {
            "ActionName": "CreateDeviceDefinitionVersion",
            "FullActionName": "greengrass::CreateDeviceDefinitionVersion"
          },
          {
            "ActionName": "CreateFunctionDefinition",
            "FullActionName": "greengrass::CreateFunctionDefinition"
          },
          {
            "ActionName": "CreateFunctionDefinitionVersion",
            "FullActionName": "greengrass::CreateFunctionDefinitionVersion"
          },
          {
            "ActionName": "CreateGroup",
            "FullActionName": "greengrass::CreateGroup"
          },
          {
            "ActionName": "CreateGroupCertificateAuthority",
            "FullActionName": "greengrass::CreateGroupCertificateAuthority"
          },
          {
            "ActionName": "CreateGroupVersion",
            "FullActionName": "greengrass::CreateGroupVersion"
          },
          {
            "ActionName": "CreateLoggerDefinition",
            "FullActionName": "greengrass::CreateLoggerDefinition"
          },
          {
            "ActionName": "CreateLoggerDefinitionVersion",
            "FullActionName": "greengrass::CreateLoggerDefinitionVersion"
          },
          {
            "ActionName": "CreateResourceDefinition",
            "FullActionName": "greengrass::CreateResourceDefinition"
          },
          {
            "ActionName": "CreateResourceDefinitionVersion",
            "FullActionName": "greengrass::CreateResourceDefinitionVersion"
          },
          {
            "ActionName": "CreateSoftwareUpdateJob",
            "FullActionName": "greengrass::CreateSoftwareUpdateJob"
          },
          {
            "ActionName": "CreateSubscriptionDefinition",
            "FullActionName": "greengrass::CreateSubscriptionDefinition"
          },
          {
            "ActionName": "CreateSubscriptionDefinitionVersion",
            "FullActionName": "greengrass::CreateSubscriptionDefinitionVersion"
          },
          {
            "ActionName": "DeleteConnectorDefinition",
            "FullActionName": "greengrass::DeleteConnectorDefinition"
          },
          {
            "ActionName": "DeleteCoreDefinition",
            "FullActionName": "greengrass::DeleteCoreDefinition"
          },
          {
            "ActionName": "DeleteDeviceDefinition",
            "FullActionName": "greengrass::DeleteDeviceDefinition"
          },
          {
            "ActionName": "DeleteFunctionDefinition",
            "FullActionName": "greengrass::DeleteFunctionDefinition"
          },
          {
            "ActionName": "DeleteGroup",
            "FullActionName": "greengrass::DeleteGroup"
          },
          {
            "ActionName": "DeleteLoggerDefinition",
            "FullActionName": "greengrass::DeleteLoggerDefinition"
          },
          {
            "ActionName": "DeleteResourceDefinition",
            "FullActionName": "greengrass::DeleteResourceDefinition"
          },
          {
            "ActionName": "DeleteSubscriptionDefinition",
            "FullActionName": "greengrass::DeleteSubscriptionDefinition"
          },
          {
            "ActionName": "DisassociateRoleFromGroup",
            "FullActionName": "greengrass::DisassociateRoleFromGroup"
          },
          {
            "ActionName": "DisassociateServiceRoleFromAccount",
            "FullActionName": "greengrass::DisassociateServiceRoleFromAccount"
          },
          {
            "ActionName": "ResetDeployments",
            "FullActionName": "greengrass::ResetDeployments"
          },
          {
            "ActionName": "StartBulkDeployment",
            "FullActionName": "greengrass::StartBulkDeployment"
          },
          {
            "ActionName": "StopBulkDeployment",
            "FullActionName": "greengrass::StopBulkDeployment"
          },
          {
            "ActionName": "UpdateConnectivityInfo",
            "FullActionName": "greengrass::UpdateConnectivityInfo"
          },
          {
            "ActionName": "UpdateConnectorDefinition",
            "FullActionName": "greengrass::UpdateConnectorDefinition"
          },
          {
            "ActionName": "UpdateCoreDefinition",
            "FullActionName": "greengrass::UpdateCoreDefinition"
          },
          {
            "ActionName": "UpdateDeviceDefinition",
            "FullActionName": "greengrass::UpdateDeviceDefinition"
          },
          {
            "ActionName": "UpdateFunctionDefinition",
            "FullActionName": "greengrass::UpdateFunctionDefinition"
          },
          {
            "ActionName": "UpdateGroup",
            "FullActionName": "greengrass::UpdateGroup"
          },
          {
            "ActionName": "UpdateGroupCertificateConfiguration",
            "FullActionName": "greengrass::UpdateGroupCertificateConfiguration"
          },
          {
            "ActionName": "UpdateLoggerDefinition",
            "FullActionName": "greengrass::UpdateLoggerDefinition"
          },
          {
            "ActionName": "UpdateResourceDefinition",
            "FullActionName": "greengrass::UpdateResourceDefinition"
          },
          {
            "ActionName": "UpdateSubscriptionDefinition",
            "FullActionName": "greengrass::UpdateSubscriptionDefinition"
          }
        ]
      },
      {
        "AccessLevel": "Permissions",
        "Actions": [
          {
            "ActionName": "AssociateServiceRoleToAccount",
            "FullActionName": "greengrass::AssociateServiceRoleToAccount"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "GetAssociatedRole",
            "FullActionName": "greengrass::GetAssociatedRole"
          },
          {
            "ActionName": "GetBulkDeploymentStatus",
            "FullActionName": "greengrass::GetBulkDeploymentStatus"
          },
          {
            "ActionName": "GetConnectivityInfo",
            "FullActionName": "greengrass::GetConnectivityInfo"
          },
          {
            "ActionName": "GetConnectorDefinition",
            "FullActionName": "greengrass::GetConnectorDefinition"
          },
          {
            "ActionName": "GetConnectorDefinitionVersion",
            "FullActionName": "greengrass::GetConnectorDefinitionVersion"
          },
          {
            "ActionName": "GetCoreDefinition",
            "FullActionName": "greengrass::GetCoreDefinition"
          },
          {
            "ActionName": "GetCoreDefinitionVersion",
            "FullActionName": "greengrass::GetCoreDefinitionVersion"
          },
          {
            "ActionName": "GetDeploymentStatus",
            "FullActionName": "greengrass::GetDeploymentStatus"
          },
          {
            "ActionName": "GetDeviceDefinition",
            "FullActionName": "greengrass::GetDeviceDefinition"
          },
          {
            "ActionName": "GetDeviceDefinitionVersion",
            "FullActionName": "greengrass::GetDeviceDefinitionVersion"
          },
          {
            "ActionName": "GetFunctionDefinition",
            "FullActionName": "greengrass::GetFunctionDefinition"
          },
          {
            "ActionName": "GetFunctionDefinitionVersion",
            "FullActionName": "greengrass::GetFunctionDefinitionVersion"
          },
          {
            "ActionName": "GetGroup",
            "FullActionName": "greengrass::GetGroup"
          },
          {
            "ActionName": "GetGroupCertificateAuthority",
            "FullActionName": "greengrass::GetGroupCertificateAuthority"
          },
          {
            "ActionName": "GetGroupCertificateConfiguration",
            "FullActionName": "greengrass::GetGroupCertificateConfiguration"
          },
          {
            "ActionName": "GetGroupVersion",
            "FullActionName": "greengrass::GetGroupVersion"
          },
          {
            "ActionName": "GetLoggerDefinition",
            "FullActionName": "greengrass::GetLoggerDefinition"
          },
          {
            "ActionName": "GetLoggerDefinitionVersion",
            "FullActionName": "greengrass::GetLoggerDefinitionVersion"
          },
          {
            "ActionName": "GetResourceDefinition",
            "FullActionName": "greengrass::GetResourceDefinition"
          },
          {
            "ActionName": "GetResourceDefinitionVersion",
            "FullActionName": "greengrass::GetResourceDefinitionVersion"
          },
          {
            "ActionName": "GetServiceRoleForAccount",
            "FullActionName": "greengrass::GetServiceRoleForAccount"
          },
          {
            "ActionName": "GetSubscriptionDefinition",
            "FullActionName": "greengrass::GetSubscriptionDefinition"
          },
          {
            "ActionName": "GetSubscriptionDefinitionVersion",
            "FullActionName": "greengrass::GetSubscriptionDefinitionVersion"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListBulkDeploymentDetailedReports",
            "FullActionName": "greengrass::ListBulkDeploymentDetailedReports"
          },
          {
            "ActionName": "ListBulkDeployments",
            "FullActionName": "greengrass::ListBulkDeployments"
          },
          {
            "ActionName": "ListConnectorDefinitionVersions",
            "FullActionName": "greengrass::ListConnectorDefinitionVersions"
          },
          {
            "ActionName": "ListConnectorDefinitions",
            "FullActionName": "greengrass::ListConnectorDefinitions"
          },
          {
            "ActionName": "ListCoreDefinitionVersions",
            "FullActionName": "greengrass::ListCoreDefinitionVersions"
          },
          {
            "ActionName": "ListCoreDefinitions",
            "FullActionName": "greengrass::ListCoreDefinitions"
          },
          {
            "ActionName": "ListDeployments",
            "FullActionName": "greengrass::ListDeployments"
          },
          {
            "ActionName": "ListDeviceDefinitionVersions",
            "FullActionName": "greengrass::ListDeviceDefinitionVersions"
          },
          {
            "ActionName": "ListDeviceDefinitions",
            "FullActionName": "greengrass::ListDeviceDefinitions"
          },
          {
            "ActionName": "ListFunctionDefinitionVersions",
            "FullActionName": "greengrass::ListFunctionDefinitionVersions"
          },
          {
            "ActionName": "ListFunctionDefinitions",
            "FullActionName": "greengrass::ListFunctionDefinitions"
          },
          {
            "ActionName": "ListGroupCertificateAuthorities",
            "FullActionName": "greengrass::ListGroupCertificateAuthorities"
          },
          {
            "ActionName": "ListGroupVersions",
            "FullActionName": "greengrass::ListGroupVersions"
          },
          {
            "ActionName": "ListGroups",
            "FullActionName": "greengrass::ListGroups"
          },
          {
            "ActionName": "ListLoggerDefinitionVersions",
            "FullActionName": "greengrass::ListLoggerDefinitionVersions"
          },
          {
            "ActionName": "ListLoggerDefinitions",
            "FullActionName": "greengrass::ListLoggerDefinitions"
          },
          {
            "ActionName": "ListResourceDefinitionVersions",
            "FullActionName": "greengrass::ListResourceDefinitionVersions"
          },
          {
            "ActionName": "ListResourceDefinitions",
            "FullActionName": "greengrass::ListResourceDefinitions"
          },
          {
            "ActionName": "ListSubscriptionDefinitionVersions",
            "FullActionName": "greengrass::ListSubscriptionDefinitionVersions"
          },
          {
            "ActionName": "ListSubscriptionDefinitions",
            "FullActionName": "greengrass::ListSubscriptionDefinitions"
          },
          {
            "ActionName": "ListTagsForResource",
            "FullActionName": "greengrass::ListTagsForResource"
          }
        ]
      },
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "TagResource",
            "FullActionName": "greengrass::TagResource"
          },
          {
            "ActionName": "UntagResource",
            "FullActionName": "greengrass::UntagResource"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "IoT SiteWise",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "AssociateGatewaySink",
            "FullActionName": "iotsitewise::AssociateGatewaySink"
          },
          {
            "ActionName": "AssociateGatewaySource",
            "FullActionName": "iotsitewise::AssociateGatewaySource"
          },
          {
            "ActionName": "AssociateViewEntities",
            "FullActionName": "iotsitewise::AssociateViewEntities"
          },
          {
            "ActionName": "CreateAsset",
            "FullActionName": "iotsitewise::CreateAsset"
          },
          {
            "ActionName": "CreateAssetTemplate",
            "FullActionName": "iotsitewise::CreateAssetTemplate"
          },
          {
            "ActionName": "CreateGateway",
            "FullActionName": "iotsitewise::CreateGateway"
          },
          {
            "ActionName": "CreateGroup",
            "FullActionName": "iotsitewise::CreateGroup"
          },
          {
            "ActionName": "CreateMeasurementDataStore",
            "FullActionName": "iotsitewise::CreateMeasurementDataStore"
          },
          {
            "ActionName": "CreateMetricType",
            "FullActionName": "iotsitewise::CreateMetricType"
          },
          {
            "ActionName": "CreateView",
            "FullActionName": "iotsitewise::CreateView"
          },
          {
            "ActionName": "DeleteAsset",
            "FullActionName": "iotsitewise::DeleteAsset"
          },
          {
            "ActionName": "DeleteAssetTemplate",
            "FullActionName": "iotsitewise::DeleteAssetTemplate"
          },
          {
            "ActionName": "DeleteGateway",
            "FullActionName": "iotsitewise::DeleteGateway"
          },
          {
            "ActionName": "DeleteGroup",
            "FullActionName": "iotsitewise::DeleteGroup"
          },
          {
            "ActionName": "DeleteMeasurementDataStore",
            "FullActionName": "iotsitewise::DeleteMeasurementDataStore"
          },
          {
            "ActionName": "DeleteMetricType",
            "FullActionName": "iotsitewise::DeleteMetricType"
          },
          {
            "ActionName": "DeleteView",
            "FullActionName": "iotsitewise::DeleteView"
          },
          {
            "ActionName": "DeregisterViewEntities",
            "FullActionName": "iotsitewise::DeregisterViewEntities"
          },
          {
            "ActionName": "DisassociateGatewaySink",
            "FullActionName": "iotsitewise::DisassociateGatewaySink"
          },
          {
            "ActionName": "DisassociateGatewaySource",
            "FullActionName": "iotsitewise::DisassociateGatewaySource"
          },
          {
            "ActionName": "DisassociateViewEntities",
            "FullActionName": "iotsitewise::DisassociateViewEntities"
          },
          {
            "ActionName": "RegisterViewEntities",
            "FullActionName": "iotsitewise::RegisterViewEntities"
          },
          {
            "ActionName": "UpdateAsset",
            "FullActionName": "iotsitewise::UpdateAsset"
          },
          {
            "ActionName": "UpdateAssetTemplate",
            "FullActionName": "iotsitewise::UpdateAssetTemplate"
          },
          {
            "ActionName": "UpdateGateway",
            "FullActionName": "iotsitewise::UpdateGateway"
          },
          {
            "ActionName": "UpdateGroup",
            "FullActionName": "iotsitewise::UpdateGroup"
          },
          {
            "ActionName": "UpdateMeasurementDataStore",
            "FullActionName": "iotsitewise::UpdateMeasurementDataStore"
          },
          {
            "ActionName": "UpdateView",
            "FullActionName": "iotsitewise::UpdateView"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeAssetTemplates",
            "FullActionName": "iotsitewise::DescribeAssetTemplates"
          },
          {
            "ActionName": "DescribeAssets",
            "FullActionName": "iotsitewise::DescribeAssets"
          },
          {
            "ActionName": "DescribeGateways",
            "FullActionName": "iotsitewise::DescribeGateways"
          },
          {
            "ActionName": "DescribeGroups",
            "FullActionName": "iotsitewise::DescribeGroups"
          },
          {
            "ActionName": "DescribeMeasurementDataStores",
            "FullActionName": "iotsitewise::DescribeMeasurementDataStores"
          },
          {
            "ActionName": "DescribeMetricTypes",
            "FullActionName": "iotsitewise::DescribeMetricTypes"
          },
          {
            "ActionName": "DescribeViews",
            "FullActionName": "iotsitewise::DescribeViews"
          },
          {
            "ActionName": "GetMeasurementData",
            "FullActionName": "iotsitewise::GetMeasurementData"
          },
          {
            "ActionName": "GetMetricData",
            "FullActionName": "iotsitewise::GetMetricData"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListAssetTemplates",
            "FullActionName": "iotsitewise::ListAssetTemplates"
          },
          {
            "ActionName": "ListAssets",
            "FullActionName": "iotsitewise::ListAssets"
          },
          {
            "ActionName": "ListGateways",
            "FullActionName": "iotsitewise::ListGateways"
          },
          {
            "ActionName": "ListGroups",
            "FullActionName": "iotsitewise::ListGroups"
          },
          {
            "ActionName": "ListMeasurementDataStores",
            "FullActionName": "iotsitewise::ListMeasurementDataStores"
          },
          {
            "ActionName": "ListMeasurementDataStreams",
            "FullActionName": "iotsitewise::ListMeasurementDataStreams"
          },
          {
            "ActionName": "ListMetricTypes",
            "FullActionName": "iotsitewise::ListMetricTypes"
          },
          {
            "ActionName": "ListViewEntities",
            "FullActionName": "iotsitewise::ListViewEntities"
          },
          {
            "ActionName": "ListViews",
            "FullActionName": "iotsitewise::ListViews"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "IoT Things Graph",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "AssociateEntityToThing",
            "FullActionName": "iotthingsgraph::AssociateEntityToThing"
          },
          {
            "ActionName": "CreateFlowTemplate",
            "FullActionName": "iotthingsgraph::CreateFlowTemplate"
          },
          {
            "ActionName": "CreateSystemTemplate",
            "FullActionName": "iotthingsgraph::CreateSystemTemplate"
          },
          {
            "ActionName": "DeleteFlowTemplate",
            "FullActionName": "iotthingsgraph::DeleteFlowTemplate"
          },
          {
            "ActionName": "DeleteNamespace",
            "FullActionName": "iotthingsgraph::DeleteNamespace"
          },
          {
            "ActionName": "DeleteSystemInstance",
            "FullActionName": "iotthingsgraph::DeleteSystemInstance"
          },
          {
            "ActionName": "DeleteSystemTemplate",
            "FullActionName": "iotthingsgraph::DeleteSystemTemplate"
          },
          {
            "ActionName": "DeploySystemInstance",
            "FullActionName": "iotthingsgraph::DeploySystemInstance"
          },
          {
            "ActionName": "DeprecateFlowTemplate",
            "FullActionName": "iotthingsgraph::DeprecateFlowTemplate"
          },
          {
            "ActionName": "DeprecateSystemTemplate",
            "FullActionName": "iotthingsgraph::DeprecateSystemTemplate"
          },
          {
            "ActionName": "DissociateEntityFromThing",
            "FullActionName": "iotthingsgraph::DissociateEntityFromThing"
          },
          {
            "ActionName": "UndeploySystemInstance",
            "FullActionName": "iotthingsgraph::UndeploySystemInstance"
          },
          {
            "ActionName": "UpdateFlowTemplate",
            "FullActionName": "iotthingsgraph::UpdateFlowTemplate"
          },
          {
            "ActionName": "UpdateSystemTemplate",
            "FullActionName": "iotthingsgraph::UpdateSystemTemplate"
          },
          {
            "ActionName": "UploadEntityDefinitions",
            "FullActionName": "iotthingsgraph::UploadEntityDefinitions"
          }
        ]
      },
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "CreateSystemInstance",
            "FullActionName": "iotthingsgraph::CreateSystemInstance"
          },
          {
            "ActionName": "TagResource",
            "FullActionName": "iotthingsgraph::TagResource"
          },
          {
            "ActionName": "UntagResource",
            "FullActionName": "iotthingsgraph::UntagResource"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeNamespace",
            "FullActionName": "iotthingsgraph::DescribeNamespace"
          },
          {
            "ActionName": "GetEntities",
            "FullActionName": "iotthingsgraph::GetEntities"
          },
          {
            "ActionName": "GetFlowTemplate",
            "FullActionName": "iotthingsgraph::GetFlowTemplate"
          },
          {
            "ActionName": "GetFlowTemplateRevisions",
            "FullActionName": "iotthingsgraph::GetFlowTemplateRevisions"
          },
          {
            "ActionName": "GetNamespaceDeletionStatus",
            "FullActionName": "iotthingsgraph::GetNamespaceDeletionStatus"
          },
          {
            "ActionName": "GetSystemInstance",
            "FullActionName": "iotthingsgraph::GetSystemInstance"
          },
          {
            "ActionName": "GetSystemTemplate",
            "FullActionName": "iotthingsgraph::GetSystemTemplate"
          },
          {
            "ActionName": "GetSystemTemplateRevisions",
            "FullActionName": "iotthingsgraph::GetSystemTemplateRevisions"
          },
          {
            "ActionName": "GetUploadStatus",
            "FullActionName": "iotthingsgraph::GetUploadStatus"
          },
          {
            "ActionName": "SearchEntities",
            "FullActionName": "iotthingsgraph::SearchEntities"
          },
          {
            "ActionName": "SearchFlowExecutions",
            "FullActionName": "iotthingsgraph::SearchFlowExecutions"
          },
          {
            "ActionName": "SearchFlowTemplates",
            "FullActionName": "iotthingsgraph::SearchFlowTemplates"
          },
          {
            "ActionName": "SearchSystemInstances",
            "FullActionName": "iotthingsgraph::SearchSystemInstances"
          },
          {
            "ActionName": "SearchSystemTemplates",
            "FullActionName": "iotthingsgraph::SearchSystemTemplates"
          },
          {
            "ActionName": "SearchThings",
            "FullActionName": "iotthingsgraph::SearchThings"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListFlowExecutionMessages",
            "FullActionName": "iotthingsgraph::ListFlowExecutionMessages"
          },
          {
            "ActionName": "ListTagsForResource",
            "FullActionName": "iotthingsgraph::ListTagsForResource"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "KMS",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "CancelKeyDeletion",
            "FullActionName": "kms::CancelKeyDeletion"
          },
          {
            "ActionName": "ConnectCustomKeyStore",
            "FullActionName": "kms::ConnectCustomKeyStore"
          },
          {
            "ActionName": "CreateAlias",
            "FullActionName": "kms::CreateAlias"
          },
          {
            "ActionName": "CreateCustomKeyStore",
            "FullActionName": "kms::CreateCustomKeyStore"
          },
          {
            "ActionName": "CreateKey",
            "FullActionName": "kms::CreateKey"
          },
          {
            "ActionName": "Decrypt",
            "FullActionName": "kms::Decrypt"
          },
          {
            "ActionName": "DeleteAlias",
            "FullActionName": "kms::DeleteAlias"
          },
          {
            "ActionName": "DeleteCustomKeyStore",
            "FullActionName": "kms::DeleteCustomKeyStore"
          },
          {
            "ActionName": "DeleteImportedKeyMaterial",
            "FullActionName": "kms::DeleteImportedKeyMaterial"
          },
          {
            "ActionName": "DisableKey",
            "FullActionName": "kms::DisableKey"
          },
          {
            "ActionName": "DisableKeyRotation",
            "FullActionName": "kms::DisableKeyRotation"
          },
          {
            "ActionName": "DisconnectCustomKeyStore",
            "FullActionName": "kms::DisconnectCustomKeyStore"
          },
          {
            "ActionName": "EnableKey",
            "FullActionName": "kms::EnableKey"
          },
          {
            "ActionName": "EnableKeyRotation",
            "FullActionName": "kms::EnableKeyRotation"
          },
          {
            "ActionName": "Encrypt",
            "FullActionName": "kms::Encrypt"
          },
          {
            "ActionName": "GenerateDataKey",
            "FullActionName": "kms::GenerateDataKey"
          },
          {
            "ActionName": "GenerateDataKeyWithoutPlaintext",
            "FullActionName": "kms::GenerateDataKeyWithoutPlaintext"
          },
          {
            "ActionName": "GenerateRandom",
            "FullActionName": "kms::GenerateRandom"
          },
          {
            "ActionName": "ImportKeyMaterial",
            "FullActionName": "kms::ImportKeyMaterial"
          },
          {
            "ActionName": "ReEncryptFrom",
            "FullActionName": "kms::ReEncryptFrom"
          },
          {
            "ActionName": "ReEncryptTo",
            "FullActionName": "kms::ReEncryptTo"
          },
          {
            "ActionName": "ScheduleKeyDeletion",
            "FullActionName": "kms::ScheduleKeyDeletion"
          },
          {
            "ActionName": "UpdateAlias",
            "FullActionName": "kms::UpdateAlias"
          },
          {
            "ActionName": "UpdateCustomKeyStore",
            "FullActionName": "kms::UpdateCustomKeyStore"
          },
          {
            "ActionName": "UpdateKeyDescription",
            "FullActionName": "kms::UpdateKeyDescription"
          }
        ]
      },
      {
        "AccessLevel": "Permissions",
        "Actions": [
          {
            "ActionName": "CreateGrant",
            "FullActionName": "kms::CreateGrant"
          },
          {
            "ActionName": "PutKeyPolicy",
            "FullActionName": "kms::PutKeyPolicy"
          },
          {
            "ActionName": "RetireGrant",
            "FullActionName": "kms::RetireGrant"
          },
          {
            "ActionName": "RevokeGrant",
            "FullActionName": "kms::RevokeGrant"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeCustomKeyStores",
            "FullActionName": "kms::DescribeCustomKeyStores"
          },
          {
            "ActionName": "DescribeKey",
            "FullActionName": "kms::DescribeKey"
          },
          {
            "ActionName": "GetKeyPolicy",
            "FullActionName": "kms::GetKeyPolicy"
          },
          {
            "ActionName": "GetKeyRotationStatus",
            "FullActionName": "kms::GetKeyRotationStatus"
          },
          {
            "ActionName": "GetParametersForImport",
            "FullActionName": "kms::GetParametersForImport"
          },
          {
            "ActionName": "ListResourceTags",
            "FullActionName": "kms::ListResourceTags"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListAliases",
            "FullActionName": "kms::ListAliases"
          },
          {
            "ActionName": "ListGrants",
            "FullActionName": "kms::ListGrants"
          },
          {
            "ActionName": "ListKeyPolicies",
            "FullActionName": "kms::ListKeyPolicies"
          },
          {
            "ActionName": "ListKeys",
            "FullActionName": "kms::ListKeys"
          },
          {
            "ActionName": "ListRetirableGrants",
            "FullActionName": "kms::ListRetirableGrants"
          }
        ]
      },
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "TagResource",
            "FullActionName": "kms::TagResource"
          },
          {
            "ActionName": "UntagResource",
            "FullActionName": "kms::UntagResource"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Kinesis",
    "AccessLevels": [
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "AddTagsToStream",
            "FullActionName": "kinesis::AddTagsToStream"
          },
          {
            "ActionName": "RemoveTagsFromStream",
            "FullActionName": "kinesis::RemoveTagsFromStream"
          }
        ]
      },
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "CreateStream",
            "FullActionName": "kinesis::CreateStream"
          },
          {
            "ActionName": "DecreaseStreamRetentionPeriod",
            "FullActionName": "kinesis::DecreaseStreamRetentionPeriod"
          },
          {
            "ActionName": "DeleteStream",
            "FullActionName": "kinesis::DeleteStream"
          },
          {
            "ActionName": "DeregisterStreamConsumer",
            "FullActionName": "kinesis::DeregisterStreamConsumer"
          },
          {
            "ActionName": "DisableEnhancedMonitoring",
            "FullActionName": "kinesis::DisableEnhancedMonitoring"
          },
          {
            "ActionName": "EnableEnhancedMonitoring",
            "FullActionName": "kinesis::EnableEnhancedMonitoring"
          },
          {
            "ActionName": "IncreaseStreamRetentionPeriod",
            "FullActionName": "kinesis::IncreaseStreamRetentionPeriod"
          },
          {
            "ActionName": "MergeShards",
            "FullActionName": "kinesis::MergeShards"
          },
          {
            "ActionName": "PutRecord",
            "FullActionName": "kinesis::PutRecord"
          },
          {
            "ActionName": "PutRecords",
            "FullActionName": "kinesis::PutRecords"
          },
          {
            "ActionName": "RegisterStreamConsumer",
            "FullActionName": "kinesis::RegisterStreamConsumer"
          },
          {
            "ActionName": "SplitShard",
            "FullActionName": "kinesis::SplitShard"
          },
          {
            "ActionName": "UpdateShardCount",
            "FullActionName": "kinesis::UpdateShardCount"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeLimits",
            "FullActionName": "kinesis::DescribeLimits"
          },
          {
            "ActionName": "DescribeStream",
            "FullActionName": "kinesis::DescribeStream"
          },
          {
            "ActionName": "DescribeStreamConsumer",
            "FullActionName": "kinesis::DescribeStreamConsumer"
          },
          {
            "ActionName": "DescribeStreamSummary",
            "FullActionName": "kinesis::DescribeStreamSummary"
          },
          {
            "ActionName": "GetRecords",
            "FullActionName": "kinesis::GetRecords"
          },
          {
            "ActionName": "GetShardIterator",
            "FullActionName": "kinesis::GetShardIterator"
          },
          {
            "ActionName": "ListTagsForStream",
            "FullActionName": "kinesis::ListTagsForStream"
          },
          {
            "ActionName": "SubscribeToShard",
            "FullActionName": "kinesis::SubscribeToShard"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListShards",
            "FullActionName": "kinesis::ListShards"
          },
          {
            "ActionName": "ListStreamConsumers",
            "FullActionName": "kinesis::ListStreamConsumers"
          },
          {
            "ActionName": "ListStreams",
            "FullActionName": "kinesis::ListStreams"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Kinesis Analytics V2",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "AddApplicationCloudWatchLoggingOption",
            "FullActionName": "kinesisanalytics::AddApplicationCloudWatchLoggingOption"
          },
          {
            "ActionName": "AddApplicationInput",
            "FullActionName": "kinesisanalytics::AddApplicationInput"
          },
          {
            "ActionName": "AddApplicationInputProcessingConfiguration",
            "FullActionName": "kinesisanalytics::AddApplicationInputProcessingConfiguration"
          },
          {
            "ActionName": "AddApplicationOutput",
            "FullActionName": "kinesisanalytics::AddApplicationOutput"
          },
          {
            "ActionName": "AddApplicationReferenceDataSource",
            "FullActionName": "kinesisanalytics::AddApplicationReferenceDataSource"
          },
          {
            "ActionName": "CreateApplication",
            "FullActionName": "kinesisanalytics::CreateApplication"
          },
          {
            "ActionName": "CreateApplicationSnapshot",
            "FullActionName": "kinesisanalytics::CreateApplicationSnapshot"
          },
          {
            "ActionName": "DeleteApplication",
            "FullActionName": "kinesisanalytics::DeleteApplication"
          },
          {
            "ActionName": "DeleteApplicationCloudWatchLoggingOption",
            "FullActionName": "kinesisanalytics::DeleteApplicationCloudWatchLoggingOption"
          },
          {
            "ActionName": "DeleteApplicationInputProcessingConfiguration",
            "FullActionName": "kinesisanalytics::DeleteApplicationInputProcessingConfiguration"
          },
          {
            "ActionName": "DeleteApplicationOutput",
            "FullActionName": "kinesisanalytics::DeleteApplicationOutput"
          },
          {
            "ActionName": "DeleteApplicationReferenceDataSource",
            "FullActionName": "kinesisanalytics::DeleteApplicationReferenceDataSource"
          },
          {
            "ActionName": "DeleteApplicationSnapshot",
            "FullActionName": "kinesisanalytics::DeleteApplicationSnapshot"
          },
          {
            "ActionName": "StartApplication",
            "FullActionName": "kinesisanalytics::StartApplication"
          },
          {
            "ActionName": "StopApplication",
            "FullActionName": "kinesisanalytics::StopApplication"
          },
          {
            "ActionName": "UpdateApplication",
            "FullActionName": "kinesisanalytics::UpdateApplication"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeApplication",
            "FullActionName": "kinesisanalytics::DescribeApplication"
          },
          {
            "ActionName": "DescribeApplicationSnapshot",
            "FullActionName": "kinesisanalytics::DescribeApplicationSnapshot"
          },
          {
            "ActionName": "DiscoverInputSchema",
            "FullActionName": "kinesisanalytics::DiscoverInputSchema"
          },
          {
            "ActionName": "ListApplicationSnapshots",
            "FullActionName": "kinesisanalytics::ListApplicationSnapshots"
          },
          {
            "ActionName": "ListTagsForResource",
            "FullActionName": "kinesisanalytics::ListTagsForResource"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListApplications",
            "FullActionName": "kinesisanalytics::ListApplications"
          }
        ]
      },
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "TagResource",
            "FullActionName": "kinesisanalytics::TagResource"
          },
          {
            "ActionName": "UntagResource",
            "FullActionName": "kinesisanalytics::UntagResource"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Kinesis Video Streams",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "CreateStream",
            "FullActionName": "kinesisvideo::CreateStream"
          },
          {
            "ActionName": "DeleteStream",
            "FullActionName": "kinesisvideo::DeleteStream"
          },
          {
            "ActionName": "PutMedia",
            "FullActionName": "kinesisvideo::PutMedia"
          },
          {
            "ActionName": "UpdateDataRetention",
            "FullActionName": "kinesisvideo::UpdateDataRetention"
          },
          {
            "ActionName": "UpdateStream",
            "FullActionName": "kinesisvideo::UpdateStream"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "DescribeStream",
            "FullActionName": "kinesisvideo::DescribeStream"
          },
          {
            "ActionName": "ListFragments",
            "FullActionName": "kinesisvideo::ListFragments"
          },
          {
            "ActionName": "ListStreams",
            "FullActionName": "kinesisvideo::ListStreams"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "GetDASHStreamingSessionURL",
            "FullActionName": "kinesisvideo::GetDASHStreamingSessionURL"
          },
          {
            "ActionName": "GetDataEndpoint",
            "FullActionName": "kinesisvideo::GetDataEndpoint"
          },
          {
            "ActionName": "GetHLSStreamingSessionURL",
            "FullActionName": "kinesisvideo::GetHLSStreamingSessionURL"
          },
          {
            "ActionName": "GetMedia",
            "FullActionName": "kinesisvideo::GetMedia"
          },
          {
            "ActionName": "GetMediaForFragmentList",
            "FullActionName": "kinesisvideo::GetMediaForFragmentList"
          },
          {
            "ActionName": "ListTagsForStream",
            "FullActionName": "kinesisvideo::ListTagsForStream"
          }
        ]
      },
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "TagStream",
            "FullActionName": "kinesisvideo::TagStream"
          },
          {
            "ActionName": "UntagStream",
            "FullActionName": "kinesisvideo::UntagStream"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Lake Formation",
    "AccessLevels": [
      {
        "AccessLevel": "Permissions",
        "Actions": [
          {
            "ActionName": "BatchGrantPermissions",
            "FullActionName": "lakeformation::BatchGrantPermissions"
          },
          {
            "ActionName": "BatchRevokePermissions",
            "FullActionName": "lakeformation::BatchRevokePermissions"
          },
          {
            "ActionName": "GrantPermissions",
            "FullActionName": "lakeformation::GrantPermissions"
          },
          {
            "ActionName": "PutDataLakeSettings",
            "FullActionName": "lakeformation::PutDataLakeSettings"
          },
          {
            "ActionName": "RevokePermissions",
            "FullActionName": "lakeformation::RevokePermissions"
          }
        ]
      },
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "DeregisterResource",
            "FullActionName": "lakeformation::DeregisterResource"
          },
          {
            "ActionName": "GetDataAccess",
            "FullActionName": "lakeformation::GetDataAccess"
          },
          {
            "ActionName": "RegisterResource",
            "FullActionName": "lakeformation::RegisterResource"
          },
          {
            "ActionName": "UpdateResource",
            "FullActionName": "lakeformation::UpdateResource"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeResource",
            "FullActionName": "lakeformation::DescribeResource"
          },
          {
            "ActionName": "GetDataLakeSettings",
            "FullActionName": "lakeformation::GetDataLakeSettings"
          },
          {
            "ActionName": "GetEffectivePermissionsForPath",
            "FullActionName": "lakeformation::GetEffectivePermissionsForPath"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListPermissions",
            "FullActionName": "lakeformation::ListPermissions"
          },
          {
            "ActionName": "ListResources",
            "FullActionName": "lakeformation::ListResources"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Lambda",
    "AccessLevels": [
      {
        "AccessLevel": "Permissions",
        "Actions": [
          {
            "ActionName": "AddLayerVersionPermission",
            "FullActionName": "lambda::AddLayerVersionPermission"
          },
          {
            "ActionName": "AddPermission",
            "FullActionName": "lambda::AddPermission"
          },
          {
            "ActionName": "EnableReplication",
            "FullActionName": "lambda::EnableReplication"
          },
          {
            "ActionName": "RemoveLayerVersionPermission",
            "FullActionName": "lambda::RemoveLayerVersionPermission"
          },
          {
            "ActionName": "RemovePermission",
            "FullActionName": "lambda::RemovePermission"
          }
        ]
      },
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "CreateAlias",
            "FullActionName": "lambda::CreateAlias"
          },
          {
            "ActionName": "CreateEventSourceMapping",
            "FullActionName": "lambda::CreateEventSourceMapping"
          },
          {
            "ActionName": "CreateFunction",
            "FullActionName": "lambda::CreateFunction"
          },
          {
            "ActionName": "DeleteAlias",
            "FullActionName": "lambda::DeleteAlias"
          },
          {
            "ActionName": "DeleteEventSourceMapping",
            "FullActionName": "lambda::DeleteEventSourceMapping"
          },
          {
            "ActionName": "DeleteFunction",
            "FullActionName": "lambda::DeleteFunction"
          },
          {
            "ActionName": "DeleteFunctionConcurrency",
            "FullActionName": "lambda::DeleteFunctionConcurrency"
          },
          {
            "ActionName": "DeleteLayerVersion",
            "FullActionName": "lambda::DeleteLayerVersion"
          },
          {
            "ActionName": "InvokeAsync",
            "FullActionName": "lambda::InvokeAsync"
          },
          {
            "ActionName": "InvokeFunction",
            "FullActionName": "lambda::InvokeFunction"
          },
          {
            "ActionName": "PublishLayerVersion",
            "FullActionName": "lambda::PublishLayerVersion"
          },
          {
            "ActionName": "PublishVersion",
            "FullActionName": "lambda::PublishVersion"
          },
          {
            "ActionName": "PutFunctionConcurrency",
            "FullActionName": "lambda::PutFunctionConcurrency"
          },
          {
            "ActionName": "TagResource",
            "FullActionName": "lambda::TagResource"
          },
          {
            "ActionName": "UntagResource",
            "FullActionName": "lambda::UntagResource"
          },
          {
            "ActionName": "UpdateAlias",
            "FullActionName": "lambda::UpdateAlias"
          },
          {
            "ActionName": "UpdateEventSourceMapping",
            "FullActionName": "lambda::UpdateEventSourceMapping"
          },
          {
            "ActionName": "UpdateFunctionCode",
            "FullActionName": "lambda::UpdateFunctionCode"
          },
          {
            "ActionName": "UpdateFunctionConfiguration",
            "FullActionName": "lambda::UpdateFunctionConfiguration"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "GetAccountSettings",
            "FullActionName": "lambda::GetAccountSettings"
          },
          {
            "ActionName": "GetAlias",
            "FullActionName": "lambda::GetAlias"
          },
          {
            "ActionName": "GetEventSourceMapping",
            "FullActionName": "lambda::GetEventSourceMapping"
          },
          {
            "ActionName": "GetFunction",
            "FullActionName": "lambda::GetFunction"
          },
          {
            "ActionName": "GetFunctionConfiguration",
            "FullActionName": "lambda::GetFunctionConfiguration"
          },
          {
            "ActionName": "GetLayerVersion",
            "FullActionName": "lambda::GetLayerVersion"
          },
          {
            "ActionName": "GetLayerVersionPolicy",
            "FullActionName": "lambda::GetLayerVersionPolicy"
          },
          {
            "ActionName": "GetPolicy",
            "FullActionName": "lambda::GetPolicy"
          },
          {
            "ActionName": "ListTags",
            "FullActionName": "lambda::ListTags"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListAliases",
            "FullActionName": "lambda::ListAliases"
          },
          {
            "ActionName": "ListEventSourceMappings",
            "FullActionName": "lambda::ListEventSourceMappings"
          },
          {
            "ActionName": "ListFunctions",
            "FullActionName": "lambda::ListFunctions"
          },
          {
            "ActionName": "ListLayerVersions",
            "FullActionName": "lambda::ListLayerVersions"
          },
          {
            "ActionName": "ListLayers",
            "FullActionName": "lambda::ListLayers"
          },
          {
            "ActionName": "ListVersionsByFunction",
            "FullActionName": "lambda::ListVersionsByFunction"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Lex",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "CreateBotVersion",
            "FullActionName": "lex::CreateBotVersion"
          },
          {
            "ActionName": "CreateIntentVersion",
            "FullActionName": "lex::CreateIntentVersion"
          },
          {
            "ActionName": "CreateSlotTypeVersion",
            "FullActionName": "lex::CreateSlotTypeVersion"
          },
          {
            "ActionName": "DeleteBot",
            "FullActionName": "lex::DeleteBot"
          },
          {
            "ActionName": "DeleteBotAlias",
            "FullActionName": "lex::DeleteBotAlias"
          },
          {
            "ActionName": "DeleteBotChannelAssociation",
            "FullActionName": "lex::DeleteBotChannelAssociation"
          },
          {
            "ActionName": "DeleteBotVersion",
            "FullActionName": "lex::DeleteBotVersion"
          },
          {
            "ActionName": "DeleteIntent",
            "FullActionName": "lex::DeleteIntent"
          },
          {
            "ActionName": "DeleteIntentVersion",
            "FullActionName": "lex::DeleteIntentVersion"
          },
          {
            "ActionName": "DeleteSlotType",
            "FullActionName": "lex::DeleteSlotType"
          },
          {
            "ActionName": "DeleteSlotTypeVersion",
            "FullActionName": "lex::DeleteSlotTypeVersion"
          },
          {
            "ActionName": "DeleteUtterances",
            "FullActionName": "lex::DeleteUtterances"
          },
          {
            "ActionName": "PostContent",
            "FullActionName": "lex::PostContent"
          },
          {
            "ActionName": "PostText",
            "FullActionName": "lex::PostText"
          },
          {
            "ActionName": "PutBot",
            "FullActionName": "lex::PutBot"
          },
          {
            "ActionName": "PutBotAlias",
            "FullActionName": "lex::PutBotAlias"
          },
          {
            "ActionName": "PutIntent",
            "FullActionName": "lex::PutIntent"
          },
          {
            "ActionName": "PutSlotType",
            "FullActionName": "lex::PutSlotType"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "GetBot",
            "FullActionName": "lex::GetBot"
          },
          {
            "ActionName": "GetBotAlias",
            "FullActionName": "lex::GetBotAlias"
          },
          {
            "ActionName": "GetBotChannelAssociation",
            "FullActionName": "lex::GetBotChannelAssociation"
          },
          {
            "ActionName": "GetBuiltinIntent",
            "FullActionName": "lex::GetBuiltinIntent"
          },
          {
            "ActionName": "GetBuiltinIntents",
            "FullActionName": "lex::GetBuiltinIntents"
          },
          {
            "ActionName": "GetBuiltinSlotTypes",
            "FullActionName": "lex::GetBuiltinSlotTypes"
          },
          {
            "ActionName": "GetIntent",
            "FullActionName": "lex::GetIntent"
          },
          {
            "ActionName": "GetSlotType",
            "FullActionName": "lex::GetSlotType"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "GetBotAliases",
            "FullActionName": "lex::GetBotAliases"
          },
          {
            "ActionName": "GetBotChannelAssociations",
            "FullActionName": "lex::GetBotChannelAssociations"
          },
          {
            "ActionName": "GetBotVersions",
            "FullActionName": "lex::GetBotVersions"
          },
          {
            "ActionName": "GetBots",
            "FullActionName": "lex::GetBots"
          },
          {
            "ActionName": "GetIntentVersions",
            "FullActionName": "lex::GetIntentVersions"
          },
          {
            "ActionName": "GetIntents",
            "FullActionName": "lex::GetIntents"
          },
          {
            "ActionName": "GetSlotTypeVersions",
            "FullActionName": "lex::GetSlotTypeVersions"
          },
          {
            "ActionName": "GetSlotTypes",
            "FullActionName": "lex::GetSlotTypes"
          },
          {
            "ActionName": "GetUtterancesView",
            "FullActionName": "lex::GetUtterancesView"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "License Manager",
    "AccessLevels": [
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "CreateLicenseConfiguration",
            "FullActionName": "license-manager::CreateLicenseConfiguration"
          },
          {
            "ActionName": "TagResource",
            "FullActionName": "license-manager::TagResource"
          },
          {
            "ActionName": "UntagResource",
            "FullActionName": "license-manager::UntagResource"
          }
        ]
      },
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "DeleteLicenseConfiguration",
            "FullActionName": "license-manager::DeleteLicenseConfiguration"
          },
          {
            "ActionName": "UpdateLicenseConfiguration",
            "FullActionName": "license-manager::UpdateLicenseConfiguration"
          },
          {
            "ActionName": "UpdateLicenseSpecificationsForResource",
            "FullActionName": "license-manager::UpdateLicenseSpecificationsForResource"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "GetLicenseConfiguration",
            "FullActionName": "license-manager::GetLicenseConfiguration"
          },
          {
            "ActionName": "GetServiceSettings",
            "FullActionName": "license-manager::GetServiceSettings"
          },
          {
            "ActionName": "ListAssociationsForLicenseConfiguration",
            "FullActionName": "license-manager::ListAssociationsForLicenseConfiguration"
          },
          {
            "ActionName": "ListLicenseConfigurations",
            "FullActionName": "license-manager::ListLicenseConfigurations"
          },
          {
            "ActionName": "ListLicenseSpecificationsForResource",
            "FullActionName": "license-manager::ListLicenseSpecificationsForResource"
          },
          {
            "ActionName": "ListResourceInventory",
            "FullActionName": "license-manager::ListResourceInventory"
          },
          {
            "ActionName": "ListTagsForResource",
            "FullActionName": "license-manager::ListTagsForResource"
          },
          {
            "ActionName": "ListUsageForLicenseConfiguration",
            "FullActionName": "license-manager::ListUsageForLicenseConfiguration"
          }
        ]
      },
      {
        "AccessLevel": "Permissions",
        "Actions": [
          {
            "ActionName": "UpdateServiceSettings",
            "FullActionName": "license-manager::UpdateServiceSettings"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Lightsail",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "AllocateStaticIp",
            "FullActionName": "lightsail::AllocateStaticIp"
          },
          {
            "ActionName": "AttachDisk",
            "FullActionName": "lightsail::AttachDisk"
          },
          {
            "ActionName": "AttachInstancesToLoadBalancer",
            "FullActionName": "lightsail::AttachInstancesToLoadBalancer"
          },
          {
            "ActionName": "AttachLoadBalancerTlsCertificate",
            "FullActionName": "lightsail::AttachLoadBalancerTlsCertificate"
          },
          {
            "ActionName": "AttachStaticIp",
            "FullActionName": "lightsail::AttachStaticIp"
          },
          {
            "ActionName": "CloseInstancePublicPorts",
            "FullActionName": "lightsail::CloseInstancePublicPorts"
          },
          {
            "ActionName": "CopySnapshot",
            "FullActionName": "lightsail::CopySnapshot"
          },
          {
            "ActionName": "CreateDisk",
            "FullActionName": "lightsail::CreateDisk"
          },
          {
            "ActionName": "CreateDiskFromSnapshot",
            "FullActionName": "lightsail::CreateDiskFromSnapshot"
          },
          {
            "ActionName": "CreateDiskSnapshot",
            "FullActionName": "lightsail::CreateDiskSnapshot"
          },
          {
            "ActionName": "CreateDomain",
            "FullActionName": "lightsail::CreateDomain"
          },
          {
            "ActionName": "CreateDomainEntry",
            "FullActionName": "lightsail::CreateDomainEntry"
          },
          {
            "ActionName": "CreateInstanceSnapshot",
            "FullActionName": "lightsail::CreateInstanceSnapshot"
          },
          {
            "ActionName": "CreateInstances",
            "FullActionName": "lightsail::CreateInstances"
          },
          {
            "ActionName": "CreateInstancesFromSnapshot",
            "FullActionName": "lightsail::CreateInstancesFromSnapshot"
          },
          {
            "ActionName": "CreateKeyPair",
            "FullActionName": "lightsail::CreateKeyPair"
          },
          {
            "ActionName": "CreateLoadBalancer",
            "FullActionName": "lightsail::CreateLoadBalancer"
          },
          {
            "ActionName": "CreateLoadBalancerTlsCertificate",
            "FullActionName": "lightsail::CreateLoadBalancerTlsCertificate"
          },
          {
            "ActionName": "CreateRelationalDatabase",
            "FullActionName": "lightsail::CreateRelationalDatabase"
          },
          {
            "ActionName": "CreateRelationalDatabaseFromSnapshot",
            "FullActionName": "lightsail::CreateRelationalDatabaseFromSnapshot"
          },
          {
            "ActionName": "CreateRelationalDatabaseSnapshot",
            "FullActionName": "lightsail::CreateRelationalDatabaseSnapshot"
          },
          {
            "ActionName": "DeleteDisk",
            "FullActionName": "lightsail::DeleteDisk"
          },
          {
            "ActionName": "DeleteDiskSnapshot",
            "FullActionName": "lightsail::DeleteDiskSnapshot"
          },
          {
            "ActionName": "DeleteDomain",
            "FullActionName": "lightsail::DeleteDomain"
          },
          {
            "ActionName": "DeleteDomainEntry",
            "FullActionName": "lightsail::DeleteDomainEntry"
          },
          {
            "ActionName": "DeleteInstance",
            "FullActionName": "lightsail::DeleteInstance"
          },
          {
            "ActionName": "DeleteInstanceSnapshot",
            "FullActionName": "lightsail::DeleteInstanceSnapshot"
          },
          {
            "ActionName": "DeleteKeyPair",
            "FullActionName": "lightsail::DeleteKeyPair"
          },
          {
            "ActionName": "DeleteKnownHostKeys",
            "FullActionName": "lightsail::DeleteKnownHostKeys"
          },
          {
            "ActionName": "DeleteLoadBalancer",
            "FullActionName": "lightsail::DeleteLoadBalancer"
          },
          {
            "ActionName": "DeleteLoadBalancerTlsCertificate",
            "FullActionName": "lightsail::DeleteLoadBalancerTlsCertificate"
          },
          {
            "ActionName": "DeleteRelationalDatabase",
            "FullActionName": "lightsail::DeleteRelationalDatabase"
          },
          {
            "ActionName": "DeleteRelationalDatabaseSnapshot",
            "FullActionName": "lightsail::DeleteRelationalDatabaseSnapshot"
          },
          {
            "ActionName": "DetachDisk",
            "FullActionName": "lightsail::DetachDisk"
          },
          {
            "ActionName": "DetachInstancesFromLoadBalancer",
            "FullActionName": "lightsail::DetachInstancesFromLoadBalancer"
          },
          {
            "ActionName": "DetachStaticIp",
            "FullActionName": "lightsail::DetachStaticIp"
          },
          {
            "ActionName": "DownloadDefaultKeyPair",
            "FullActionName": "lightsail::DownloadDefaultKeyPair"
          },
          {
            "ActionName": "ExportSnapshot",
            "FullActionName": "lightsail::ExportSnapshot"
          },
          {
            "ActionName": "GetInstanceAccessDetails",
            "FullActionName": "lightsail::GetInstanceAccessDetails"
          },
          {
            "ActionName": "GetRelationalDatabaseMasterUserPassword",
            "FullActionName": "lightsail::GetRelationalDatabaseMasterUserPassword"
          },
          {
            "ActionName": "ImportKeyPair",
            "FullActionName": "lightsail::ImportKeyPair"
          },
          {
            "ActionName": "OpenInstancePublicPorts",
            "FullActionName": "lightsail::OpenInstancePublicPorts"
          },
          {
            "ActionName": "PeerVpc",
            "FullActionName": "lightsail::PeerVpc"
          },
          {
            "ActionName": "PutInstancePublicPorts",
            "FullActionName": "lightsail::PutInstancePublicPorts"
          },
          {
            "ActionName": "RebootInstance",
            "FullActionName": "lightsail::RebootInstance"
          },
          {
            "ActionName": "RebootRelationalDatabase",
            "FullActionName": "lightsail::RebootRelationalDatabase"
          },
          {
            "ActionName": "ReleaseStaticIp",
            "FullActionName": "lightsail::ReleaseStaticIp"
          },
          {
            "ActionName": "StartInstance",
            "FullActionName": "lightsail::StartInstance"
          },
          {
            "ActionName": "StartRelationalDatabase",
            "FullActionName": "lightsail::StartRelationalDatabase"
          },
          {
            "ActionName": "StopInstance",
            "FullActionName": "lightsail::StopInstance"
          },
          {
            "ActionName": "StopRelationalDatabase",
            "FullActionName": "lightsail::StopRelationalDatabase"
          },
          {
            "ActionName": "TagResource",
            "FullActionName": "lightsail::TagResource"
          },
          {
            "ActionName": "UnpeerVpc",
            "FullActionName": "lightsail::UnpeerVpc"
          },
          {
            "ActionName": "UntagResource",
            "FullActionName": "lightsail::UntagResource"
          },
          {
            "ActionName": "UpdateDomainEntry",
            "FullActionName": "lightsail::UpdateDomainEntry"
          },
          {
            "ActionName": "UpdateLoadBalancerAttribute",
            "FullActionName": "lightsail::UpdateLoadBalancerAttribute"
          },
          {
            "ActionName": "UpdateRelationalDatabase",
            "FullActionName": "lightsail::UpdateRelationalDatabase"
          },
          {
            "ActionName": "UpdateRelationalDatabaseParameters",
            "FullActionName": "lightsail::UpdateRelationalDatabaseParameters"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "CreateCloudFormationStack",
            "FullActionName": "lightsail::CreateCloudFormationStack"
          },
          {
            "ActionName": "GetBlueprints",
            "FullActionName": "lightsail::GetBlueprints"
          },
          {
            "ActionName": "GetBundles",
            "FullActionName": "lightsail::GetBundles"
          },
          {
            "ActionName": "GetCloudFormationStackRecords",
            "FullActionName": "lightsail::GetCloudFormationStackRecords"
          },
          {
            "ActionName": "GetDiskSnapshots",
            "FullActionName": "lightsail::GetDiskSnapshots"
          },
          {
            "ActionName": "GetDisks",
            "FullActionName": "lightsail::GetDisks"
          },
          {
            "ActionName": "GetDomain",
            "FullActionName": "lightsail::GetDomain"
          },
          {
            "ActionName": "GetExportSnapshotRecords",
            "FullActionName": "lightsail::GetExportSnapshotRecords"
          },
          {
            "ActionName": "GetInstanceSnapshots",
            "FullActionName": "lightsail::GetInstanceSnapshots"
          },
          {
            "ActionName": "GetInstances",
            "FullActionName": "lightsail::GetInstances"
          },
          {
            "ActionName": "GetKeyPair",
            "FullActionName": "lightsail::GetKeyPair"
          },
          {
            "ActionName": "GetLoadBalancerTlsCertificates",
            "FullActionName": "lightsail::GetLoadBalancerTlsCertificates"
          },
          {
            "ActionName": "GetLoadBalancers",
            "FullActionName": "lightsail::GetLoadBalancers"
          },
          {
            "ActionName": "GetRegions",
            "FullActionName": "lightsail::GetRegions"
          },
          {
            "ActionName": "GetRelationalDatabase",
            "FullActionName": "lightsail::GetRelationalDatabase"
          },
          {
            "ActionName": "GetRelationalDatabaseBlueprints",
            "FullActionName": "lightsail::GetRelationalDatabaseBlueprints"
          },
          {
            "ActionName": "GetRelationalDatabaseBundles",
            "FullActionName": "lightsail::GetRelationalDatabaseBundles"
          },
          {
            "ActionName": "GetRelationalDatabaseEvents",
            "FullActionName": "lightsail::GetRelationalDatabaseEvents"
          },
          {
            "ActionName": "GetRelationalDatabaseLogEvents",
            "FullActionName": "lightsail::GetRelationalDatabaseLogEvents"
          },
          {
            "ActionName": "GetRelationalDatabaseLogStreams",
            "FullActionName": "lightsail::GetRelationalDatabaseLogStreams"
          },
          {
            "ActionName": "GetRelationalDatabaseMetricData",
            "FullActionName": "lightsail::GetRelationalDatabaseMetricData"
          },
          {
            "ActionName": "GetRelationalDatabaseParameters",
            "FullActionName": "lightsail::GetRelationalDatabaseParameters"
          },
          {
            "ActionName": "GetRelationalDatabaseSnapshot",
            "FullActionName": "lightsail::GetRelationalDatabaseSnapshot"
          },
          {
            "ActionName": "GetRelationalDatabaseSnapshots",
            "FullActionName": "lightsail::GetRelationalDatabaseSnapshots"
          },
          {
            "ActionName": "GetRelationalDatabases",
            "FullActionName": "lightsail::GetRelationalDatabases"
          },
          {
            "ActionName": "GetStaticIps",
            "FullActionName": "lightsail::GetStaticIps"
          },
          {
            "ActionName": "IsVpcPeered",
            "FullActionName": "lightsail::IsVpcPeered"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "GetActiveNames",
            "FullActionName": "lightsail::GetActiveNames"
          },
          {
            "ActionName": "GetDisk",
            "FullActionName": "lightsail::GetDisk"
          },
          {
            "ActionName": "GetDiskSnapshot",
            "FullActionName": "lightsail::GetDiskSnapshot"
          },
          {
            "ActionName": "GetDomains",
            "FullActionName": "lightsail::GetDomains"
          },
          {
            "ActionName": "GetInstance",
            "FullActionName": "lightsail::GetInstance"
          },
          {
            "ActionName": "GetInstanceMetricData",
            "FullActionName": "lightsail::GetInstanceMetricData"
          },
          {
            "ActionName": "GetInstancePortStates",
            "FullActionName": "lightsail::GetInstancePortStates"
          },
          {
            "ActionName": "GetInstanceSnapshot",
            "FullActionName": "lightsail::GetInstanceSnapshot"
          },
          {
            "ActionName": "GetInstanceState",
            "FullActionName": "lightsail::GetInstanceState"
          },
          {
            "ActionName": "GetKeyPairs",
            "FullActionName": "lightsail::GetKeyPairs"
          },
          {
            "ActionName": "GetLoadBalancer",
            "FullActionName": "lightsail::GetLoadBalancer"
          },
          {
            "ActionName": "GetLoadBalancerMetricData",
            "FullActionName": "lightsail::GetLoadBalancerMetricData"
          },
          {
            "ActionName": "GetOperation",
            "FullActionName": "lightsail::GetOperation"
          },
          {
            "ActionName": "GetOperations",
            "FullActionName": "lightsail::GetOperations"
          },
          {
            "ActionName": "GetOperationsForResource",
            "FullActionName": "lightsail::GetOperationsForResource"
          },
          {
            "ActionName": "GetStaticIp",
            "FullActionName": "lightsail::GetStaticIp"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "MQ",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "CreateBroker",
            "FullActionName": "mq::CreateBroker"
          },
          {
            "ActionName": "CreateConfiguration",
            "FullActionName": "mq::CreateConfiguration"
          },
          {
            "ActionName": "CreateTags",
            "FullActionName": "mq::CreateTags"
          },
          {
            "ActionName": "CreateUser",
            "FullActionName": "mq::CreateUser"
          },
          {
            "ActionName": "DeleteBroker",
            "FullActionName": "mq::DeleteBroker"
          },
          {
            "ActionName": "DeleteTags",
            "FullActionName": "mq::DeleteTags"
          },
          {
            "ActionName": "DeleteUser",
            "FullActionName": "mq::DeleteUser"
          },
          {
            "ActionName": "RebootBroker",
            "FullActionName": "mq::RebootBroker"
          },
          {
            "ActionName": "UpdateBroker",
            "FullActionName": "mq::UpdateBroker"
          },
          {
            "ActionName": "UpdateConfiguration",
            "FullActionName": "mq::UpdateConfiguration"
          },
          {
            "ActionName": "UpdateUser",
            "FullActionName": "mq::UpdateUser"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeBroker",
            "FullActionName": "mq::DescribeBroker"
          },
          {
            "ActionName": "DescribeBrokerEngineTypes",
            "FullActionName": "mq::DescribeBrokerEngineTypes"
          },
          {
            "ActionName": "DescribeBrokerInstanceOptions",
            "FullActionName": "mq::DescribeBrokerInstanceOptions"
          },
          {
            "ActionName": "DescribeConfiguration",
            "FullActionName": "mq::DescribeConfiguration"
          },
          {
            "ActionName": "DescribeConfigurationRevision",
            "FullActionName": "mq::DescribeConfigurationRevision"
          },
          {
            "ActionName": "DescribeUser",
            "FullActionName": "mq::DescribeUser"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListBrokers",
            "FullActionName": "mq::ListBrokers"
          },
          {
            "ActionName": "ListConfigurationRevisions",
            "FullActionName": "mq::ListConfigurationRevisions"
          },
          {
            "ActionName": "ListConfigurations",
            "FullActionName": "mq::ListConfigurations"
          },
          {
            "ActionName": "ListTags",
            "FullActionName": "mq::ListTags"
          },
          {
            "ActionName": "ListUsers",
            "FullActionName": "mq::ListUsers"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "MSK",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "CreateCluster",
            "FullActionName": "kafka::CreateCluster"
          },
          {
            "ActionName": "CreateConfiguration",
            "FullActionName": "kafka::CreateConfiguration"
          },
          {
            "ActionName": "DeleteCluster",
            "FullActionName": "kafka::DeleteCluster"
          },
          {
            "ActionName": "UpdateBrokerStorage",
            "FullActionName": "kafka::UpdateBrokerStorage"
          },
          {
            "ActionName": "UpdateClusterConfiguration",
            "FullActionName": "kafka::UpdateClusterConfiguration"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeCluster",
            "FullActionName": "kafka::DescribeCluster"
          },
          {
            "ActionName": "DescribeClusterOperation",
            "FullActionName": "kafka::DescribeClusterOperation"
          },
          {
            "ActionName": "DescribeConfiguration",
            "FullActionName": "kafka::DescribeConfiguration"
          },
          {
            "ActionName": "DescribeConfigurationRevision",
            "FullActionName": "kafka::DescribeConfigurationRevision"
          },
          {
            "ActionName": "GetBootstrapBrokers",
            "FullActionName": "kafka::GetBootstrapBrokers"
          },
          {
            "ActionName": "ListClusterOperations",
            "FullActionName": "kafka::ListClusterOperations"
          },
          {
            "ActionName": "ListTagsForResource",
            "FullActionName": "kafka::ListTagsForResource"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListClusters",
            "FullActionName": "kafka::ListClusters"
          },
          {
            "ActionName": "ListConfigurations",
            "FullActionName": "kafka::ListConfigurations"
          },
          {
            "ActionName": "ListNodes",
            "FullActionName": "kafka::ListNodes"
          }
        ]
      },
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "TagResource",
            "FullActionName": "kafka::TagResource"
          },
          {
            "ActionName": "UntagResource",
            "FullActionName": "kafka::UntagResource"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Machine Learning",
    "AccessLevels": [
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "AddTags",
            "FullActionName": "machinelearning::AddTags"
          },
          {
            "ActionName": "DeleteTags",
            "FullActionName": "machinelearning::DeleteTags"
          }
        ]
      },
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "CreateBatchPrediction",
            "FullActionName": "machinelearning::CreateBatchPrediction"
          },
          {
            "ActionName": "CreateDataSourceFromRDS",
            "FullActionName": "machinelearning::CreateDataSourceFromRDS"
          },
          {
            "ActionName": "CreateDataSourceFromRedshift",
            "FullActionName": "machinelearning::CreateDataSourceFromRedshift"
          },
          {
            "ActionName": "CreateDataSourceFromS3",
            "FullActionName": "machinelearning::CreateDataSourceFromS3"
          },
          {
            "ActionName": "CreateEvaluation",
            "FullActionName": "machinelearning::CreateEvaluation"
          },
          {
            "ActionName": "CreateMLModel",
            "FullActionName": "machinelearning::CreateMLModel"
          },
          {
            "ActionName": "CreateRealtimeEndpoint",
            "FullActionName": "machinelearning::CreateRealtimeEndpoint"
          },
          {
            "ActionName": "DeleteBatchPrediction",
            "FullActionName": "machinelearning::DeleteBatchPrediction"
          },
          {
            "ActionName": "DeleteDataSource",
            "FullActionName": "machinelearning::DeleteDataSource"
          },
          {
            "ActionName": "DeleteEvaluation",
            "FullActionName": "machinelearning::DeleteEvaluation"
          },
          {
            "ActionName": "DeleteMLModel",
            "FullActionName": "machinelearning::DeleteMLModel"
          },
          {
            "ActionName": "DeleteRealtimeEndpoint",
            "FullActionName": "machinelearning::DeleteRealtimeEndpoint"
          },
          {
            "ActionName": "Predict",
            "FullActionName": "machinelearning::Predict"
          },
          {
            "ActionName": "UpdateBatchPrediction",
            "FullActionName": "machinelearning::UpdateBatchPrediction"
          },
          {
            "ActionName": "UpdateDataSource",
            "FullActionName": "machinelearning::UpdateDataSource"
          },
          {
            "ActionName": "UpdateEvaluation",
            "FullActionName": "machinelearning::UpdateEvaluation"
          },
          {
            "ActionName": "UpdateMLModel",
            "FullActionName": "machinelearning::UpdateMLModel"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "DescribeBatchPredictions",
            "FullActionName": "machinelearning::DescribeBatchPredictions"
          },
          {
            "ActionName": "DescribeDataSources",
            "FullActionName": "machinelearning::DescribeDataSources"
          },
          {
            "ActionName": "DescribeEvaluations",
            "FullActionName": "machinelearning::DescribeEvaluations"
          },
          {
            "ActionName": "DescribeMLModels",
            "FullActionName": "machinelearning::DescribeMLModels"
          },
          {
            "ActionName": "DescribeTags",
            "FullActionName": "machinelearning::DescribeTags"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "GetBatchPrediction",
            "FullActionName": "machinelearning::GetBatchPrediction"
          },
          {
            "ActionName": "GetDataSource",
            "FullActionName": "machinelearning::GetDataSource"
          },
          {
            "ActionName": "GetEvaluation",
            "FullActionName": "machinelearning::GetEvaluation"
          },
          {
            "ActionName": "GetMLModel",
            "FullActionName": "machinelearning::GetMLModel"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Macie",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "AssociateMemberAccount",
            "FullActionName": "macie::AssociateMemberAccount"
          },
          {
            "ActionName": "AssociateS3Resources",
            "FullActionName": "macie::AssociateS3Resources"
          },
          {
            "ActionName": "DisassociateMemberAccount",
            "FullActionName": "macie::DisassociateMemberAccount"
          },
          {
            "ActionName": "DisassociateS3Resources",
            "FullActionName": "macie::DisassociateS3Resources"
          },
          {
            "ActionName": "UpdateS3Resources",
            "FullActionName": "macie::UpdateS3Resources"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListMemberAccounts",
            "FullActionName": "macie::ListMemberAccounts"
          },
          {
            "ActionName": "ListS3Resources",
            "FullActionName": "macie::ListS3Resources"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Managed Blockchain",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "CreateMember",
            "FullActionName": "managedblockchain::CreateMember"
          },
          {
            "ActionName": "CreateNetwork",
            "FullActionName": "managedblockchain::CreateNetwork"
          },
          {
            "ActionName": "CreateNode",
            "FullActionName": "managedblockchain::CreateNode"
          },
          {
            "ActionName": "CreateProposal",
            "FullActionName": "managedblockchain::CreateProposal"
          },
          {
            "ActionName": "DeleteMember",
            "FullActionName": "managedblockchain::DeleteMember"
          },
          {
            "ActionName": "DeleteNode",
            "FullActionName": "managedblockchain::DeleteNode"
          },
          {
            "ActionName": "RejectInvitation",
            "FullActionName": "managedblockchain::RejectInvitation"
          },
          {
            "ActionName": "VoteOnProposal",
            "FullActionName": "managedblockchain::VoteOnProposal"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "GetMember",
            "FullActionName": "managedblockchain::GetMember"
          },
          {
            "ActionName": "GetNetwork",
            "FullActionName": "managedblockchain::GetNetwork"
          },
          {
            "ActionName": "GetNode",
            "FullActionName": "managedblockchain::GetNode"
          },
          {
            "ActionName": "GetProposal",
            "FullActionName": "managedblockchain::GetProposal"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListInvitations",
            "FullActionName": "managedblockchain::ListInvitations"
          },
          {
            "ActionName": "ListMembers",
            "FullActionName": "managedblockchain::ListMembers"
          },
          {
            "ActionName": "ListNetworks",
            "FullActionName": "managedblockchain::ListNetworks"
          },
          {
            "ActionName": "ListNodes",
            "FullActionName": "managedblockchain::ListNodes"
          },
          {
            "ActionName": "ListProposalVotes",
            "FullActionName": "managedblockchain::ListProposalVotes"
          },
          {
            "ActionName": "ListProposals",
            "FullActionName": "managedblockchain::ListProposals"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Marketplace Portal",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "uploadFiles",
            "FullActionName": "aws-marketplace-management::uploadFiles"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "viewMarketing",
            "FullActionName": "aws-marketplace-management::viewMarketing"
          },
          {
            "ActionName": "viewReports",
            "FullActionName": "aws-marketplace-management::viewReports"
          },
          {
            "ActionName": "viewSettings",
            "FullActionName": "aws-marketplace-management::viewSettings"
          },
          {
            "ActionName": "viewSupport",
            "FullActionName": "aws-marketplace-management::viewSupport"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "MechanicalTurk",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "AcceptQualificationRequest",
            "FullActionName": "mechanicalturk::AcceptQualificationRequest"
          },
          {
            "ActionName": "ApproveAssignment",
            "FullActionName": "mechanicalturk::ApproveAssignment"
          },
          {
            "ActionName": "AssociateQualificationWithWorker",
            "FullActionName": "mechanicalturk::AssociateQualificationWithWorker"
          },
          {
            "ActionName": "CreateAdditionalAssignmentsForHIT",
            "FullActionName": "mechanicalturk::CreateAdditionalAssignmentsForHIT"
          },
          {
            "ActionName": "CreateHIT",
            "FullActionName": "mechanicalturk::CreateHIT"
          },
          {
            "ActionName": "CreateHITType",
            "FullActionName": "mechanicalturk::CreateHITType"
          },
          {
            "ActionName": "CreateHITWithHITType",
            "FullActionName": "mechanicalturk::CreateHITWithHITType"
          },
          {
            "ActionName": "CreateQualificationType",
            "FullActionName": "mechanicalturk::CreateQualificationType"
          },
          {
            "ActionName": "CreateWorkerBlock",
            "FullActionName": "mechanicalturk::CreateWorkerBlock"
          },
          {
            "ActionName": "DeleteHIT",
            "FullActionName": "mechanicalturk::DeleteHIT"
          },
          {
            "ActionName": "DeleteQualificationType",
            "FullActionName": "mechanicalturk::DeleteQualificationType"
          },
          {
            "ActionName": "DeleteWorkerBlock",
            "FullActionName": "mechanicalturk::DeleteWorkerBlock"
          },
          {
            "ActionName": "DisassociateQualificationFromWorker",
            "FullActionName": "mechanicalturk::DisassociateQualificationFromWorker"
          },
          {
            "ActionName": "NotifyWorkers",
            "FullActionName": "mechanicalturk::NotifyWorkers"
          },
          {
            "ActionName": "RejectAssignment",
            "FullActionName": "mechanicalturk::RejectAssignment"
          },
          {
            "ActionName": "RejectQualificationRequest",
            "FullActionName": "mechanicalturk::RejectQualificationRequest"
          },
          {
            "ActionName": "SendBonus",
            "FullActionName": "mechanicalturk::SendBonus"
          },
          {
            "ActionName": "SendTestEventNotification",
            "FullActionName": "mechanicalturk::SendTestEventNotification"
          },
          {
            "ActionName": "UpdateExpirationForHIT",
            "FullActionName": "mechanicalturk::UpdateExpirationForHIT"
          },
          {
            "ActionName": "UpdateHITReviewStatus",
            "FullActionName": "mechanicalturk::UpdateHITReviewStatus"
          },
          {
            "ActionName": "UpdateHITTypeOfHIT",
            "FullActionName": "mechanicalturk::UpdateHITTypeOfHIT"
          },
          {
            "ActionName": "UpdateNotificationSettings",
            "FullActionName": "mechanicalturk::UpdateNotificationSettings"
          },
          {
            "ActionName": "UpdateQualificationType",
            "FullActionName": "mechanicalturk::UpdateQualificationType"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "GetAccountBalance",
            "FullActionName": "mechanicalturk::GetAccountBalance"
          },
          {
            "ActionName": "GetAssignment",
            "FullActionName": "mechanicalturk::GetAssignment"
          },
          {
            "ActionName": "GetFileUploadURL",
            "FullActionName": "mechanicalturk::GetFileUploadURL"
          },
          {
            "ActionName": "GetHIT",
            "FullActionName": "mechanicalturk::GetHIT"
          },
          {
            "ActionName": "GetQualificationScore",
            "FullActionName": "mechanicalturk::GetQualificationScore"
          },
          {
            "ActionName": "GetQualificationType",
            "FullActionName": "mechanicalturk::GetQualificationType"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListAssignmentsForHIT",
            "FullActionName": "mechanicalturk::ListAssignmentsForHIT"
          },
          {
            "ActionName": "ListBonusPayments",
            "FullActionName": "mechanicalturk::ListBonusPayments"
          },
          {
            "ActionName": "ListHITs",
            "FullActionName": "mechanicalturk::ListHITs"
          },
          {
            "ActionName": "ListHITsForQualificationType",
            "FullActionName": "mechanicalturk::ListHITsForQualificationType"
          },
          {
            "ActionName": "ListQualificationRequests",
            "FullActionName": "mechanicalturk::ListQualificationRequests"
          },
          {
            "ActionName": "ListQualificationTypes",
            "FullActionName": "mechanicalturk::ListQualificationTypes"
          },
          {
            "ActionName": "ListReviewPolicyResultsForHIT",
            "FullActionName": "mechanicalturk::ListReviewPolicyResultsForHIT"
          },
          {
            "ActionName": "ListReviewableHITs",
            "FullActionName": "mechanicalturk::ListReviewableHITs"
          },
          {
            "ActionName": "ListWorkerBlocks",
            "FullActionName": "mechanicalturk::ListWorkerBlocks"
          },
          {
            "ActionName": "ListWorkersWithQualificationType",
            "FullActionName": "mechanicalturk::ListWorkersWithQualificationType"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "MediaConnect",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "AddFlowOutputs",
            "FullActionName": "mediaconnect::AddFlowOutputs"
          },
          {
            "ActionName": "CreateFlow",
            "FullActionName": "mediaconnect::CreateFlow"
          },
          {
            "ActionName": "DeleteFlow",
            "FullActionName": "mediaconnect::DeleteFlow"
          },
          {
            "ActionName": "GrantFlowEntitlements",
            "FullActionName": "mediaconnect::GrantFlowEntitlements"
          },
          {
            "ActionName": "RemoveFlowOutput",
            "FullActionName": "mediaconnect::RemoveFlowOutput"
          },
          {
            "ActionName": "RevokeFlowEntitlement",
            "FullActionName": "mediaconnect::RevokeFlowEntitlement"
          },
          {
            "ActionName": "StartFlow",
            "FullActionName": "mediaconnect::StartFlow"
          },
          {
            "ActionName": "StopFlow",
            "FullActionName": "mediaconnect::StopFlow"
          },
          {
            "ActionName": "UpdateFlowEntitlement",
            "FullActionName": "mediaconnect::UpdateFlowEntitlement"
          },
          {
            "ActionName": "UpdateFlowOutput",
            "FullActionName": "mediaconnect::UpdateFlowOutput"
          },
          {
            "ActionName": "UpdateFlowSource",
            "FullActionName": "mediaconnect::UpdateFlowSource"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeFlow",
            "FullActionName": "mediaconnect::DescribeFlow"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListEntitlements",
            "FullActionName": "mediaconnect::ListEntitlements"
          },
          {
            "ActionName": "ListFlows",
            "FullActionName": "mediaconnect::ListFlows"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "MediaConvert",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "AssociateCertificate",
            "FullActionName": "mediaconvert::AssociateCertificate"
          },
          {
            "ActionName": "CancelJob",
            "FullActionName": "mediaconvert::CancelJob"
          },
          {
            "ActionName": "CreateJob",
            "FullActionName": "mediaconvert::CreateJob"
          },
          {
            "ActionName": "CreateJobTemplate",
            "FullActionName": "mediaconvert::CreateJobTemplate"
          },
          {
            "ActionName": "CreatePreset",
            "FullActionName": "mediaconvert::CreatePreset"
          },
          {
            "ActionName": "CreateQueue",
            "FullActionName": "mediaconvert::CreateQueue"
          },
          {
            "ActionName": "DeleteJobTemplate",
            "FullActionName": "mediaconvert::DeleteJobTemplate"
          },
          {
            "ActionName": "DeletePreset",
            "FullActionName": "mediaconvert::DeletePreset"
          },
          {
            "ActionName": "DeleteQueue",
            "FullActionName": "mediaconvert::DeleteQueue"
          },
          {
            "ActionName": "DisassociateCertificate",
            "FullActionName": "mediaconvert::DisassociateCertificate"
          },
          {
            "ActionName": "UpdateJobTemplate",
            "FullActionName": "mediaconvert::UpdateJobTemplate"
          },
          {
            "ActionName": "UpdatePreset",
            "FullActionName": "mediaconvert::UpdatePreset"
          },
          {
            "ActionName": "UpdateQueue",
            "FullActionName": "mediaconvert::UpdateQueue"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "DescribeEndpoints",
            "FullActionName": "mediaconvert::DescribeEndpoints"
          },
          {
            "ActionName": "ListJobTemplates",
            "FullActionName": "mediaconvert::ListJobTemplates"
          },
          {
            "ActionName": "ListJobs",
            "FullActionName": "mediaconvert::ListJobs"
          },
          {
            "ActionName": "ListPresets",
            "FullActionName": "mediaconvert::ListPresets"
          },
          {
            "ActionName": "ListQueues",
            "FullActionName": "mediaconvert::ListQueues"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "GetJob",
            "FullActionName": "mediaconvert::GetJob"
          },
          {
            "ActionName": "GetJobTemplate",
            "FullActionName": "mediaconvert::GetJobTemplate"
          },
          {
            "ActionName": "GetPreset",
            "FullActionName": "mediaconvert::GetPreset"
          },
          {
            "ActionName": "GetQueue",
            "FullActionName": "mediaconvert::GetQueue"
          },
          {
            "ActionName": "ListTagsForResource",
            "FullActionName": "mediaconvert::ListTagsForResource"
          }
        ]
      },
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "TagResource",
            "FullActionName": "mediaconvert::TagResource"
          },
          {
            "ActionName": "UntagResource",
            "FullActionName": "mediaconvert::UntagResource"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "MediaLive",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "BatchUpdateSchedule",
            "FullActionName": "medialive::BatchUpdateSchedule"
          },
          {
            "ActionName": "DeleteChannel",
            "FullActionName": "medialive::DeleteChannel"
          },
          {
            "ActionName": "DeleteInput",
            "FullActionName": "medialive::DeleteInput"
          },
          {
            "ActionName": "DeleteInputSecurityGroup",
            "FullActionName": "medialive::DeleteInputSecurityGroup"
          },
          {
            "ActionName": "DeleteReservation",
            "FullActionName": "medialive::DeleteReservation"
          },
          {
            "ActionName": "StartChannel",
            "FullActionName": "medialive::StartChannel"
          },
          {
            "ActionName": "StopChannel",
            "FullActionName": "medialive::StopChannel"
          },
          {
            "ActionName": "UpdateChannel",
            "FullActionName": "medialive::UpdateChannel"
          },
          {
            "ActionName": "UpdateChannelClass",
            "FullActionName": "medialive::UpdateChannelClass"
          },
          {
            "ActionName": "UpdateInput",
            "FullActionName": "medialive::UpdateInput"
          },
          {
            "ActionName": "UpdateInputSecurityGroup",
            "FullActionName": "medialive::UpdateInputSecurityGroup"
          },
          {
            "ActionName": "UpdateReservation",
            "FullActionName": "medialive::UpdateReservation"
          }
        ]
      },
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "CreateChannel",
            "FullActionName": "medialive::CreateChannel"
          },
          {
            "ActionName": "CreateInput",
            "FullActionName": "medialive::CreateInput"
          },
          {
            "ActionName": "CreateInputSecurityGroup",
            "FullActionName": "medialive::CreateInputSecurityGroup"
          },
          {
            "ActionName": "CreateTags",
            "FullActionName": "medialive::CreateTags"
          },
          {
            "ActionName": "DeleteTags",
            "FullActionName": "medialive::DeleteTags"
          },
          {
            "ActionName": "PurchaseOffering",
            "FullActionName": "medialive::PurchaseOffering"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeChannel",
            "FullActionName": "medialive::DescribeChannel"
          },
          {
            "ActionName": "DescribeInput",
            "FullActionName": "medialive::DescribeInput"
          },
          {
            "ActionName": "DescribeInputSecurityGroup",
            "FullActionName": "medialive::DescribeInputSecurityGroup"
          },
          {
            "ActionName": "DescribeOffering",
            "FullActionName": "medialive::DescribeOffering"
          },
          {
            "ActionName": "DescribeReservation",
            "FullActionName": "medialive::DescribeReservation"
          },
          {
            "ActionName": "DescribeSchedule",
            "FullActionName": "medialive::DescribeSchedule"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListChannels",
            "FullActionName": "medialive::ListChannels"
          },
          {
            "ActionName": "ListInputSecurityGroups",
            "FullActionName": "medialive::ListInputSecurityGroups"
          },
          {
            "ActionName": "ListInputs",
            "FullActionName": "medialive::ListInputs"
          },
          {
            "ActionName": "ListOfferings",
            "FullActionName": "medialive::ListOfferings"
          },
          {
            "ActionName": "ListReservations",
            "FullActionName": "medialive::ListReservations"
          },
          {
            "ActionName": "ListTagsForResource",
            "FullActionName": "medialive::ListTagsForResource"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "MediaPackage",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "CreateChannel",
            "FullActionName": "mediapackage::CreateChannel"
          },
          {
            "ActionName": "CreateOriginEndpoint",
            "FullActionName": "mediapackage::CreateOriginEndpoint"
          },
          {
            "ActionName": "DeleteChannel",
            "FullActionName": "mediapackage::DeleteChannel"
          },
          {
            "ActionName": "DeleteOriginEndpoint",
            "FullActionName": "mediapackage::DeleteOriginEndpoint"
          },
          {
            "ActionName": "RotateIngestEndpointCredentials",
            "FullActionName": "mediapackage::RotateIngestEndpointCredentials"
          },
          {
            "ActionName": "TagResource",
            "FullActionName": "mediapackage::TagResource"
          },
          {
            "ActionName": "UntagResource",
            "FullActionName": "mediapackage::UntagResource"
          },
          {
            "ActionName": "UpdateChannel",
            "FullActionName": "mediapackage::UpdateChannel"
          },
          {
            "ActionName": "UpdateOriginEndpoint",
            "FullActionName": "mediapackage::UpdateOriginEndpoint"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeChannel",
            "FullActionName": "mediapackage::DescribeChannel"
          },
          {
            "ActionName": "DescribeOriginEndpoint",
            "FullActionName": "mediapackage::DescribeOriginEndpoint"
          },
          {
            "ActionName": "ListChannels",
            "FullActionName": "mediapackage::ListChannels"
          },
          {
            "ActionName": "ListOriginEndpoints",
            "FullActionName": "mediapackage::ListOriginEndpoints"
          },
          {
            "ActionName": "ListTagsForResource",
            "FullActionName": "mediapackage::ListTagsForResource"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "MediaPackage VOD",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "CreateAsset",
            "FullActionName": "mediapackage-vod::CreateAsset"
          },
          {
            "ActionName": "CreatePackagingConfiguration",
            "FullActionName": "mediapackage-vod::CreatePackagingConfiguration"
          },
          {
            "ActionName": "CreatePackagingGroup",
            "FullActionName": "mediapackage-vod::CreatePackagingGroup"
          },
          {
            "ActionName": "DeleteAsset",
            "FullActionName": "mediapackage-vod::DeleteAsset"
          },
          {
            "ActionName": "DeletePackagingConfiguration",
            "FullActionName": "mediapackage-vod::DeletePackagingConfiguration"
          },
          {
            "ActionName": "DeletePackagingGroup",
            "FullActionName": "mediapackage-vod::DeletePackagingGroup"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeAsset",
            "FullActionName": "mediapackage-vod::DescribeAsset"
          },
          {
            "ActionName": "DescribePackagingConfiguration",
            "FullActionName": "mediapackage-vod::DescribePackagingConfiguration"
          },
          {
            "ActionName": "DescribePackagingGroup",
            "FullActionName": "mediapackage-vod::DescribePackagingGroup"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListAssets",
            "FullActionName": "mediapackage-vod::ListAssets"
          },
          {
            "ActionName": "ListPackagingConfigurations",
            "FullActionName": "mediapackage-vod::ListPackagingConfigurations"
          },
          {
            "ActionName": "ListPackagingGroups",
            "FullActionName": "mediapackage-vod::ListPackagingGroups"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "MediaStore",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "CreateContainer",
            "FullActionName": "mediastore::CreateContainer"
          },
          {
            "ActionName": "DeleteContainer",
            "FullActionName": "mediastore::DeleteContainer"
          },
          {
            "ActionName": "DeleteCorsPolicy",
            "FullActionName": "mediastore::DeleteCorsPolicy"
          },
          {
            "ActionName": "DeleteLifecyclePolicy",
            "FullActionName": "mediastore::DeleteLifecyclePolicy"
          },
          {
            "ActionName": "DeleteObject",
            "FullActionName": "mediastore::DeleteObject"
          },
          {
            "ActionName": "PutCorsPolicy",
            "FullActionName": "mediastore::PutCorsPolicy"
          },
          {
            "ActionName": "PutLifecyclePolicy",
            "FullActionName": "mediastore::PutLifecyclePolicy"
          },
          {
            "ActionName": "PutObject",
            "FullActionName": "mediastore::PutObject"
          },
          {
            "ActionName": "StartAccessLogging",
            "FullActionName": "mediastore::StartAccessLogging"
          },
          {
            "ActionName": "StopAccessLogging",
            "FullActionName": "mediastore::StopAccessLogging"
          }
        ]
      },
      {
        "AccessLevel": "Permissions",
        "Actions": [
          {
            "ActionName": "DeleteContainerPolicy",
            "FullActionName": "mediastore::DeleteContainerPolicy"
          },
          {
            "ActionName": "PutContainerPolicy",
            "FullActionName": "mediastore::PutContainerPolicy"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "DescribeContainer",
            "FullActionName": "mediastore::DescribeContainer"
          },
          {
            "ActionName": "DescribeObject",
            "FullActionName": "mediastore::DescribeObject"
          },
          {
            "ActionName": "ListContainers",
            "FullActionName": "mediastore::ListContainers"
          },
          {
            "ActionName": "ListItems",
            "FullActionName": "mediastore::ListItems"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "GetContainerPolicy",
            "FullActionName": "mediastore::GetContainerPolicy"
          },
          {
            "ActionName": "GetCorsPolicy",
            "FullActionName": "mediastore::GetCorsPolicy"
          },
          {
            "ActionName": "GetLifecyclePolicy",
            "FullActionName": "mediastore::GetLifecyclePolicy"
          },
          {
            "ActionName": "GetObject",
            "FullActionName": "mediastore::GetObject"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "MediaTailor",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "DeletePlaybackConfiguration",
            "FullActionName": "mediatailor::DeletePlaybackConfiguration"
          },
          {
            "ActionName": "PutPlaybackConfiguration",
            "FullActionName": "mediatailor::PutPlaybackConfiguration"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "GetPlaybackConfiguration",
            "FullActionName": "mediatailor::GetPlaybackConfiguration"
          },
          {
            "ActionName": "ListTagsForResource",
            "FullActionName": "mediatailor::ListTagsForResource"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListPlaybackConfigurations",
            "FullActionName": "mediatailor::ListPlaybackConfigurations"
          }
        ]
      },
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "TagResource",
            "FullActionName": "mediatailor::TagResource"
          },
          {
            "ActionName": "UntagResource",
            "FullActionName": "mediatailor::UntagResource"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Migration Hub",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "AssociateCreatedArtifact",
            "FullActionName": "mgh::AssociateCreatedArtifact"
          },
          {
            "ActionName": "AssociateDiscoveredResource",
            "FullActionName": "mgh::AssociateDiscoveredResource"
          },
          {
            "ActionName": "CreateProgressUpdateStream",
            "FullActionName": "mgh::CreateProgressUpdateStream"
          },
          {
            "ActionName": "DeleteProgressUpdateStream",
            "FullActionName": "mgh::DeleteProgressUpdateStream"
          },
          {
            "ActionName": "DisassociateCreatedArtifact",
            "FullActionName": "mgh::DisassociateCreatedArtifact"
          },
          {
            "ActionName": "DisassociateDiscoveredResource",
            "FullActionName": "mgh::DisassociateDiscoveredResource"
          },
          {
            "ActionName": "ImportMigrationTask",
            "FullActionName": "mgh::ImportMigrationTask"
          },
          {
            "ActionName": "NotifyApplicationState",
            "FullActionName": "mgh::NotifyApplicationState"
          },
          {
            "ActionName": "NotifyMigrationTaskState",
            "FullActionName": "mgh::NotifyMigrationTaskState"
          },
          {
            "ActionName": "PutResourceAttributes",
            "FullActionName": "mgh::PutResourceAttributes"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeApplicationState",
            "FullActionName": "mgh::DescribeApplicationState"
          },
          {
            "ActionName": "DescribeMigrationTask",
            "FullActionName": "mgh::DescribeMigrationTask"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListCreatedArtifacts",
            "FullActionName": "mgh::ListCreatedArtifacts"
          },
          {
            "ActionName": "ListDiscoveredResources",
            "FullActionName": "mgh::ListDiscoveredResources"
          },
          {
            "ActionName": "ListMigrationTasks",
            "FullActionName": "mgh::ListMigrationTasks"
          },
          {
            "ActionName": "ListProgressUpdateStreams",
            "FullActionName": "mgh::ListProgressUpdateStreams"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Mobile Analytics",
    "AccessLevels": [
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "GetFinancialReports",
            "FullActionName": "mobileanalytics::GetFinancialReports"
          },
          {
            "ActionName": "GetReports",
            "FullActionName": "mobileanalytics::GetReports"
          }
        ]
      },
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "PutEvents",
            "FullActionName": "mobileanalytics::PutEvents"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Mobile Hub",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "CreateProject",
            "FullActionName": "mobilehub::CreateProject"
          },
          {
            "ActionName": "CreateServiceRole",
            "FullActionName": "mobilehub::CreateServiceRole"
          },
          {
            "ActionName": "DeleteProject",
            "FullActionName": "mobilehub::DeleteProject"
          },
          {
            "ActionName": "DeleteProjectSnapshot",
            "FullActionName": "mobilehub::DeleteProjectSnapshot"
          },
          {
            "ActionName": "DeployToStage",
            "FullActionName": "mobilehub::DeployToStage"
          },
          {
            "ActionName": "GenerateProjectParameters",
            "FullActionName": "mobilehub::GenerateProjectParameters"
          },
          {
            "ActionName": "ImportProject",
            "FullActionName": "mobilehub::ImportProject"
          },
          {
            "ActionName": "InstallBundle",
            "FullActionName": "mobilehub::InstallBundle"
          },
          {
            "ActionName": "SynchronizeProject",
            "FullActionName": "mobilehub::SynchronizeProject"
          },
          {
            "ActionName": "UpdateProject",
            "FullActionName": "mobilehub::UpdateProject"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeBundle",
            "FullActionName": "mobilehub::DescribeBundle"
          },
          {
            "ActionName": "ExportBundle",
            "FullActionName": "mobilehub::ExportBundle"
          },
          {
            "ActionName": "ExportProject",
            "FullActionName": "mobilehub::ExportProject"
          },
          {
            "ActionName": "GetProject",
            "FullActionName": "mobilehub::GetProject"
          },
          {
            "ActionName": "GetProjectSnapshot",
            "FullActionName": "mobilehub::GetProjectSnapshot"
          },
          {
            "ActionName": "VerifyServiceRole",
            "FullActionName": "mobilehub::VerifyServiceRole"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListAvailableConnectors",
            "FullActionName": "mobilehub::ListAvailableConnectors"
          },
          {
            "ActionName": "ListAvailableFeatures",
            "FullActionName": "mobilehub::ListAvailableFeatures"
          },
          {
            "ActionName": "ListAvailableRegions",
            "FullActionName": "mobilehub::ListAvailableRegions"
          },
          {
            "ActionName": "ListBundles",
            "FullActionName": "mobilehub::ListBundles"
          },
          {
            "ActionName": "ListProjectSnapshots",
            "FullActionName": "mobilehub::ListProjectSnapshots"
          },
          {
            "ActionName": "ListProjects",
            "FullActionName": "mobilehub::ListProjects"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Neptune",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "connect",
            "FullActionName": "neptune-db::connect"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "OpsWorks",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "AssignInstance",
            "FullActionName": "opsworks::AssignInstance"
          },
          {
            "ActionName": "AssignVolume",
            "FullActionName": "opsworks::AssignVolume"
          },
          {
            "ActionName": "AssociateElasticIp",
            "FullActionName": "opsworks::AssociateElasticIp"
          },
          {
            "ActionName": "AttachElasticLoadBalancer",
            "FullActionName": "opsworks::AttachElasticLoadBalancer"
          },
          {
            "ActionName": "CloneStack",
            "FullActionName": "opsworks::CloneStack"
          },
          {
            "ActionName": "CreateApp",
            "FullActionName": "opsworks::CreateApp"
          },
          {
            "ActionName": "CreateDeployment",
            "FullActionName": "opsworks::CreateDeployment"
          },
          {
            "ActionName": "CreateInstance",
            "FullActionName": "opsworks::CreateInstance"
          },
          {
            "ActionName": "CreateLayer",
            "FullActionName": "opsworks::CreateLayer"
          },
          {
            "ActionName": "CreateStack",
            "FullActionName": "opsworks::CreateStack"
          },
          {
            "ActionName": "CreateUserProfile",
            "FullActionName": "opsworks::CreateUserProfile"
          },
          {
            "ActionName": "DeleteApp",
            "FullActionName": "opsworks::DeleteApp"
          },
          {
            "ActionName": "DeleteInstance",
            "FullActionName": "opsworks::DeleteInstance"
          },
          {
            "ActionName": "DeleteLayer",
            "FullActionName": "opsworks::DeleteLayer"
          },
          {
            "ActionName": "DeleteStack",
            "FullActionName": "opsworks::DeleteStack"
          },
          {
            "ActionName": "DeleteUserProfile",
            "FullActionName": "opsworks::DeleteUserProfile"
          },
          {
            "ActionName": "DeregisterEcsCluster",
            "FullActionName": "opsworks::DeregisterEcsCluster"
          },
          {
            "ActionName": "DeregisterElasticIp",
            "FullActionName": "opsworks::DeregisterElasticIp"
          },
          {
            "ActionName": "DeregisterInstance",
            "FullActionName": "opsworks::DeregisterInstance"
          },
          {
            "ActionName": "DeregisterRdsDbInstance",
            "FullActionName": "opsworks::DeregisterRdsDbInstance"
          },
          {
            "ActionName": "DeregisterVolume",
            "FullActionName": "opsworks::DeregisterVolume"
          },
          {
            "ActionName": "DetachElasticLoadBalancer",
            "FullActionName": "opsworks::DetachElasticLoadBalancer"
          },
          {
            "ActionName": "DisassociateElasticIp",
            "FullActionName": "opsworks::DisassociateElasticIp"
          },
          {
            "ActionName": "GrantAccess",
            "FullActionName": "opsworks::GrantAccess"
          },
          {
            "ActionName": "RebootInstance",
            "FullActionName": "opsworks::RebootInstance"
          },
          {
            "ActionName": "RegisterEcsCluster",
            "FullActionName": "opsworks::RegisterEcsCluster"
          },
          {
            "ActionName": "RegisterElasticIp",
            "FullActionName": "opsworks::RegisterElasticIp"
          },
          {
            "ActionName": "RegisterInstance",
            "FullActionName": "opsworks::RegisterInstance"
          },
          {
            "ActionName": "RegisterRdsDbInstance",
            "FullActionName": "opsworks::RegisterRdsDbInstance"
          },
          {
            "ActionName": "RegisterVolume",
            "FullActionName": "opsworks::RegisterVolume"
          },
          {
            "ActionName": "SetLoadBasedAutoScaling",
            "FullActionName": "opsworks::SetLoadBasedAutoScaling"
          },
          {
            "ActionName": "SetTimeBasedAutoScaling",
            "FullActionName": "opsworks::SetTimeBasedAutoScaling"
          },
          {
            "ActionName": "StartInstance",
            "FullActionName": "opsworks::StartInstance"
          },
          {
            "ActionName": "StartStack",
            "FullActionName": "opsworks::StartStack"
          },
          {
            "ActionName": "StopInstance",
            "FullActionName": "opsworks::StopInstance"
          },
          {
            "ActionName": "StopStack",
            "FullActionName": "opsworks::StopStack"
          },
          {
            "ActionName": "TagResource",
            "FullActionName": "opsworks::TagResource"
          },
          {
            "ActionName": "UnassignInstance",
            "FullActionName": "opsworks::UnassignInstance"
          },
          {
            "ActionName": "UnassignVolume",
            "FullActionName": "opsworks::UnassignVolume"
          },
          {
            "ActionName": "UntagResource",
            "FullActionName": "opsworks::UntagResource"
          },
          {
            "ActionName": "UpdateApp",
            "FullActionName": "opsworks::UpdateApp"
          },
          {
            "ActionName": "UpdateElasticIp",
            "FullActionName": "opsworks::UpdateElasticIp"
          },
          {
            "ActionName": "UpdateInstance",
            "FullActionName": "opsworks::UpdateInstance"
          },
          {
            "ActionName": "UpdateLayer",
            "FullActionName": "opsworks::UpdateLayer"
          },
          {
            "ActionName": "UpdateMyUserProfile",
            "FullActionName": "opsworks::UpdateMyUserProfile"
          },
          {
            "ActionName": "UpdateRdsDbInstance",
            "FullActionName": "opsworks::UpdateRdsDbInstance"
          },
          {
            "ActionName": "UpdateStack",
            "FullActionName": "opsworks::UpdateStack"
          },
          {
            "ActionName": "UpdateVolume",
            "FullActionName": "opsworks::UpdateVolume"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "DescribeAgentVersions",
            "FullActionName": "opsworks::DescribeAgentVersions"
          },
          {
            "ActionName": "DescribeApps",
            "FullActionName": "opsworks::DescribeApps"
          },
          {
            "ActionName": "DescribeCommands",
            "FullActionName": "opsworks::DescribeCommands"
          },
          {
            "ActionName": "DescribeDeployments",
            "FullActionName": "opsworks::DescribeDeployments"
          },
          {
            "ActionName": "DescribeEcsClusters",
            "FullActionName": "opsworks::DescribeEcsClusters"
          },
          {
            "ActionName": "DescribeElasticIps",
            "FullActionName": "opsworks::DescribeElasticIps"
          },
          {
            "ActionName": "DescribeElasticLoadBalancers",
            "FullActionName": "opsworks::DescribeElasticLoadBalancers"
          },
          {
            "ActionName": "DescribeInstances",
            "FullActionName": "opsworks::DescribeInstances"
          },
          {
            "ActionName": "DescribeLayers",
            "FullActionName": "opsworks::DescribeLayers"
          },
          {
            "ActionName": "DescribeLoadBasedAutoScaling",
            "FullActionName": "opsworks::DescribeLoadBasedAutoScaling"
          },
          {
            "ActionName": "DescribeMyUserProfile",
            "FullActionName": "opsworks::DescribeMyUserProfile"
          },
          {
            "ActionName": "DescribePermissions",
            "FullActionName": "opsworks::DescribePermissions"
          },
          {
            "ActionName": "DescribeRaidArrays",
            "FullActionName": "opsworks::DescribeRaidArrays"
          },
          {
            "ActionName": "DescribeRdsDbInstances",
            "FullActionName": "opsworks::DescribeRdsDbInstances"
          },
          {
            "ActionName": "DescribeServiceErrors",
            "FullActionName": "opsworks::DescribeServiceErrors"
          },
          {
            "ActionName": "DescribeStackProvisioningParameters",
            "FullActionName": "opsworks::DescribeStackProvisioningParameters"
          },
          {
            "ActionName": "DescribeStackSummary",
            "FullActionName": "opsworks::DescribeStackSummary"
          },
          {
            "ActionName": "DescribeStacks",
            "FullActionName": "opsworks::DescribeStacks"
          },
          {
            "ActionName": "DescribeTimeBasedAutoScaling",
            "FullActionName": "opsworks::DescribeTimeBasedAutoScaling"
          },
          {
            "ActionName": "DescribeUserProfiles",
            "FullActionName": "opsworks::DescribeUserProfiles"
          },
          {
            "ActionName": "DescribeVolumes",
            "FullActionName": "opsworks::DescribeVolumes"
          },
          {
            "ActionName": "ListTags",
            "FullActionName": "opsworks::ListTags"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "GetHostnameSuggestion",
            "FullActionName": "opsworks::GetHostnameSuggestion"
          }
        ]
      },
      {
        "AccessLevel": "Permissions",
        "Actions": [
          {
            "ActionName": "SetPermission",
            "FullActionName": "opsworks::SetPermission"
          },
          {
            "ActionName": "UpdateUserProfile",
            "FullActionName": "opsworks::UpdateUserProfile"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "OpsworksCM",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "AssociateNode",
            "FullActionName": "opsworks-cm::AssociateNode"
          },
          {
            "ActionName": "CreateBackup",
            "FullActionName": "opsworks-cm::CreateBackup"
          },
          {
            "ActionName": "CreateServer",
            "FullActionName": "opsworks-cm::CreateServer"
          },
          {
            "ActionName": "DeleteBackup",
            "FullActionName": "opsworks-cm::DeleteBackup"
          },
          {
            "ActionName": "DeleteServer",
            "FullActionName": "opsworks-cm::DeleteServer"
          },
          {
            "ActionName": "DisassociateNode",
            "FullActionName": "opsworks-cm::DisassociateNode"
          },
          {
            "ActionName": "RestoreServer",
            "FullActionName": "opsworks-cm::RestoreServer"
          },
          {
            "ActionName": "StartMaintenance",
            "FullActionName": "opsworks-cm::StartMaintenance"
          },
          {
            "ActionName": "UpdateServer",
            "FullActionName": "opsworks-cm::UpdateServer"
          },
          {
            "ActionName": "UpdateServerEngineAttributes",
            "FullActionName": "opsworks-cm::UpdateServerEngineAttributes"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "DescribeAccountAttributes",
            "FullActionName": "opsworks-cm::DescribeAccountAttributes"
          },
          {
            "ActionName": "DescribeBackups",
            "FullActionName": "opsworks-cm::DescribeBackups"
          },
          {
            "ActionName": "DescribeEvents",
            "FullActionName": "opsworks-cm::DescribeEvents"
          },
          {
            "ActionName": "DescribeNodeAssociationStatus",
            "FullActionName": "opsworks-cm::DescribeNodeAssociationStatus"
          },
          {
            "ActionName": "DescribeServers",
            "FullActionName": "opsworks-cm::DescribeServers"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Organizations",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "AcceptHandshake",
            "FullActionName": "organizations::AcceptHandshake"
          },
          {
            "ActionName": "AttachPolicy",
            "FullActionName": "organizations::AttachPolicy"
          },
          {
            "ActionName": "CancelHandshake",
            "FullActionName": "organizations::CancelHandshake"
          },
          {
            "ActionName": "CreateAccount",
            "FullActionName": "organizations::CreateAccount"
          },
          {
            "ActionName": "CreateGovCloudAccount",
            "FullActionName": "organizations::CreateGovCloudAccount"
          },
          {
            "ActionName": "CreateOrganization",
            "FullActionName": "organizations::CreateOrganization"
          },
          {
            "ActionName": "CreateOrganizationalUnit",
            "FullActionName": "organizations::CreateOrganizationalUnit"
          },
          {
            "ActionName": "CreatePolicy",
            "FullActionName": "organizations::CreatePolicy"
          },
          {
            "ActionName": "DeclineHandshake",
            "FullActionName": "organizations::DeclineHandshake"
          },
          {
            "ActionName": "DeleteOrganization",
            "FullActionName": "organizations::DeleteOrganization"
          },
          {
            "ActionName": "DeleteOrganizationalUnit",
            "FullActionName": "organizations::DeleteOrganizationalUnit"
          },
          {
            "ActionName": "DeletePolicy",
            "FullActionName": "organizations::DeletePolicy"
          },
          {
            "ActionName": "DetachPolicy",
            "FullActionName": "organizations::DetachPolicy"
          },
          {
            "ActionName": "DisableAWSServiceAccess",
            "FullActionName": "organizations::DisableAWSServiceAccess"
          },
          {
            "ActionName": "DisablePolicyType",
            "FullActionName": "organizations::DisablePolicyType"
          },
          {
            "ActionName": "EnableAWSServiceAccess",
            "FullActionName": "organizations::EnableAWSServiceAccess"
          },
          {
            "ActionName": "EnableAllFeatures",
            "FullActionName": "organizations::EnableAllFeatures"
          },
          {
            "ActionName": "EnablePolicyType",
            "FullActionName": "organizations::EnablePolicyType"
          },
          {
            "ActionName": "InviteAccountToOrganization",
            "FullActionName": "organizations::InviteAccountToOrganization"
          },
          {
            "ActionName": "LeaveOrganization",
            "FullActionName": "organizations::LeaveOrganization"
          },
          {
            "ActionName": "MoveAccount",
            "FullActionName": "organizations::MoveAccount"
          },
          {
            "ActionName": "RemoveAccountFromOrganization",
            "FullActionName": "organizations::RemoveAccountFromOrganization"
          },
          {
            "ActionName": "UpdateOrganizationalUnit",
            "FullActionName": "organizations::UpdateOrganizationalUnit"
          },
          {
            "ActionName": "UpdatePolicy",
            "FullActionName": "organizations::UpdatePolicy"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeAccount",
            "FullActionName": "organizations::DescribeAccount"
          },
          {
            "ActionName": "DescribeCreateAccountStatus",
            "FullActionName": "organizations::DescribeCreateAccountStatus"
          },
          {
            "ActionName": "DescribeHandshake",
            "FullActionName": "organizations::DescribeHandshake"
          },
          {
            "ActionName": "DescribeOrganization",
            "FullActionName": "organizations::DescribeOrganization"
          },
          {
            "ActionName": "DescribeOrganizationalUnit",
            "FullActionName": "organizations::DescribeOrganizationalUnit"
          },
          {
            "ActionName": "DescribePolicy",
            "FullActionName": "organizations::DescribePolicy"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListAWSServiceAccessForOrganization",
            "FullActionName": "organizations::ListAWSServiceAccessForOrganization"
          },
          {
            "ActionName": "ListAccounts",
            "FullActionName": "organizations::ListAccounts"
          },
          {
            "ActionName": "ListAccountsForParent",
            "FullActionName": "organizations::ListAccountsForParent"
          },
          {
            "ActionName": "ListChildren",
            "FullActionName": "organizations::ListChildren"
          },
          {
            "ActionName": "ListCreateAccountStatus",
            "FullActionName": "organizations::ListCreateAccountStatus"
          },
          {
            "ActionName": "ListHandshakesForAccount",
            "FullActionName": "organizations::ListHandshakesForAccount"
          },
          {
            "ActionName": "ListHandshakesForOrganization",
            "FullActionName": "organizations::ListHandshakesForOrganization"
          },
          {
            "ActionName": "ListOrganizationalUnitsForParent",
            "FullActionName": "organizations::ListOrganizationalUnitsForParent"
          },
          {
            "ActionName": "ListParents",
            "FullActionName": "organizations::ListParents"
          },
          {
            "ActionName": "ListPolicies",
            "FullActionName": "organizations::ListPolicies"
          },
          {
            "ActionName": "ListPoliciesForTarget",
            "FullActionName": "organizations::ListPoliciesForTarget"
          },
          {
            "ActionName": "ListRoots",
            "FullActionName": "organizations::ListRoots"
          },
          {
            "ActionName": "ListTagsForResource",
            "FullActionName": "organizations::ListTagsForResource"
          },
          {
            "ActionName": "ListTargetsForPolicy",
            "FullActionName": "organizations::ListTargetsForPolicy"
          }
        ]
      },
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "TagResource",
            "FullActionName": "organizations::TagResource"
          },
          {
            "ActionName": "UntagResource",
            "FullActionName": "organizations::UntagResource"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Performance Insights",
    "AccessLevels": [
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeDimensionKeys",
            "FullActionName": "pi::DescribeDimensionKeys"
          },
          {
            "ActionName": "GetResourceMetrics",
            "FullActionName": "pi::GetResourceMetrics"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Personalize",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "CreateCampaign",
            "FullActionName": "personalize::CreateCampaign"
          },
          {
            "ActionName": "CreateDataset",
            "FullActionName": "personalize::CreateDataset"
          },
          {
            "ActionName": "CreateDatasetGroup",
            "FullActionName": "personalize::CreateDatasetGroup"
          },
          {
            "ActionName": "CreateDatasetImportJob",
            "FullActionName": "personalize::CreateDatasetImportJob"
          },
          {
            "ActionName": "CreateEventTracker",
            "FullActionName": "personalize::CreateEventTracker"
          },
          {
            "ActionName": "CreateSchema",
            "FullActionName": "personalize::CreateSchema"
          },
          {
            "ActionName": "CreateSolution",
            "FullActionName": "personalize::CreateSolution"
          },
          {
            "ActionName": "CreateSolutionVersion",
            "FullActionName": "personalize::CreateSolutionVersion"
          },
          {
            "ActionName": "DeleteCampaign",
            "FullActionName": "personalize::DeleteCampaign"
          },
          {
            "ActionName": "DeleteDataset",
            "FullActionName": "personalize::DeleteDataset"
          },
          {
            "ActionName": "DeleteDatasetGroup",
            "FullActionName": "personalize::DeleteDatasetGroup"
          },
          {
            "ActionName": "DeleteEventTracker",
            "FullActionName": "personalize::DeleteEventTracker"
          },
          {
            "ActionName": "DeleteSchema",
            "FullActionName": "personalize::DeleteSchema"
          },
          {
            "ActionName": "DeleteSolution",
            "FullActionName": "personalize::DeleteSolution"
          },
          {
            "ActionName": "GetPersonalizedRanking",
            "FullActionName": "personalize::GetPersonalizedRanking"
          },
          {
            "ActionName": "PutEvents",
            "FullActionName": "personalize::PutEvents"
          },
          {
            "ActionName": "UpdateCampaign",
            "FullActionName": "personalize::UpdateCampaign"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeAlgorithm",
            "FullActionName": "personalize::DescribeAlgorithm"
          },
          {
            "ActionName": "DescribeCampaign",
            "FullActionName": "personalize::DescribeCampaign"
          },
          {
            "ActionName": "DescribeDataset",
            "FullActionName": "personalize::DescribeDataset"
          },
          {
            "ActionName": "DescribeDatasetGroup",
            "FullActionName": "personalize::DescribeDatasetGroup"
          },
          {
            "ActionName": "DescribeDatasetImportJob",
            "FullActionName": "personalize::DescribeDatasetImportJob"
          },
          {
            "ActionName": "DescribeEventTracker",
            "FullActionName": "personalize::DescribeEventTracker"
          },
          {
            "ActionName": "DescribeFeatureTransformation",
            "FullActionName": "personalize::DescribeFeatureTransformation"
          },
          {
            "ActionName": "DescribeRecipe",
            "FullActionName": "personalize::DescribeRecipe"
          },
          {
            "ActionName": "DescribeSchema",
            "FullActionName": "personalize::DescribeSchema"
          },
          {
            "ActionName": "DescribeSolution",
            "FullActionName": "personalize::DescribeSolution"
          },
          {
            "ActionName": "DescribeSolutionVersion",
            "FullActionName": "personalize::DescribeSolutionVersion"
          },
          {
            "ActionName": "GetRecommendations",
            "FullActionName": "personalize::GetRecommendations"
          },
          {
            "ActionName": "GetSolutionMetrics",
            "FullActionName": "personalize::GetSolutionMetrics"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListCampaigns",
            "FullActionName": "personalize::ListCampaigns"
          },
          {
            "ActionName": "ListDatasetGroups",
            "FullActionName": "personalize::ListDatasetGroups"
          },
          {
            "ActionName": "ListDatasetImportJobs",
            "FullActionName": "personalize::ListDatasetImportJobs"
          },
          {
            "ActionName": "ListDatasets",
            "FullActionName": "personalize::ListDatasets"
          },
          {
            "ActionName": "ListEventTrackers",
            "FullActionName": "personalize::ListEventTrackers"
          },
          {
            "ActionName": "ListRecipes",
            "FullActionName": "personalize::ListRecipes"
          },
          {
            "ActionName": "ListSchemas",
            "FullActionName": "personalize::ListSchemas"
          },
          {
            "ActionName": "ListSolutionVersions",
            "FullActionName": "personalize::ListSolutionVersions"
          },
          {
            "ActionName": "ListSolutions",
            "FullActionName": "personalize::ListSolutions"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Pinpoint",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "CreateApp",
            "FullActionName": "mobiletargeting::CreateApp"
          },
          {
            "ActionName": "CreateCampaign",
            "FullActionName": "mobiletargeting::CreateCampaign"
          },
          {
            "ActionName": "CreateExportJob",
            "FullActionName": "mobiletargeting::CreateExportJob"
          },
          {
            "ActionName": "CreateImportJob",
            "FullActionName": "mobiletargeting::CreateImportJob"
          },
          {
            "ActionName": "CreateSegment",
            "FullActionName": "mobiletargeting::CreateSegment"
          },
          {
            "ActionName": "DeleteAdmChannel",
            "FullActionName": "mobiletargeting::DeleteAdmChannel"
          },
          {
            "ActionName": "DeleteApnsChannel",
            "FullActionName": "mobiletargeting::DeleteApnsChannel"
          },
          {
            "ActionName": "DeleteApnsSandboxChannel",
            "FullActionName": "mobiletargeting::DeleteApnsSandboxChannel"
          },
          {
            "ActionName": "DeleteApnsVoipChannel",
            "FullActionName": "mobiletargeting::DeleteApnsVoipChannel"
          },
          {
            "ActionName": "DeleteApnsVoipSandboxChannel",
            "FullActionName": "mobiletargeting::DeleteApnsVoipSandboxChannel"
          },
          {
            "ActionName": "DeleteApp",
            "FullActionName": "mobiletargeting::DeleteApp"
          },
          {
            "ActionName": "DeleteBaiduChannel",
            "FullActionName": "mobiletargeting::DeleteBaiduChannel"
          },
          {
            "ActionName": "DeleteCampaign",
            "FullActionName": "mobiletargeting::DeleteCampaign"
          },
          {
            "ActionName": "DeleteEmailChannel",
            "FullActionName": "mobiletargeting::DeleteEmailChannel"
          },
          {
            "ActionName": "DeleteEndpoint",
            "FullActionName": "mobiletargeting::DeleteEndpoint"
          },
          {
            "ActionName": "DeleteEventStream",
            "FullActionName": "mobiletargeting::DeleteEventStream"
          },
          {
            "ActionName": "DeleteGcmChannel",
            "FullActionName": "mobiletargeting::DeleteGcmChannel"
          },
          {
            "ActionName": "DeleteSegment",
            "FullActionName": "mobiletargeting::DeleteSegment"
          },
          {
            "ActionName": "DeleteSmsChannel",
            "FullActionName": "mobiletargeting::DeleteSmsChannel"
          },
          {
            "ActionName": "DeleteUserEndpoints",
            "FullActionName": "mobiletargeting::DeleteUserEndpoints"
          },
          {
            "ActionName": "DeleteVoiceChannel",
            "FullActionName": "mobiletargeting::DeleteVoiceChannel"
          },
          {
            "ActionName": "PutEventStream",
            "FullActionName": "mobiletargeting::PutEventStream"
          },
          {
            "ActionName": "PutEvents",
            "FullActionName": "mobiletargeting::PutEvents"
          },
          {
            "ActionName": "RemoveAttributes",
            "FullActionName": "mobiletargeting::RemoveAttributes"
          },
          {
            "ActionName": "SendMessages",
            "FullActionName": "mobiletargeting::SendMessages"
          },
          {
            "ActionName": "SendUsersMessages",
            "FullActionName": "mobiletargeting::SendUsersMessages"
          },
          {
            "ActionName": "UpdateAdmChannel",
            "FullActionName": "mobiletargeting::UpdateAdmChannel"
          },
          {
            "ActionName": "UpdateApnsChannel",
            "FullActionName": "mobiletargeting::UpdateApnsChannel"
          },
          {
            "ActionName": "UpdateApnsSandboxChannel",
            "FullActionName": "mobiletargeting::UpdateApnsSandboxChannel"
          },
          {
            "ActionName": "UpdateApnsVoipChannel",
            "FullActionName": "mobiletargeting::UpdateApnsVoipChannel"
          },
          {
            "ActionName": "UpdateApnsVoipSandboxChannel",
            "FullActionName": "mobiletargeting::UpdateApnsVoipSandboxChannel"
          },
          {
            "ActionName": "UpdateApplicationSettings",
            "FullActionName": "mobiletargeting::UpdateApplicationSettings"
          },
          {
            "ActionName": "UpdateBaiduChannel",
            "FullActionName": "mobiletargeting::UpdateBaiduChannel"
          },
          {
            "ActionName": "UpdateCampaign",
            "FullActionName": "mobiletargeting::UpdateCampaign"
          },
          {
            "ActionName": "UpdateEmailChannel",
            "FullActionName": "mobiletargeting::UpdateEmailChannel"
          },
          {
            "ActionName": "UpdateEndpoint",
            "FullActionName": "mobiletargeting::UpdateEndpoint"
          },
          {
            "ActionName": "UpdateEndpointsBatch",
            "FullActionName": "mobiletargeting::UpdateEndpointsBatch"
          },
          {
            "ActionName": "UpdateGcmChannel",
            "FullActionName": "mobiletargeting::UpdateGcmChannel"
          },
          {
            "ActionName": "UpdateSegment",
            "FullActionName": "mobiletargeting::UpdateSegment"
          },
          {
            "ActionName": "UpdateSmsChannel",
            "FullActionName": "mobiletargeting::UpdateSmsChannel"
          },
          {
            "ActionName": "UpdateVoiceChannel",
            "FullActionName": "mobiletargeting::UpdateVoiceChannel"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "GetAdmChannel",
            "FullActionName": "mobiletargeting::GetAdmChannel"
          },
          {
            "ActionName": "GetApnsChannel",
            "FullActionName": "mobiletargeting::GetApnsChannel"
          },
          {
            "ActionName": "GetApnsSandboxChannel",
            "FullActionName": "mobiletargeting::GetApnsSandboxChannel"
          },
          {
            "ActionName": "GetApnsVoipChannel",
            "FullActionName": "mobiletargeting::GetApnsVoipChannel"
          },
          {
            "ActionName": "GetApnsVoipSandboxChannel",
            "FullActionName": "mobiletargeting::GetApnsVoipSandboxChannel"
          },
          {
            "ActionName": "GetApp",
            "FullActionName": "mobiletargeting::GetApp"
          },
          {
            "ActionName": "GetBaiduChannel",
            "FullActionName": "mobiletargeting::GetBaiduChannel"
          },
          {
            "ActionName": "GetCampaign",
            "FullActionName": "mobiletargeting::GetCampaign"
          },
          {
            "ActionName": "GetCampaignVersion",
            "FullActionName": "mobiletargeting::GetCampaignVersion"
          },
          {
            "ActionName": "GetEmailChannel",
            "FullActionName": "mobiletargeting::GetEmailChannel"
          },
          {
            "ActionName": "GetEndpoint",
            "FullActionName": "mobiletargeting::GetEndpoint"
          },
          {
            "ActionName": "GetEventStream",
            "FullActionName": "mobiletargeting::GetEventStream"
          },
          {
            "ActionName": "GetExportJob",
            "FullActionName": "mobiletargeting::GetExportJob"
          },
          {
            "ActionName": "GetGcmChannel",
            "FullActionName": "mobiletargeting::GetGcmChannel"
          },
          {
            "ActionName": "GetImportJob",
            "FullActionName": "mobiletargeting::GetImportJob"
          },
          {
            "ActionName": "GetSegment",
            "FullActionName": "mobiletargeting::GetSegment"
          },
          {
            "ActionName": "GetSegmentVersion",
            "FullActionName": "mobiletargeting::GetSegmentVersion"
          },
          {
            "ActionName": "GetSmsChannel",
            "FullActionName": "mobiletargeting::GetSmsChannel"
          },
          {
            "ActionName": "GetUserEndpoints",
            "FullActionName": "mobiletargeting::GetUserEndpoints"
          },
          {
            "ActionName": "GetVoiceChannel",
            "FullActionName": "mobiletargeting::GetVoiceChannel"
          },
          {
            "ActionName": "PhoneNumberValidate",
            "FullActionName": "mobiletargeting::PhoneNumberValidate"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "GetApplicationSettings",
            "FullActionName": "mobiletargeting::GetApplicationSettings"
          },
          {
            "ActionName": "GetApps",
            "FullActionName": "mobiletargeting::GetApps"
          },
          {
            "ActionName": "GetCampaignActivities",
            "FullActionName": "mobiletargeting::GetCampaignActivities"
          },
          {
            "ActionName": "GetCampaignVersions",
            "FullActionName": "mobiletargeting::GetCampaignVersions"
          },
          {
            "ActionName": "GetCampaigns",
            "FullActionName": "mobiletargeting::GetCampaigns"
          },
          {
            "ActionName": "GetChannels",
            "FullActionName": "mobiletargeting::GetChannels"
          },
          {
            "ActionName": "GetExportJobs",
            "FullActionName": "mobiletargeting::GetExportJobs"
          },
          {
            "ActionName": "GetImportJobs",
            "FullActionName": "mobiletargeting::GetImportJobs"
          },
          {
            "ActionName": "GetSegmentExportJobs",
            "FullActionName": "mobiletargeting::GetSegmentExportJobs"
          },
          {
            "ActionName": "GetSegmentImportJobs",
            "FullActionName": "mobiletargeting::GetSegmentImportJobs"
          },
          {
            "ActionName": "GetSegmentVersions",
            "FullActionName": "mobiletargeting::GetSegmentVersions"
          },
          {
            "ActionName": "GetSegments",
            "FullActionName": "mobiletargeting::GetSegments"
          },
          {
            "ActionName": "ListTagsForResource",
            "FullActionName": "mobiletargeting::ListTagsForResource"
          }
        ]
      },
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "TagResource",
            "FullActionName": "mobiletargeting::TagResource"
          },
          {
            "ActionName": "UntagResource",
            "FullActionName": "mobiletargeting::UntagResource"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Pinpoint SMS Voice",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "CreateConfigurationSet",
            "FullActionName": "sms-voice::CreateConfigurationSet"
          },
          {
            "ActionName": "CreateConfigurationSetEventDestination",
            "FullActionName": "sms-voice::CreateConfigurationSetEventDestination"
          },
          {
            "ActionName": "DeleteConfigurationSet",
            "FullActionName": "sms-voice::DeleteConfigurationSet"
          },
          {
            "ActionName": "DeleteConfigurationSetEventDestination",
            "FullActionName": "sms-voice::DeleteConfigurationSetEventDestination"
          },
          {
            "ActionName": "SendVoiceMessage",
            "FullActionName": "sms-voice::SendVoiceMessage"
          },
          {
            "ActionName": "UpdateConfigurationSetEventDestination",
            "FullActionName": "sms-voice::UpdateConfigurationSetEventDestination"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "GetConfigurationSetEventDestinations",
            "FullActionName": "sms-voice::GetConfigurationSetEventDestinations"
          },
          {
            "ActionName": "ListConfigurationSets",
            "FullActionName": "sms-voice::ListConfigurationSets"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Polly",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "DeleteLexicon",
            "FullActionName": "polly::DeleteLexicon"
          },
          {
            "ActionName": "PutLexicon",
            "FullActionName": "polly::PutLexicon"
          },
          {
            "ActionName": "StartSpeechSynthesisTask",
            "FullActionName": "polly::StartSpeechSynthesisTask"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "DescribeVoices",
            "FullActionName": "polly::DescribeVoices"
          },
          {
            "ActionName": "ListLexicons",
            "FullActionName": "polly::ListLexicons"
          },
          {
            "ActionName": "ListSpeechSynthesisTasks",
            "FullActionName": "polly::ListSpeechSynthesisTasks"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "GetLexicon",
            "FullActionName": "polly::GetLexicon"
          },
          {
            "ActionName": "GetSpeechSynthesisTask",
            "FullActionName": "polly::GetSpeechSynthesisTask"
          },
          {
            "ActionName": "SynthesizeSpeech",
            "FullActionName": "polly::SynthesizeSpeech"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Price List",
    "AccessLevels": [
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeServices",
            "FullActionName": "pricing::DescribeServices"
          },
          {
            "ActionName": "GetAttributeValues",
            "FullActionName": "pricing::GetAttributeValues"
          },
          {
            "ActionName": "GetProducts",
            "FullActionName": "pricing::GetProducts"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Private Marketplace",
    "AccessLevels": [
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "GetEntitlements",
            "FullActionName": "aws-marketplace::GetEntitlements"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "QLDB",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "CreateLedger",
            "FullActionName": "qldb::CreateLedger"
          },
          {
            "ActionName": "DeleteLedger",
            "FullActionName": "qldb::DeleteLedger"
          },
          {
            "ActionName": "ExecuteStatement",
            "FullActionName": "qldb::ExecuteStatement"
          },
          {
            "ActionName": "ExportJournalToS3",
            "FullActionName": "qldb::ExportJournalToS3"
          },
          {
            "ActionName": "InsertSampleData",
            "FullActionName": "qldb::InsertSampleData"
          },
          {
            "ActionName": "SendCommand",
            "FullActionName": "qldb::SendCommand"
          },
          {
            "ActionName": "ShowCatalog",
            "FullActionName": "qldb::ShowCatalog"
          },
          {
            "ActionName": "UpdateLedger",
            "FullActionName": "qldb::UpdateLedger"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeJournalS3Export",
            "FullActionName": "qldb::DescribeJournalS3Export"
          },
          {
            "ActionName": "DescribeLedger",
            "FullActionName": "qldb::DescribeLedger"
          },
          {
            "ActionName": "GetBlock",
            "FullActionName": "qldb::GetBlock"
          },
          {
            "ActionName": "GetDigest",
            "FullActionName": "qldb::GetDigest"
          },
          {
            "ActionName": "GetRevision",
            "FullActionName": "qldb::GetRevision"
          },
          {
            "ActionName": "ListTagsForResource",
            "FullActionName": "qldb::ListTagsForResource"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListJournalS3Exports",
            "FullActionName": "qldb::ListJournalS3Exports"
          },
          {
            "ActionName": "ListJournalS3ExportsForLedger",
            "FullActionName": "qldb::ListJournalS3ExportsForLedger"
          },
          {
            "ActionName": "ListLedgers",
            "FullActionName": "qldb::ListLedgers"
          }
        ]
      },
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "TagResource",
            "FullActionName": "qldb::TagResource"
          },
          {
            "ActionName": "UntagResource",
            "FullActionName": "qldb::UntagResource"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "QuickSight",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "CreateAdmin",
            "FullActionName": "quicksight::CreateAdmin"
          },
          {
            "ActionName": "CreateGroup",
            "FullActionName": "quicksight::CreateGroup"
          },
          {
            "ActionName": "CreateGroupMembership",
            "FullActionName": "quicksight::CreateGroupMembership"
          },
          {
            "ActionName": "CreateReader",
            "FullActionName": "quicksight::CreateReader"
          },
          {
            "ActionName": "CreateUser",
            "FullActionName": "quicksight::CreateUser"
          },
          {
            "ActionName": "DeleteGroup",
            "FullActionName": "quicksight::DeleteGroup"
          },
          {
            "ActionName": "DeleteGroupMembership",
            "FullActionName": "quicksight::DeleteGroupMembership"
          },
          {
            "ActionName": "DeleteUser",
            "FullActionName": "quicksight::DeleteUser"
          },
          {
            "ActionName": "DeleteUserByPrincipalId",
            "FullActionName": "quicksight::DeleteUserByPrincipalId"
          },
          {
            "ActionName": "RegisterUser",
            "FullActionName": "quicksight::RegisterUser"
          },
          {
            "ActionName": "SearchDirectoryGroups",
            "FullActionName": "quicksight::SearchDirectoryGroups"
          },
          {
            "ActionName": "SetGroupMapping",
            "FullActionName": "quicksight::SetGroupMapping"
          },
          {
            "ActionName": "Subscribe",
            "FullActionName": "quicksight::Subscribe"
          },
          {
            "ActionName": "Unsubscribe",
            "FullActionName": "quicksight::Unsubscribe"
          },
          {
            "ActionName": "UpdateGroup",
            "FullActionName": "quicksight::UpdateGroup"
          },
          {
            "ActionName": "UpdateUser",
            "FullActionName": "quicksight::UpdateUser"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeGroup",
            "FullActionName": "quicksight::DescribeGroup"
          },
          {
            "ActionName": "DescribeUser",
            "FullActionName": "quicksight::DescribeUser"
          },
          {
            "ActionName": "GetDashboardEmbedUrl",
            "FullActionName": "quicksight::GetDashboardEmbedUrl"
          },
          {
            "ActionName": "GetGroupMapping",
            "FullActionName": "quicksight::GetGroupMapping"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListGroupMemberships",
            "FullActionName": "quicksight::ListGroupMemberships"
          },
          {
            "ActionName": "ListGroups",
            "FullActionName": "quicksight::ListGroups"
          },
          {
            "ActionName": "ListUserGroups",
            "FullActionName": "quicksight::ListUserGroups"
          },
          {
            "ActionName": "ListUsers",
            "FullActionName": "quicksight::ListUsers"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "RDS",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "AddRoleToDBCluster",
            "FullActionName": "rds::AddRoleToDBCluster"
          },
          {
            "ActionName": "AddRoleToDBInstance",
            "FullActionName": "rds::AddRoleToDBInstance"
          },
          {
            "ActionName": "AddSourceIdentifierToSubscription",
            "FullActionName": "rds::AddSourceIdentifierToSubscription"
          },
          {
            "ActionName": "ApplyPendingMaintenanceAction",
            "FullActionName": "rds::ApplyPendingMaintenanceAction"
          },
          {
            "ActionName": "BacktrackDBCluster",
            "FullActionName": "rds::BacktrackDBCluster"
          },
          {
            "ActionName": "CopyDBClusterParameterGroup",
            "FullActionName": "rds::CopyDBClusterParameterGroup"
          },
          {
            "ActionName": "CopyDBClusterSnapshot",
            "FullActionName": "rds::CopyDBClusterSnapshot"
          },
          {
            "ActionName": "CopyDBParameterGroup",
            "FullActionName": "rds::CopyDBParameterGroup"
          },
          {
            "ActionName": "CopyDBSnapshot",
            "FullActionName": "rds::CopyDBSnapshot"
          },
          {
            "ActionName": "CopyOptionGroup",
            "FullActionName": "rds::CopyOptionGroup"
          },
          {
            "ActionName": "CreateDBClusterEndpoint",
            "FullActionName": "rds::CreateDBClusterEndpoint"
          },
          {
            "ActionName": "CreateGlobalCluster",
            "FullActionName": "rds::CreateGlobalCluster"
          },
          {
            "ActionName": "DeleteDBCluster",
            "FullActionName": "rds::DeleteDBCluster"
          },
          {
            "ActionName": "DeleteDBClusterEndpoint",
            "FullActionName": "rds::DeleteDBClusterEndpoint"
          },
          {
            "ActionName": "DeleteDBClusterParameterGroup",
            "FullActionName": "rds::DeleteDBClusterParameterGroup"
          },
          {
            "ActionName": "DeleteDBClusterSnapshot",
            "FullActionName": "rds::DeleteDBClusterSnapshot"
          },
          {
            "ActionName": "DeleteDBInstance",
            "FullActionName": "rds::DeleteDBInstance"
          },
          {
            "ActionName": "DeleteDBInstanceAutomatedBackup",
            "FullActionName": "rds::DeleteDBInstanceAutomatedBackup"
          },
          {
            "ActionName": "DeleteDBParameterGroup",
            "FullActionName": "rds::DeleteDBParameterGroup"
          },
          {
            "ActionName": "DeleteDBSecurityGroup",
            "FullActionName": "rds::DeleteDBSecurityGroup"
          },
          {
            "ActionName": "DeleteDBSnapshot",
            "FullActionName": "rds::DeleteDBSnapshot"
          },
          {
            "ActionName": "DeleteDBSubnetGroup",
            "FullActionName": "rds::DeleteDBSubnetGroup"
          },
          {
            "ActionName": "DeleteEventSubscription",
            "FullActionName": "rds::DeleteEventSubscription"
          },
          {
            "ActionName": "DeleteGlobalCluster",
            "FullActionName": "rds::DeleteGlobalCluster"
          },
          {
            "ActionName": "DeleteOptionGroup",
            "FullActionName": "rds::DeleteOptionGroup"
          },
          {
            "ActionName": "FailoverDBCluster",
            "FullActionName": "rds::FailoverDBCluster"
          },
          {
            "ActionName": "ModifyCurrentDBClusterCapacity",
            "FullActionName": "rds::ModifyCurrentDBClusterCapacity"
          },
          {
            "ActionName": "ModifyDBCluster",
            "FullActionName": "rds::ModifyDBCluster"
          },
          {
            "ActionName": "ModifyDBClusterEndpoint",
            "FullActionName": "rds::ModifyDBClusterEndpoint"
          },
          {
            "ActionName": "ModifyDBClusterParameterGroup",
            "FullActionName": "rds::ModifyDBClusterParameterGroup"
          },
          {
            "ActionName": "ModifyDBClusterSnapshotAttribute",
            "FullActionName": "rds::ModifyDBClusterSnapshotAttribute"
          },
          {
            "ActionName": "ModifyDBInstance",
            "FullActionName": "rds::ModifyDBInstance"
          },
          {
            "ActionName": "ModifyDBParameterGroup",
            "FullActionName": "rds::ModifyDBParameterGroup"
          },
          {
            "ActionName": "ModifyDBSnapshot",
            "FullActionName": "rds::ModifyDBSnapshot"
          },
          {
            "ActionName": "ModifyDBSnapshotAttribute",
            "FullActionName": "rds::ModifyDBSnapshotAttribute"
          },
          {
            "ActionName": "ModifyDBSubnetGroup",
            "FullActionName": "rds::ModifyDBSubnetGroup"
          },
          {
            "ActionName": "ModifyEventSubscription",
            "FullActionName": "rds::ModifyEventSubscription"
          },
          {
            "ActionName": "ModifyGlobalCluster",
            "FullActionName": "rds::ModifyGlobalCluster"
          },
          {
            "ActionName": "ModifyOptionGroup",
            "FullActionName": "rds::ModifyOptionGroup"
          },
          {
            "ActionName": "PromoteReadReplica",
            "FullActionName": "rds::PromoteReadReplica"
          },
          {
            "ActionName": "PromoteReadReplicaDBCluster",
            "FullActionName": "rds::PromoteReadReplicaDBCluster"
          },
          {
            "ActionName": "PurchaseReservedDBInstancesOffering",
            "FullActionName": "rds::PurchaseReservedDBInstancesOffering"
          },
          {
            "ActionName": "RebootDBInstance",
            "FullActionName": "rds::RebootDBInstance"
          },
          {
            "ActionName": "RemoveFromGlobalCluster",
            "FullActionName": "rds::RemoveFromGlobalCluster"
          },
          {
            "ActionName": "RemoveRoleFromDBCluster",
            "FullActionName": "rds::RemoveRoleFromDBCluster"
          },
          {
            "ActionName": "RemoveRoleFromDBInstance",
            "FullActionName": "rds::RemoveRoleFromDBInstance"
          },
          {
            "ActionName": "RemoveSourceIdentifierFromSubscription",
            "FullActionName": "rds::RemoveSourceIdentifierFromSubscription"
          },
          {
            "ActionName": "ResetDBClusterParameterGroup",
            "FullActionName": "rds::ResetDBClusterParameterGroup"
          },
          {
            "ActionName": "ResetDBParameterGroup",
            "FullActionName": "rds::ResetDBParameterGroup"
          },
          {
            "ActionName": "RestoreDBClusterFromS3",
            "FullActionName": "rds::RestoreDBClusterFromS3"
          },
          {
            "ActionName": "RestoreDBClusterFromSnapshot",
            "FullActionName": "rds::RestoreDBClusterFromSnapshot"
          },
          {
            "ActionName": "RestoreDBClusterToPointInTime",
            "FullActionName": "rds::RestoreDBClusterToPointInTime"
          },
          {
            "ActionName": "RestoreDBInstanceFromDBSnapshot",
            "FullActionName": "rds::RestoreDBInstanceFromDBSnapshot"
          },
          {
            "ActionName": "RestoreDBInstanceFromS3",
            "FullActionName": "rds::RestoreDBInstanceFromS3"
          },
          {
            "ActionName": "RestoreDBInstanceToPointInTime",
            "FullActionName": "rds::RestoreDBInstanceToPointInTime"
          },
          {
            "ActionName": "RevokeDBSecurityGroupIngress",
            "FullActionName": "rds::RevokeDBSecurityGroupIngress"
          },
          {
            "ActionName": "StartActivityStream",
            "FullActionName": "rds::StartActivityStream"
          },
          {
            "ActionName": "StartDBCluster",
            "FullActionName": "rds::StartDBCluster"
          },
          {
            "ActionName": "StartDBInstance",
            "FullActionName": "rds::StartDBInstance"
          },
          {
            "ActionName": "StopActivityStream",
            "FullActionName": "rds::StopActivityStream"
          },
          {
            "ActionName": "StopDBCluster",
            "FullActionName": "rds::StopDBCluster"
          },
          {
            "ActionName": "StopDBInstance",
            "FullActionName": "rds::StopDBInstance"
          }
        ]
      },
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "AddTagsToResource",
            "FullActionName": "rds::AddTagsToResource"
          },
          {
            "ActionName": "CreateDBCluster",
            "FullActionName": "rds::CreateDBCluster"
          },
          {
            "ActionName": "CreateDBClusterParameterGroup",
            "FullActionName": "rds::CreateDBClusterParameterGroup"
          },
          {
            "ActionName": "CreateDBClusterSnapshot",
            "FullActionName": "rds::CreateDBClusterSnapshot"
          },
          {
            "ActionName": "CreateDBInstance",
            "FullActionName": "rds::CreateDBInstance"
          },
          {
            "ActionName": "CreateDBInstanceReadReplica",
            "FullActionName": "rds::CreateDBInstanceReadReplica"
          },
          {
            "ActionName": "CreateDBParameterGroup",
            "FullActionName": "rds::CreateDBParameterGroup"
          },
          {
            "ActionName": "CreateDBSecurityGroup",
            "FullActionName": "rds::CreateDBSecurityGroup"
          },
          {
            "ActionName": "CreateDBSnapshot",
            "FullActionName": "rds::CreateDBSnapshot"
          },
          {
            "ActionName": "CreateDBSubnetGroup",
            "FullActionName": "rds::CreateDBSubnetGroup"
          },
          {
            "ActionName": "CreateEventSubscription",
            "FullActionName": "rds::CreateEventSubscription"
          },
          {
            "ActionName": "CreateOptionGroup",
            "FullActionName": "rds::CreateOptionGroup"
          },
          {
            "ActionName": "RemoveTagsFromResource",
            "FullActionName": "rds::RemoveTagsFromResource"
          }
        ]
      },
      {
        "AccessLevel": "Permissions",
        "Actions": [
          {
            "ActionName": "AuthorizeDBSecurityGroupIngress",
            "FullActionName": "rds::AuthorizeDBSecurityGroupIngress"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "DescribeAccountAttributes",
            "FullActionName": "rds::DescribeAccountAttributes"
          },
          {
            "ActionName": "DescribeCertificates",
            "FullActionName": "rds::DescribeCertificates"
          },
          {
            "ActionName": "DescribeDBClusterBacktracks",
            "FullActionName": "rds::DescribeDBClusterBacktracks"
          },
          {
            "ActionName": "DescribeDBClusterEndpoints",
            "FullActionName": "rds::DescribeDBClusterEndpoints"
          },
          {
            "ActionName": "DescribeDBClusterParameterGroups",
            "FullActionName": "rds::DescribeDBClusterParameterGroups"
          },
          {
            "ActionName": "DescribeDBClusterParameters",
            "FullActionName": "rds::DescribeDBClusterParameters"
          },
          {
            "ActionName": "DescribeDBClusterSnapshotAttributes",
            "FullActionName": "rds::DescribeDBClusterSnapshotAttributes"
          },
          {
            "ActionName": "DescribeDBClusters",
            "FullActionName": "rds::DescribeDBClusters"
          },
          {
            "ActionName": "DescribeDBEngineVersions",
            "FullActionName": "rds::DescribeDBEngineVersions"
          },
          {
            "ActionName": "DescribeDBInstanceAutomatedBackups",
            "FullActionName": "rds::DescribeDBInstanceAutomatedBackups"
          },
          {
            "ActionName": "DescribeDBInstances",
            "FullActionName": "rds::DescribeDBInstances"
          },
          {
            "ActionName": "DescribeDBLogFiles",
            "FullActionName": "rds::DescribeDBLogFiles"
          },
          {
            "ActionName": "DescribeDBParameterGroups",
            "FullActionName": "rds::DescribeDBParameterGroups"
          },
          {
            "ActionName": "DescribeDBParameters",
            "FullActionName": "rds::DescribeDBParameters"
          },
          {
            "ActionName": "DescribeDBSecurityGroups",
            "FullActionName": "rds::DescribeDBSecurityGroups"
          },
          {
            "ActionName": "DescribeDBSnapshotAttributes",
            "FullActionName": "rds::DescribeDBSnapshotAttributes"
          },
          {
            "ActionName": "DescribeDBSnapshots",
            "FullActionName": "rds::DescribeDBSnapshots"
          },
          {
            "ActionName": "DescribeDBSubnetGroups",
            "FullActionName": "rds::DescribeDBSubnetGroups"
          },
          {
            "ActionName": "DescribeEngineDefaultClusterParameters",
            "FullActionName": "rds::DescribeEngineDefaultClusterParameters"
          },
          {
            "ActionName": "DescribeEngineDefaultParameters",
            "FullActionName": "rds::DescribeEngineDefaultParameters"
          },
          {
            "ActionName": "DescribeEventCategories",
            "FullActionName": "rds::DescribeEventCategories"
          },
          {
            "ActionName": "DescribeEventSubscriptions",
            "FullActionName": "rds::DescribeEventSubscriptions"
          },
          {
            "ActionName": "DescribeEvents",
            "FullActionName": "rds::DescribeEvents"
          },
          {
            "ActionName": "DescribeGlobalClusters",
            "FullActionName": "rds::DescribeGlobalClusters"
          },
          {
            "ActionName": "DescribeOptionGroupOptions",
            "FullActionName": "rds::DescribeOptionGroupOptions"
          },
          {
            "ActionName": "DescribeOptionGroups",
            "FullActionName": "rds::DescribeOptionGroups"
          },
          {
            "ActionName": "DescribeOrderableDBInstanceOptions",
            "FullActionName": "rds::DescribeOrderableDBInstanceOptions"
          },
          {
            "ActionName": "DescribePendingMaintenanceActions",
            "FullActionName": "rds::DescribePendingMaintenanceActions"
          },
          {
            "ActionName": "DescribeReservedDBInstances",
            "FullActionName": "rds::DescribeReservedDBInstances"
          },
          {
            "ActionName": "DescribeReservedDBInstancesOfferings",
            "FullActionName": "rds::DescribeReservedDBInstancesOfferings"
          },
          {
            "ActionName": "DescribeSourceRegions",
            "FullActionName": "rds::DescribeSourceRegions"
          },
          {
            "ActionName": "DescribeValidDBInstanceModifications",
            "FullActionName": "rds::DescribeValidDBInstanceModifications"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeDBClusterSnapshots",
            "FullActionName": "rds::DescribeDBClusterSnapshots"
          },
          {
            "ActionName": "DownloadCompleteDBLogFile",
            "FullActionName": "rds::DownloadCompleteDBLogFile"
          },
          {
            "ActionName": "DownloadDBLogFilePortion",
            "FullActionName": "rds::DownloadDBLogFilePortion"
          },
          {
            "ActionName": "ListTagsForResource",
            "FullActionName": "rds::ListTagsForResource"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "RDS Data API",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "BatchExecuteStatement",
            "FullActionName": "rds-data::BatchExecuteStatement"
          },
          {
            "ActionName": "BeginTransaction",
            "FullActionName": "rds-data::BeginTransaction"
          },
          {
            "ActionName": "CommitTransaction",
            "FullActionName": "rds-data::CommitTransaction"
          },
          {
            "ActionName": "ExecuteStatement",
            "FullActionName": "rds-data::ExecuteStatement"
          },
          {
            "ActionName": "RollbackTransaction",
            "FullActionName": "rds-data::RollbackTransaction"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Redshift",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "AcceptReservedNodeExchange",
            "FullActionName": "redshift::AcceptReservedNodeExchange"
          },
          {
            "ActionName": "BatchDeleteClusterSnapshots",
            "FullActionName": "redshift::BatchDeleteClusterSnapshots"
          },
          {
            "ActionName": "BatchModifyClusterSnapshots",
            "FullActionName": "redshift::BatchModifyClusterSnapshots"
          },
          {
            "ActionName": "CancelQuery",
            "FullActionName": "redshift::CancelQuery"
          },
          {
            "ActionName": "CancelQuerySession",
            "FullActionName": "redshift::CancelQuerySession"
          },
          {
            "ActionName": "CancelResize",
            "FullActionName": "redshift::CancelResize"
          },
          {
            "ActionName": "CopyClusterSnapshot",
            "FullActionName": "redshift::CopyClusterSnapshot"
          },
          {
            "ActionName": "CreateCluster",
            "FullActionName": "redshift::CreateCluster"
          },
          {
            "ActionName": "CreateClusterParameterGroup",
            "FullActionName": "redshift::CreateClusterParameterGroup"
          },
          {
            "ActionName": "CreateClusterSecurityGroup",
            "FullActionName": "redshift::CreateClusterSecurityGroup"
          },
          {
            "ActionName": "CreateClusterSnapshot",
            "FullActionName": "redshift::CreateClusterSnapshot"
          },
          {
            "ActionName": "CreateClusterSubnetGroup",
            "FullActionName": "redshift::CreateClusterSubnetGroup"
          },
          {
            "ActionName": "CreateEventSubscription",
            "FullActionName": "redshift::CreateEventSubscription"
          },
          {
            "ActionName": "CreateHsmClientCertificate",
            "FullActionName": "redshift::CreateHsmClientCertificate"
          },
          {
            "ActionName": "CreateHsmConfiguration",
            "FullActionName": "redshift::CreateHsmConfiguration"
          },
          {
            "ActionName": "CreateSavedQuery",
            "FullActionName": "redshift::CreateSavedQuery"
          },
          {
            "ActionName": "CreateSnapshotSchedule",
            "FullActionName": "redshift::CreateSnapshotSchedule"
          },
          {
            "ActionName": "DeleteCluster",
            "FullActionName": "redshift::DeleteCluster"
          },
          {
            "ActionName": "DeleteClusterParameterGroup",
            "FullActionName": "redshift::DeleteClusterParameterGroup"
          },
          {
            "ActionName": "DeleteClusterSecurityGroup",
            "FullActionName": "redshift::DeleteClusterSecurityGroup"
          },
          {
            "ActionName": "DeleteClusterSnapshot",
            "FullActionName": "redshift::DeleteClusterSnapshot"
          },
          {
            "ActionName": "DeleteClusterSubnetGroup",
            "FullActionName": "redshift::DeleteClusterSubnetGroup"
          },
          {
            "ActionName": "DeleteEventSubscription",
            "FullActionName": "redshift::DeleteEventSubscription"
          },
          {
            "ActionName": "DeleteHsmClientCertificate",
            "FullActionName": "redshift::DeleteHsmClientCertificate"
          },
          {
            "ActionName": "DeleteHsmConfiguration",
            "FullActionName": "redshift::DeleteHsmConfiguration"
          },
          {
            "ActionName": "DeleteSavedQueries",
            "FullActionName": "redshift::DeleteSavedQueries"
          },
          {
            "ActionName": "DeleteSnapshotCopyGrant",
            "FullActionName": "redshift::DeleteSnapshotCopyGrant"
          },
          {
            "ActionName": "DeleteSnapshotSchedule",
            "FullActionName": "redshift::DeleteSnapshotSchedule"
          },
          {
            "ActionName": "DisableLogging",
            "FullActionName": "redshift::DisableLogging"
          },
          {
            "ActionName": "DisableSnapshotCopy",
            "FullActionName": "redshift::DisableSnapshotCopy"
          },
          {
            "ActionName": "EnableLogging",
            "FullActionName": "redshift::EnableLogging"
          },
          {
            "ActionName": "EnableSnapshotCopy",
            "FullActionName": "redshift::EnableSnapshotCopy"
          },
          {
            "ActionName": "ExecuteQuery",
            "FullActionName": "redshift::ExecuteQuery"
          },
          {
            "ActionName": "GetClusterCredentials",
            "FullActionName": "redshift::GetClusterCredentials"
          },
          {
            "ActionName": "ModifyCluster",
            "FullActionName": "redshift::ModifyCluster"
          },
          {
            "ActionName": "ModifyClusterDbRevision",
            "FullActionName": "redshift::ModifyClusterDbRevision"
          },
          {
            "ActionName": "ModifyClusterMaintenance",
            "FullActionName": "redshift::ModifyClusterMaintenance"
          },
          {
            "ActionName": "ModifyClusterParameterGroup",
            "FullActionName": "redshift::ModifyClusterParameterGroup"
          },
          {
            "ActionName": "ModifyClusterSnapshot",
            "FullActionName": "redshift::ModifyClusterSnapshot"
          },
          {
            "ActionName": "ModifyClusterSnapshotSchedule",
            "FullActionName": "redshift::ModifyClusterSnapshotSchedule"
          },
          {
            "ActionName": "ModifyClusterSubnetGroup",
            "FullActionName": "redshift::ModifyClusterSubnetGroup"
          },
          {
            "ActionName": "ModifyEventSubscription",
            "FullActionName": "redshift::ModifyEventSubscription"
          },
          {
            "ActionName": "ModifySavedQuery",
            "FullActionName": "redshift::ModifySavedQuery"
          },
          {
            "ActionName": "ModifySnapshotCopyRetentionPeriod",
            "FullActionName": "redshift::ModifySnapshotCopyRetentionPeriod"
          },
          {
            "ActionName": "ModifySnapshotSchedule",
            "FullActionName": "redshift::ModifySnapshotSchedule"
          },
          {
            "ActionName": "PurchaseReservedNodeOffering",
            "FullActionName": "redshift::PurchaseReservedNodeOffering"
          },
          {
            "ActionName": "RebootCluster",
            "FullActionName": "redshift::RebootCluster"
          },
          {
            "ActionName": "ResetClusterParameterGroup",
            "FullActionName": "redshift::ResetClusterParameterGroup"
          },
          {
            "ActionName": "ResizeCluster",
            "FullActionName": "redshift::ResizeCluster"
          },
          {
            "ActionName": "RestoreFromClusterSnapshot",
            "FullActionName": "redshift::RestoreFromClusterSnapshot"
          },
          {
            "ActionName": "RestoreTableFromClusterSnapshot",
            "FullActionName": "redshift::RestoreTableFromClusterSnapshot"
          }
        ]
      },
      {
        "AccessLevel": "Permissions",
        "Actions": [
          {
            "ActionName": "AuthorizeClusterSecurityGroupIngress",
            "FullActionName": "redshift::AuthorizeClusterSecurityGroupIngress"
          },
          {
            "ActionName": "AuthorizeSnapshotAccess",
            "FullActionName": "redshift::AuthorizeSnapshotAccess"
          },
          {
            "ActionName": "CreateClusterUser",
            "FullActionName": "redshift::CreateClusterUser"
          },
          {
            "ActionName": "CreateSnapshotCopyGrant",
            "FullActionName": "redshift::CreateSnapshotCopyGrant"
          },
          {
            "ActionName": "JoinGroup",
            "FullActionName": "redshift::JoinGroup"
          },
          {
            "ActionName": "ModifyClusterIamRoles",
            "FullActionName": "redshift::ModifyClusterIamRoles"
          },
          {
            "ActionName": "RevokeClusterSecurityGroupIngress",
            "FullActionName": "redshift::RevokeClusterSecurityGroupIngress"
          },
          {
            "ActionName": "RevokeSnapshotAccess",
            "FullActionName": "redshift::RevokeSnapshotAccess"
          },
          {
            "ActionName": "RotateEncryptionKey",
            "FullActionName": "redshift::RotateEncryptionKey"
          }
        ]
      },
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "CreateTags",
            "FullActionName": "redshift::CreateTags"
          },
          {
            "ActionName": "DeleteTags",
            "FullActionName": "redshift::DeleteTags"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeAccountAttributes",
            "FullActionName": "redshift::DescribeAccountAttributes"
          },
          {
            "ActionName": "DescribeClusterParameterGroups",
            "FullActionName": "redshift::DescribeClusterParameterGroups"
          },
          {
            "ActionName": "DescribeClusterParameters",
            "FullActionName": "redshift::DescribeClusterParameters"
          },
          {
            "ActionName": "DescribeClusterSecurityGroups",
            "FullActionName": "redshift::DescribeClusterSecurityGroups"
          },
          {
            "ActionName": "DescribeClusterSnapshots",
            "FullActionName": "redshift::DescribeClusterSnapshots"
          },
          {
            "ActionName": "DescribeClusterSubnetGroups",
            "FullActionName": "redshift::DescribeClusterSubnetGroups"
          },
          {
            "ActionName": "DescribeClusterVersions",
            "FullActionName": "redshift::DescribeClusterVersions"
          },
          {
            "ActionName": "DescribeDefaultClusterParameters",
            "FullActionName": "redshift::DescribeDefaultClusterParameters"
          },
          {
            "ActionName": "DescribeEventCategories",
            "FullActionName": "redshift::DescribeEventCategories"
          },
          {
            "ActionName": "DescribeEventSubscriptions",
            "FullActionName": "redshift::DescribeEventSubscriptions"
          },
          {
            "ActionName": "DescribeHsmClientCertificates",
            "FullActionName": "redshift::DescribeHsmClientCertificates"
          },
          {
            "ActionName": "DescribeHsmConfigurations",
            "FullActionName": "redshift::DescribeHsmConfigurations"
          },
          {
            "ActionName": "DescribeLoggingStatus",
            "FullActionName": "redshift::DescribeLoggingStatus"
          },
          {
            "ActionName": "DescribeOrderableClusterOptions",
            "FullActionName": "redshift::DescribeOrderableClusterOptions"
          },
          {
            "ActionName": "DescribeQuery",
            "FullActionName": "redshift::DescribeQuery"
          },
          {
            "ActionName": "DescribeReservedNodeOfferings",
            "FullActionName": "redshift::DescribeReservedNodeOfferings"
          },
          {
            "ActionName": "DescribeReservedNodes",
            "FullActionName": "redshift::DescribeReservedNodes"
          },
          {
            "ActionName": "DescribeResize",
            "FullActionName": "redshift::DescribeResize"
          },
          {
            "ActionName": "DescribeSnapshotCopyGrants",
            "FullActionName": "redshift::DescribeSnapshotCopyGrants"
          },
          {
            "ActionName": "DescribeSnapshotSchedules",
            "FullActionName": "redshift::DescribeSnapshotSchedules"
          },
          {
            "ActionName": "DescribeStorage",
            "FullActionName": "redshift::DescribeStorage"
          },
          {
            "ActionName": "DescribeTable",
            "FullActionName": "redshift::DescribeTable"
          },
          {
            "ActionName": "DescribeTableRestoreStatus",
            "FullActionName": "redshift::DescribeTableRestoreStatus"
          },
          {
            "ActionName": "DescribeTags",
            "FullActionName": "redshift::DescribeTags"
          },
          {
            "ActionName": "FetchResults",
            "FullActionName": "redshift::FetchResults"
          },
          {
            "ActionName": "GetReservedNodeExchangeOfferings",
            "FullActionName": "redshift::GetReservedNodeExchangeOfferings"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "DescribeClusterDbRevisions",
            "FullActionName": "redshift::DescribeClusterDbRevisions"
          },
          {
            "ActionName": "DescribeClusterTracks",
            "FullActionName": "redshift::DescribeClusterTracks"
          },
          {
            "ActionName": "DescribeClusters",
            "FullActionName": "redshift::DescribeClusters"
          },
          {
            "ActionName": "DescribeEvents",
            "FullActionName": "redshift::DescribeEvents"
          },
          {
            "ActionName": "DescribeNodeConfigurationOptions",
            "FullActionName": "redshift::DescribeNodeConfigurationOptions"
          },
          {
            "ActionName": "ListDatabases",
            "FullActionName": "redshift::ListDatabases"
          },
          {
            "ActionName": "ListSavedQueries",
            "FullActionName": "redshift::ListSavedQueries"
          },
          {
            "ActionName": "ListSchemas",
            "FullActionName": "redshift::ListSchemas"
          },
          {
            "ActionName": "ListTables",
            "FullActionName": "redshift::ListTables"
          },
          {
            "ActionName": "ViewQueriesFromConsole",
            "FullActionName": "redshift::ViewQueriesFromConsole"
          },
          {
            "ActionName": "ViewQueriesInConsole",
            "FullActionName": "redshift::ViewQueriesInConsole"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Rekognition",
    "AccessLevels": [
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "CompareFaces",
            "FullActionName": "rekognition::CompareFaces"
          },
          {
            "ActionName": "DescribeCollection",
            "FullActionName": "rekognition::DescribeCollection"
          },
          {
            "ActionName": "DescribeStreamProcessor",
            "FullActionName": "rekognition::DescribeStreamProcessor"
          },
          {
            "ActionName": "DetectFaces",
            "FullActionName": "rekognition::DetectFaces"
          },
          {
            "ActionName": "DetectLabels",
            "FullActionName": "rekognition::DetectLabels"
          },
          {
            "ActionName": "DetectModerationLabels",
            "FullActionName": "rekognition::DetectModerationLabels"
          },
          {
            "ActionName": "DetectText",
            "FullActionName": "rekognition::DetectText"
          },
          {
            "ActionName": "GetCelebrityInfo",
            "FullActionName": "rekognition::GetCelebrityInfo"
          },
          {
            "ActionName": "GetCelebrityRecognition",
            "FullActionName": "rekognition::GetCelebrityRecognition"
          },
          {
            "ActionName": "GetContentModeration",
            "FullActionName": "rekognition::GetContentModeration"
          },
          {
            "ActionName": "GetFaceDetection",
            "FullActionName": "rekognition::GetFaceDetection"
          },
          {
            "ActionName": "GetFaceSearch",
            "FullActionName": "rekognition::GetFaceSearch"
          },
          {
            "ActionName": "GetLabelDetection",
            "FullActionName": "rekognition::GetLabelDetection"
          },
          {
            "ActionName": "GetPersonTracking",
            "FullActionName": "rekognition::GetPersonTracking"
          },
          {
            "ActionName": "ListCollections",
            "FullActionName": "rekognition::ListCollections"
          },
          {
            "ActionName": "ListFaces",
            "FullActionName": "rekognition::ListFaces"
          },
          {
            "ActionName": "RecognizeCelebrities",
            "FullActionName": "rekognition::RecognizeCelebrities"
          },
          {
            "ActionName": "SearchFaces",
            "FullActionName": "rekognition::SearchFaces"
          },
          {
            "ActionName": "SearchFacesByImage",
            "FullActionName": "rekognition::SearchFacesByImage"
          }
        ]
      },
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "CreateCollection",
            "FullActionName": "rekognition::CreateCollection"
          },
          {
            "ActionName": "CreateStreamProcessor",
            "FullActionName": "rekognition::CreateStreamProcessor"
          },
          {
            "ActionName": "DeleteCollection",
            "FullActionName": "rekognition::DeleteCollection"
          },
          {
            "ActionName": "DeleteFaces",
            "FullActionName": "rekognition::DeleteFaces"
          },
          {
            "ActionName": "DeleteStreamProcessor",
            "FullActionName": "rekognition::DeleteStreamProcessor"
          },
          {
            "ActionName": "IndexFaces",
            "FullActionName": "rekognition::IndexFaces"
          },
          {
            "ActionName": "StartCelebrityRecognition",
            "FullActionName": "rekognition::StartCelebrityRecognition"
          },
          {
            "ActionName": "StartContentModeration",
            "FullActionName": "rekognition::StartContentModeration"
          },
          {
            "ActionName": "StartFaceDetection",
            "FullActionName": "rekognition::StartFaceDetection"
          },
          {
            "ActionName": "StartFaceSearch",
            "FullActionName": "rekognition::StartFaceSearch"
          },
          {
            "ActionName": "StartLabelDetection",
            "FullActionName": "rekognition::StartLabelDetection"
          },
          {
            "ActionName": "StartPersonTracking",
            "FullActionName": "rekognition::StartPersonTracking"
          },
          {
            "ActionName": "StartStreamProcessor",
            "FullActionName": "rekognition::StartStreamProcessor"
          },
          {
            "ActionName": "StopStreamProcessor",
            "FullActionName": "rekognition::StopStreamProcessor"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListStreamProcessors",
            "FullActionName": "rekognition::ListStreamProcessors"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Resource Access Manager",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "AcceptResourceShareInvitation",
            "FullActionName": "ram::AcceptResourceShareInvitation"
          },
          {
            "ActionName": "AssociateResourceShare",
            "FullActionName": "ram::AssociateResourceShare"
          },
          {
            "ActionName": "CreateResourceShare",
            "FullActionName": "ram::CreateResourceShare"
          },
          {
            "ActionName": "DeleteResourceShare",
            "FullActionName": "ram::DeleteResourceShare"
          },
          {
            "ActionName": "DisassociateResourceShare",
            "FullActionName": "ram::DisassociateResourceShare"
          },
          {
            "ActionName": "EnableSharingWithAwsOrganization",
            "FullActionName": "ram::EnableSharingWithAwsOrganization"
          },
          {
            "ActionName": "RejectResourceShareInvitation",
            "FullActionName": "ram::RejectResourceShareInvitation"
          },
          {
            "ActionName": "TagResource",
            "FullActionName": "ram::TagResource"
          },
          {
            "ActionName": "UntagResource",
            "FullActionName": "ram::UntagResource"
          },
          {
            "ActionName": "UpdateResourceShare",
            "FullActionName": "ram::UpdateResourceShare"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "GetResourcePolicies",
            "FullActionName": "ram::GetResourcePolicies"
          },
          {
            "ActionName": "GetResourceShareAssociations",
            "FullActionName": "ram::GetResourceShareAssociations"
          },
          {
            "ActionName": "GetResourceShareInvitations",
            "FullActionName": "ram::GetResourceShareInvitations"
          },
          {
            "ActionName": "GetResourceShares",
            "FullActionName": "ram::GetResourceShares"
          },
          {
            "ActionName": "ListPendingInvitationResources",
            "FullActionName": "ram::ListPendingInvitationResources"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListPrincipals",
            "FullActionName": "ram::ListPrincipals"
          },
          {
            "ActionName": "ListResources",
            "FullActionName": "ram::ListResources"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Resource Group Tagging",
    "AccessLevels": [
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "GetResources",
            "FullActionName": "tag::GetResources"
          },
          {
            "ActionName": "GetTagKeys",
            "FullActionName": "tag::GetTagKeys"
          },
          {
            "ActionName": "GetTagValues",
            "FullActionName": "tag::GetTagValues"
          }
        ]
      },
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "TagResources",
            "FullActionName": "tag::TagResources"
          },
          {
            "ActionName": "UntagResources",
            "FullActionName": "tag::UntagResources"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Resource Groups",
    "AccessLevels": [
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "CreateGroup",
            "FullActionName": "resource-groups::CreateGroup"
          },
          {
            "ActionName": "Tag",
            "FullActionName": "resource-groups::Tag"
          },
          {
            "ActionName": "Untag",
            "FullActionName": "resource-groups::Untag"
          }
        ]
      },
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "DeleteGroup",
            "FullActionName": "resource-groups::DeleteGroup"
          },
          {
            "ActionName": "UpdateGroup",
            "FullActionName": "resource-groups::UpdateGroup"
          },
          {
            "ActionName": "UpdateGroupQuery",
            "FullActionName": "resource-groups::UpdateGroupQuery"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "GetGroup",
            "FullActionName": "resource-groups::GetGroup"
          },
          {
            "ActionName": "GetGroupQuery",
            "FullActionName": "resource-groups::GetGroupQuery"
          },
          {
            "ActionName": "GetTags",
            "FullActionName": "resource-groups::GetTags"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListGroupResources",
            "FullActionName": "resource-groups::ListGroupResources"
          },
          {
            "ActionName": "ListGroups",
            "FullActionName": "resource-groups::ListGroups"
          },
          {
            "ActionName": "SearchResources",
            "FullActionName": "resource-groups::SearchResources"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "RoboMaker",
    "AccessLevels": [
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "BatchDescribeSimulationJob",
            "FullActionName": "robomaker::BatchDescribeSimulationJob"
          },
          {
            "ActionName": "DescribeDeploymentJob",
            "FullActionName": "robomaker::DescribeDeploymentJob"
          },
          {
            "ActionName": "DescribeFleet",
            "FullActionName": "robomaker::DescribeFleet"
          },
          {
            "ActionName": "DescribeRobot",
            "FullActionName": "robomaker::DescribeRobot"
          },
          {
            "ActionName": "DescribeRobotApplication",
            "FullActionName": "robomaker::DescribeRobotApplication"
          },
          {
            "ActionName": "DescribeSimulationApplication",
            "FullActionName": "robomaker::DescribeSimulationApplication"
          },
          {
            "ActionName": "DescribeSimulationJob",
            "FullActionName": "robomaker::DescribeSimulationJob"
          }
        ]
      },
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "CancelDeploymentJob",
            "FullActionName": "robomaker::CancelDeploymentJob"
          },
          {
            "ActionName": "CancelSimulationJob",
            "FullActionName": "robomaker::CancelSimulationJob"
          },
          {
            "ActionName": "CreateDeploymentJob",
            "FullActionName": "robomaker::CreateDeploymentJob"
          },
          {
            "ActionName": "CreateFleet",
            "FullActionName": "robomaker::CreateFleet"
          },
          {
            "ActionName": "CreateRobot",
            "FullActionName": "robomaker::CreateRobot"
          },
          {
            "ActionName": "CreateRobotApplication",
            "FullActionName": "robomaker::CreateRobotApplication"
          },
          {
            "ActionName": "CreateRobotApplicationVersion",
            "FullActionName": "robomaker::CreateRobotApplicationVersion"
          },
          {
            "ActionName": "CreateSimulationApplication",
            "FullActionName": "robomaker::CreateSimulationApplication"
          },
          {
            "ActionName": "CreateSimulationApplicationVersion",
            "FullActionName": "robomaker::CreateSimulationApplicationVersion"
          },
          {
            "ActionName": "CreateSimulationJob",
            "FullActionName": "robomaker::CreateSimulationJob"
          },
          {
            "ActionName": "DeleteFleet",
            "FullActionName": "robomaker::DeleteFleet"
          },
          {
            "ActionName": "DeleteRobot",
            "FullActionName": "robomaker::DeleteRobot"
          },
          {
            "ActionName": "DeleteRobotApplication",
            "FullActionName": "robomaker::DeleteRobotApplication"
          },
          {
            "ActionName": "DeleteSimulationApplication",
            "FullActionName": "robomaker::DeleteSimulationApplication"
          },
          {
            "ActionName": "DeregisterRobot",
            "FullActionName": "robomaker::DeregisterRobot"
          },
          {
            "ActionName": "RegisterRobot",
            "FullActionName": "robomaker::RegisterRobot"
          },
          {
            "ActionName": "RestartSimulationJob",
            "FullActionName": "robomaker::RestartSimulationJob"
          },
          {
            "ActionName": "SyncDeploymentJob",
            "FullActionName": "robomaker::SyncDeploymentJob"
          },
          {
            "ActionName": "TagResource",
            "FullActionName": "robomaker::TagResource"
          },
          {
            "ActionName": "UntagResource",
            "FullActionName": "robomaker::UntagResource"
          },
          {
            "ActionName": "UpdateRobotApplication",
            "FullActionName": "robomaker::UpdateRobotApplication"
          },
          {
            "ActionName": "UpdateSimulationApplication",
            "FullActionName": "robomaker::UpdateSimulationApplication"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListDeploymentJobs",
            "FullActionName": "robomaker::ListDeploymentJobs"
          },
          {
            "ActionName": "ListFleets",
            "FullActionName": "robomaker::ListFleets"
          },
          {
            "ActionName": "ListRobotApplications",
            "FullActionName": "robomaker::ListRobotApplications"
          },
          {
            "ActionName": "ListRobots",
            "FullActionName": "robomaker::ListRobots"
          },
          {
            "ActionName": "ListSimulationApplications",
            "FullActionName": "robomaker::ListSimulationApplications"
          },
          {
            "ActionName": "ListSimulationJobs",
            "FullActionName": "robomaker::ListSimulationJobs"
          },
          {
            "ActionName": "ListTagsForResource",
            "FullActionName": "robomaker::ListTagsForResource"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Route 53",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "AssociateVPCWithHostedZone",
            "FullActionName": "route53::AssociateVPCWithHostedZone"
          },
          {
            "ActionName": "ChangeResourceRecordSets",
            "FullActionName": "route53::ChangeResourceRecordSets"
          },
          {
            "ActionName": "CreateHealthCheck",
            "FullActionName": "route53::CreateHealthCheck"
          },
          {
            "ActionName": "CreateHostedZone",
            "FullActionName": "route53::CreateHostedZone"
          },
          {
            "ActionName": "CreateQueryLoggingConfig",
            "FullActionName": "route53::CreateQueryLoggingConfig"
          },
          {
            "ActionName": "CreateReusableDelegationSet",
            "FullActionName": "route53::CreateReusableDelegationSet"
          },
          {
            "ActionName": "CreateTrafficPolicy",
            "FullActionName": "route53::CreateTrafficPolicy"
          },
          {
            "ActionName": "CreateTrafficPolicyInstance",
            "FullActionName": "route53::CreateTrafficPolicyInstance"
          },
          {
            "ActionName": "CreateTrafficPolicyVersion",
            "FullActionName": "route53::CreateTrafficPolicyVersion"
          },
          {
            "ActionName": "CreateVPCAssociationAuthorization",
            "FullActionName": "route53::CreateVPCAssociationAuthorization"
          },
          {
            "ActionName": "DeleteHealthCheck",
            "FullActionName": "route53::DeleteHealthCheck"
          },
          {
            "ActionName": "DeleteHostedZone",
            "FullActionName": "route53::DeleteHostedZone"
          },
          {
            "ActionName": "DeleteQueryLoggingConfig",
            "FullActionName": "route53::DeleteQueryLoggingConfig"
          },
          {
            "ActionName": "DeleteReusableDelegationSet",
            "FullActionName": "route53::DeleteReusableDelegationSet"
          },
          {
            "ActionName": "DeleteTrafficPolicy",
            "FullActionName": "route53::DeleteTrafficPolicy"
          },
          {
            "ActionName": "DeleteTrafficPolicyInstance",
            "FullActionName": "route53::DeleteTrafficPolicyInstance"
          },
          {
            "ActionName": "DeleteVPCAssociationAuthorization",
            "FullActionName": "route53::DeleteVPCAssociationAuthorization"
          },
          {
            "ActionName": "DisassociateVPCFromHostedZone",
            "FullActionName": "route53::DisassociateVPCFromHostedZone"
          },
          {
            "ActionName": "UpdateHealthCheck",
            "FullActionName": "route53::UpdateHealthCheck"
          },
          {
            "ActionName": "UpdateHostedZoneComment",
            "FullActionName": "route53::UpdateHostedZoneComment"
          },
          {
            "ActionName": "UpdateTrafficPolicyComment",
            "FullActionName": "route53::UpdateTrafficPolicyComment"
          },
          {
            "ActionName": "UpdateTrafficPolicyInstance",
            "FullActionName": "route53::UpdateTrafficPolicyInstance"
          }
        ]
      },
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "ChangeTagsForResource",
            "FullActionName": "route53::ChangeTagsForResource"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "GetAccountLimit",
            "FullActionName": "route53::GetAccountLimit"
          },
          {
            "ActionName": "GetHealthCheck",
            "FullActionName": "route53::GetHealthCheck"
          },
          {
            "ActionName": "GetHostedZoneLimit",
            "FullActionName": "route53::GetHostedZoneLimit"
          },
          {
            "ActionName": "GetQueryLoggingConfig",
            "FullActionName": "route53::GetQueryLoggingConfig"
          },
          {
            "ActionName": "GetReusableDelegationSetLimit",
            "FullActionName": "route53::GetReusableDelegationSetLimit"
          },
          {
            "ActionName": "GetTrafficPolicy",
            "FullActionName": "route53::GetTrafficPolicy"
          },
          {
            "ActionName": "GetTrafficPolicyInstance",
            "FullActionName": "route53::GetTrafficPolicyInstance"
          },
          {
            "ActionName": "GetTrafficPolicyInstanceCount",
            "FullActionName": "route53::GetTrafficPolicyInstanceCount"
          },
          {
            "ActionName": "ListTagsForResource",
            "FullActionName": "route53::ListTagsForResource"
          },
          {
            "ActionName": "ListTagsForResources",
            "FullActionName": "route53::ListTagsForResources"
          },
          {
            "ActionName": "ListTrafficPolicies",
            "FullActionName": "route53::ListTrafficPolicies"
          },
          {
            "ActionName": "ListTrafficPolicyInstances",
            "FullActionName": "route53::ListTrafficPolicyInstances"
          },
          {
            "ActionName": "ListTrafficPolicyInstancesByHostedZone",
            "FullActionName": "route53::ListTrafficPolicyInstancesByHostedZone"
          },
          {
            "ActionName": "ListTrafficPolicyInstancesByPolicy",
            "FullActionName": "route53::ListTrafficPolicyInstancesByPolicy"
          },
          {
            "ActionName": "ListTrafficPolicyVersions",
            "FullActionName": "route53::ListTrafficPolicyVersions"
          },
          {
            "ActionName": "ListVPCAssociationAuthorizations",
            "FullActionName": "route53::ListVPCAssociationAuthorizations"
          },
          {
            "ActionName": "TestDNSAnswer",
            "FullActionName": "route53::TestDNSAnswer"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "GetChange",
            "FullActionName": "route53::GetChange"
          },
          {
            "ActionName": "GetCheckerIpRanges",
            "FullActionName": "route53::GetCheckerIpRanges"
          },
          {
            "ActionName": "GetGeoLocation",
            "FullActionName": "route53::GetGeoLocation"
          },
          {
            "ActionName": "GetHealthCheckCount",
            "FullActionName": "route53::GetHealthCheckCount"
          },
          {
            "ActionName": "GetHealthCheckLastFailureReason",
            "FullActionName": "route53::GetHealthCheckLastFailureReason"
          },
          {
            "ActionName": "GetHealthCheckStatus",
            "FullActionName": "route53::GetHealthCheckStatus"
          },
          {
            "ActionName": "GetHostedZone",
            "FullActionName": "route53::GetHostedZone"
          },
          {
            "ActionName": "GetHostedZoneCount",
            "FullActionName": "route53::GetHostedZoneCount"
          },
          {
            "ActionName": "GetReusableDelegationSet",
            "FullActionName": "route53::GetReusableDelegationSet"
          },
          {
            "ActionName": "ListGeoLocations",
            "FullActionName": "route53::ListGeoLocations"
          },
          {
            "ActionName": "ListHealthChecks",
            "FullActionName": "route53::ListHealthChecks"
          },
          {
            "ActionName": "ListHostedZones",
            "FullActionName": "route53::ListHostedZones"
          },
          {
            "ActionName": "ListHostedZonesByName",
            "FullActionName": "route53::ListHostedZonesByName"
          },
          {
            "ActionName": "ListQueryLoggingConfigs",
            "FullActionName": "route53::ListQueryLoggingConfigs"
          },
          {
            "ActionName": "ListResourceRecordSets",
            "FullActionName": "route53::ListResourceRecordSets"
          },
          {
            "ActionName": "ListReusableDelegationSets",
            "FullActionName": "route53::ListReusableDelegationSets"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Route 53 Resolver",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "AssociateResolverEndpointIpAddress",
            "FullActionName": "route53resolver::AssociateResolverEndpointIpAddress"
          },
          {
            "ActionName": "AssociateResolverRule",
            "FullActionName": "route53resolver::AssociateResolverRule"
          },
          {
            "ActionName": "CreateResolverEndpoint",
            "FullActionName": "route53resolver::CreateResolverEndpoint"
          },
          {
            "ActionName": "CreateResolverRule",
            "FullActionName": "route53resolver::CreateResolverRule"
          },
          {
            "ActionName": "DeleteResolverEndpoint",
            "FullActionName": "route53resolver::DeleteResolverEndpoint"
          },
          {
            "ActionName": "DeleteResolverRule",
            "FullActionName": "route53resolver::DeleteResolverRule"
          },
          {
            "ActionName": "DisassociateResolverEndpointIpAddress",
            "FullActionName": "route53resolver::DisassociateResolverEndpointIpAddress"
          },
          {
            "ActionName": "DisassociateResolverRule",
            "FullActionName": "route53resolver::DisassociateResolverRule"
          },
          {
            "ActionName": "PutResolverRulePolicy",
            "FullActionName": "route53resolver::PutResolverRulePolicy"
          },
          {
            "ActionName": "UpdateResolverEndpoint",
            "FullActionName": "route53resolver::UpdateResolverEndpoint"
          },
          {
            "ActionName": "UpdateResolverRule",
            "FullActionName": "route53resolver::UpdateResolverRule"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "GetResolverEndpoint",
            "FullActionName": "route53resolver::GetResolverEndpoint"
          },
          {
            "ActionName": "GetResolverRule",
            "FullActionName": "route53resolver::GetResolverRule"
          },
          {
            "ActionName": "GetResolverRuleAssociation",
            "FullActionName": "route53resolver::GetResolverRuleAssociation"
          },
          {
            "ActionName": "GetResolverRulePolicy",
            "FullActionName": "route53resolver::GetResolverRulePolicy"
          },
          {
            "ActionName": "ListTagsForResource",
            "FullActionName": "route53resolver::ListTagsForResource"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListResolverEndpointIpAddresses",
            "FullActionName": "route53resolver::ListResolverEndpointIpAddresses"
          },
          {
            "ActionName": "ListResolverEndpoints",
            "FullActionName": "route53resolver::ListResolverEndpoints"
          },
          {
            "ActionName": "ListResolverRuleAssociations",
            "FullActionName": "route53resolver::ListResolverRuleAssociations"
          },
          {
            "ActionName": "ListResolverRules",
            "FullActionName": "route53resolver::ListResolverRules"
          }
        ]
      },
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "TagResource",
            "FullActionName": "route53resolver::TagResource"
          },
          {
            "ActionName": "UntagResource",
            "FullActionName": "route53resolver::UntagResource"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Route53 Domains",
    "AccessLevels": [
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "CheckDomainAvailability",
            "FullActionName": "route53domains::CheckDomainAvailability"
          },
          {
            "ActionName": "GetContactReachabilityStatus",
            "FullActionName": "route53domains::GetContactReachabilityStatus"
          },
          {
            "ActionName": "GetDomainDetail",
            "FullActionName": "route53domains::GetDomainDetail"
          },
          {
            "ActionName": "GetDomainSuggestions",
            "FullActionName": "route53domains::GetDomainSuggestions"
          },
          {
            "ActionName": "GetOperationDetail",
            "FullActionName": "route53domains::GetOperationDetail"
          },
          {
            "ActionName": "ViewBilling",
            "FullActionName": "route53domains::ViewBilling"
          }
        ]
      },
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "DeleteTagsForDomain",
            "FullActionName": "route53domains::DeleteTagsForDomain"
          },
          {
            "ActionName": "UpdateTagsForDomain",
            "FullActionName": "route53domains::UpdateTagsForDomain"
          }
        ]
      },
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "DisableDomainAutoRenew",
            "FullActionName": "route53domains::DisableDomainAutoRenew"
          },
          {
            "ActionName": "DisableDomainTransferLock",
            "FullActionName": "route53domains::DisableDomainTransferLock"
          },
          {
            "ActionName": "EnableDomainAutoRenew",
            "FullActionName": "route53domains::EnableDomainAutoRenew"
          },
          {
            "ActionName": "EnableDomainTransferLock",
            "FullActionName": "route53domains::EnableDomainTransferLock"
          },
          {
            "ActionName": "RegisterDomain",
            "FullActionName": "route53domains::RegisterDomain"
          },
          {
            "ActionName": "RenewDomain",
            "FullActionName": "route53domains::RenewDomain"
          },
          {
            "ActionName": "ResendContactReachabilityEmail",
            "FullActionName": "route53domains::ResendContactReachabilityEmail"
          },
          {
            "ActionName": "RetrieveDomainAuthCode",
            "FullActionName": "route53domains::RetrieveDomainAuthCode"
          },
          {
            "ActionName": "TransferDomain",
            "FullActionName": "route53domains::TransferDomain"
          },
          {
            "ActionName": "UpdateDomainContact",
            "FullActionName": "route53domains::UpdateDomainContact"
          },
          {
            "ActionName": "UpdateDomainContactPrivacy",
            "FullActionName": "route53domains::UpdateDomainContactPrivacy"
          },
          {
            "ActionName": "UpdateDomainNameservers",
            "FullActionName": "route53domains::UpdateDomainNameservers"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListDomains",
            "FullActionName": "route53domains::ListDomains"
          },
          {
            "ActionName": "ListOperations",
            "FullActionName": "route53domains::ListOperations"
          },
          {
            "ActionName": "ListTagsForDomain",
            "FullActionName": "route53domains::ListTagsForDomain"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "S3",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "AbortMultipartUpload",
            "FullActionName": "s3::AbortMultipartUpload"
          },
          {
            "ActionName": "CreateBucket",
            "FullActionName": "s3::CreateBucket"
          },
          {
            "ActionName": "CreateJob",
            "FullActionName": "s3::CreateJob"
          },
          {
            "ActionName": "DeleteBucket",
            "FullActionName": "s3::DeleteBucket"
          },
          {
            "ActionName": "DeleteBucketWebsite",
            "FullActionName": "s3::DeleteBucketWebsite"
          },
          {
            "ActionName": "DeleteObject",
            "FullActionName": "s3::DeleteObject"
          },
          {
            "ActionName": "DeleteObjectVersion",
            "FullActionName": "s3::DeleteObjectVersion"
          },
          {
            "ActionName": "GetBucketObjectLockConfiguration",
            "FullActionName": "s3::GetBucketObjectLockConfiguration"
          },
          {
            "ActionName": "GetObjectLegalHold",
            "FullActionName": "s3::GetObjectLegalHold"
          },
          {
            "ActionName": "GetObjectRetention",
            "FullActionName": "s3::GetObjectRetention"
          },
          {
            "ActionName": "PutAccelerateConfiguration",
            "FullActionName": "s3::PutAccelerateConfiguration"
          },
          {
            "ActionName": "PutAnalyticsConfiguration",
            "FullActionName": "s3::PutAnalyticsConfiguration"
          },
          {
            "ActionName": "PutBucketCORS",
            "FullActionName": "s3::PutBucketCORS"
          },
          {
            "ActionName": "PutBucketLogging",
            "FullActionName": "s3::PutBucketLogging"
          },
          {
            "ActionName": "PutBucketNotification",
            "FullActionName": "s3::PutBucketNotification"
          },
          {
            "ActionName": "PutBucketObjectLockConfiguration",
            "FullActionName": "s3::PutBucketObjectLockConfiguration"
          },
          {
            "ActionName": "PutBucketRequestPayment",
            "FullActionName": "s3::PutBucketRequestPayment"
          },
          {
            "ActionName": "PutBucketVersioning",
            "FullActionName": "s3::PutBucketVersioning"
          },
          {
            "ActionName": "PutBucketWebsite",
            "FullActionName": "s3::PutBucketWebsite"
          },
          {
            "ActionName": "PutEncryptionConfiguration",
            "FullActionName": "s3::PutEncryptionConfiguration"
          },
          {
            "ActionName": "PutInventoryConfiguration",
            "FullActionName": "s3::PutInventoryConfiguration"
          },
          {
            "ActionName": "PutLifecycleConfiguration",
            "FullActionName": "s3::PutLifecycleConfiguration"
          },
          {
            "ActionName": "PutMetricsConfiguration",
            "FullActionName": "s3::PutMetricsConfiguration"
          },
          {
            "ActionName": "PutObject",
            "FullActionName": "s3::PutObject"
          },
          {
            "ActionName": "PutObjectLegalHold",
            "FullActionName": "s3::PutObjectLegalHold"
          },
          {
            "ActionName": "PutObjectRetention",
            "FullActionName": "s3::PutObjectRetention"
          },
          {
            "ActionName": "PutReplicationConfiguration",
            "FullActionName": "s3::PutReplicationConfiguration"
          },
          {
            "ActionName": "ReplicateDelete",
            "FullActionName": "s3::ReplicateDelete"
          },
          {
            "ActionName": "ReplicateObject",
            "FullActionName": "s3::ReplicateObject"
          },
          {
            "ActionName": "RestoreObject",
            "FullActionName": "s3::RestoreObject"
          },
          {
            "ActionName": "UpdateJobPriority",
            "FullActionName": "s3::UpdateJobPriority"
          },
          {
            "ActionName": "UpdateJobStatus",
            "FullActionName": "s3::UpdateJobStatus"
          }
        ]
      },
      {
        "AccessLevel": "Permissions",
        "Actions": [
          {
            "ActionName": "DeleteBucketPolicy",
            "FullActionName": "s3::DeleteBucketPolicy"
          },
          {
            "ActionName": "ObjectOwnerOverrideToBucketOwner",
            "FullActionName": "s3::ObjectOwnerOverrideToBucketOwner"
          },
          {
            "ActionName": "PutAccountPublicAccessBlock",
            "FullActionName": "s3::PutAccountPublicAccessBlock"
          },
          {
            "ActionName": "PutBucketAcl",
            "FullActionName": "s3::PutBucketAcl"
          },
          {
            "ActionName": "PutBucketPolicy",
            "FullActionName": "s3::PutBucketPolicy"
          },
          {
            "ActionName": "PutBucketPublicAccessBlock",
            "FullActionName": "s3::PutBucketPublicAccessBlock"
          },
          {
            "ActionName": "PutObjectAcl",
            "FullActionName": "s3::PutObjectAcl"
          },
          {
            "ActionName": "PutObjectVersionAcl",
            "FullActionName": "s3::PutObjectVersionAcl"
          }
        ]
      },
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "DeleteObjectTagging",
            "FullActionName": "s3::DeleteObjectTagging"
          },
          {
            "ActionName": "DeleteObjectVersionTagging",
            "FullActionName": "s3::DeleteObjectVersionTagging"
          },
          {
            "ActionName": "PutBucketTagging",
            "FullActionName": "s3::PutBucketTagging"
          },
          {
            "ActionName": "PutObjectTagging",
            "FullActionName": "s3::PutObjectTagging"
          },
          {
            "ActionName": "PutObjectVersionTagging",
            "FullActionName": "s3::PutObjectVersionTagging"
          },
          {
            "ActionName": "ReplicateTags",
            "FullActionName": "s3::ReplicateTags"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeJob",
            "FullActionName": "s3::DescribeJob"
          },
          {
            "ActionName": "GetAccelerateConfiguration",
            "FullActionName": "s3::GetAccelerateConfiguration"
          },
          {
            "ActionName": "GetAccountPublicAccessBlock",
            "FullActionName": "s3::GetAccountPublicAccessBlock"
          },
          {
            "ActionName": "GetAnalyticsConfiguration",
            "FullActionName": "s3::GetAnalyticsConfiguration"
          },
          {
            "ActionName": "GetBucketAcl",
            "FullActionName": "s3::GetBucketAcl"
          },
          {
            "ActionName": "GetBucketCORS",
            "FullActionName": "s3::GetBucketCORS"
          },
          {
            "ActionName": "GetBucketLocation",
            "FullActionName": "s3::GetBucketLocation"
          },
          {
            "ActionName": "GetBucketLogging",
            "FullActionName": "s3::GetBucketLogging"
          },
          {
            "ActionName": "GetBucketNotification",
            "FullActionName": "s3::GetBucketNotification"
          },
          {
            "ActionName": "GetBucketPolicy",
            "FullActionName": "s3::GetBucketPolicy"
          },
          {
            "ActionName": "GetBucketPolicyStatus",
            "FullActionName": "s3::GetBucketPolicyStatus"
          },
          {
            "ActionName": "GetBucketPublicAccessBlock",
            "FullActionName": "s3::GetBucketPublicAccessBlock"
          },
          {
            "ActionName": "GetBucketRequestPayment",
            "FullActionName": "s3::GetBucketRequestPayment"
          },
          {
            "ActionName": "GetBucketTagging",
            "FullActionName": "s3::GetBucketTagging"
          },
          {
            "ActionName": "GetBucketVersioning",
            "FullActionName": "s3::GetBucketVersioning"
          },
          {
            "ActionName": "GetBucketWebsite",
            "FullActionName": "s3::GetBucketWebsite"
          },
          {
            "ActionName": "GetEncryptionConfiguration",
            "FullActionName": "s3::GetEncryptionConfiguration"
          },
          {
            "ActionName": "GetInventoryConfiguration",
            "FullActionName": "s3::GetInventoryConfiguration"
          },
          {
            "ActionName": "GetLifecycleConfiguration",
            "FullActionName": "s3::GetLifecycleConfiguration"
          },
          {
            "ActionName": "GetMetricsConfiguration",
            "FullActionName": "s3::GetMetricsConfiguration"
          },
          {
            "ActionName": "GetObject",
            "FullActionName": "s3::GetObject"
          },
          {
            "ActionName": "GetObjectAcl",
            "FullActionName": "s3::GetObjectAcl"
          },
          {
            "ActionName": "GetObjectTagging",
            "FullActionName": "s3::GetObjectTagging"
          },
          {
            "ActionName": "GetObjectTorrent",
            "FullActionName": "s3::GetObjectTorrent"
          },
          {
            "ActionName": "GetObjectVersion",
            "FullActionName": "s3::GetObjectVersion"
          },
          {
            "ActionName": "GetObjectVersionAcl",
            "FullActionName": "s3::GetObjectVersionAcl"
          },
          {
            "ActionName": "GetObjectVersionForReplication",
            "FullActionName": "s3::GetObjectVersionForReplication"
          },
          {
            "ActionName": "GetObjectVersionTagging",
            "FullActionName": "s3::GetObjectVersionTagging"
          },
          {
            "ActionName": "GetObjectVersionTorrent",
            "FullActionName": "s3::GetObjectVersionTorrent"
          },
          {
            "ActionName": "GetReplicationConfiguration",
            "FullActionName": "s3::GetReplicationConfiguration"
          },
          {
            "ActionName": "ListBucketByTags",
            "FullActionName": "s3::ListBucketByTags"
          },
          {
            "ActionName": "ListBucketMultipartUploads",
            "FullActionName": "s3::ListBucketMultipartUploads"
          },
          {
            "ActionName": "ListBucketVersions",
            "FullActionName": "s3::ListBucketVersions"
          },
          {
            "ActionName": "ListJobs",
            "FullActionName": "s3::ListJobs"
          },
          {
            "ActionName": "ListMultipartUploadParts",
            "FullActionName": "s3::ListMultipartUploadParts"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "HeadBucket",
            "FullActionName": "s3::HeadBucket"
          },
          {
            "ActionName": "ListAllMyBuckets",
            "FullActionName": "s3::ListAllMyBuckets"
          },
          {
            "ActionName": "ListBucket",
            "FullActionName": "s3::ListBucket"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "SES",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "CloneReceiptRuleSet",
            "FullActionName": "ses::CloneReceiptRuleSet"
          },
          {
            "ActionName": "CreateConfigurationSet",
            "FullActionName": "ses::CreateConfigurationSet"
          },
          {
            "ActionName": "CreateConfigurationSetEventDestination",
            "FullActionName": "ses::CreateConfigurationSetEventDestination"
          },
          {
            "ActionName": "CreateConfigurationSetTrackingOptions",
            "FullActionName": "ses::CreateConfigurationSetTrackingOptions"
          },
          {
            "ActionName": "CreateCustomVerificationEmailTemplate",
            "FullActionName": "ses::CreateCustomVerificationEmailTemplate"
          },
          {
            "ActionName": "CreateReceiptFilter",
            "FullActionName": "ses::CreateReceiptFilter"
          },
          {
            "ActionName": "CreateReceiptRule",
            "FullActionName": "ses::CreateReceiptRule"
          },
          {
            "ActionName": "CreateReceiptRuleSet",
            "FullActionName": "ses::CreateReceiptRuleSet"
          },
          {
            "ActionName": "CreateTemplate",
            "FullActionName": "ses::CreateTemplate"
          },
          {
            "ActionName": "DeleteConfigurationSet",
            "FullActionName": "ses::DeleteConfigurationSet"
          },
          {
            "ActionName": "DeleteConfigurationSetEventDestination",
            "FullActionName": "ses::DeleteConfigurationSetEventDestination"
          },
          {
            "ActionName": "DeleteConfigurationSetTrackingOptions",
            "FullActionName": "ses::DeleteConfigurationSetTrackingOptions"
          },
          {
            "ActionName": "DeleteCustomVerificationEmailTemplate",
            "FullActionName": "ses::DeleteCustomVerificationEmailTemplate"
          },
          {
            "ActionName": "DeleteIdentity",
            "FullActionName": "ses::DeleteIdentity"
          },
          {
            "ActionName": "DeleteIdentityPolicy",
            "FullActionName": "ses::DeleteIdentityPolicy"
          },
          {
            "ActionName": "DeleteReceiptFilter",
            "FullActionName": "ses::DeleteReceiptFilter"
          },
          {
            "ActionName": "DeleteReceiptRule",
            "FullActionName": "ses::DeleteReceiptRule"
          },
          {
            "ActionName": "DeleteReceiptRuleSet",
            "FullActionName": "ses::DeleteReceiptRuleSet"
          },
          {
            "ActionName": "DeleteTemplate",
            "FullActionName": "ses::DeleteTemplate"
          },
          {
            "ActionName": "DeleteVerifiedEmailAddress",
            "FullActionName": "ses::DeleteVerifiedEmailAddress"
          },
          {
            "ActionName": "PutIdentityPolicy",
            "FullActionName": "ses::PutIdentityPolicy"
          },
          {
            "ActionName": "ReorderReceiptRuleSet",
            "FullActionName": "ses::ReorderReceiptRuleSet"
          },
          {
            "ActionName": "SendBounce",
            "FullActionName": "ses::SendBounce"
          },
          {
            "ActionName": "SendBulkTemplatedEmail",
            "FullActionName": "ses::SendBulkTemplatedEmail"
          },
          {
            "ActionName": "SendCustomVerificationEmail",
            "FullActionName": "ses::SendCustomVerificationEmail"
          },
          {
            "ActionName": "SendEmail",
            "FullActionName": "ses::SendEmail"
          },
          {
            "ActionName": "SendRawEmail",
            "FullActionName": "ses::SendRawEmail"
          },
          {
            "ActionName": "SendTemplatedEmail",
            "FullActionName": "ses::SendTemplatedEmail"
          },
          {
            "ActionName": "SetActiveReceiptRuleSet",
            "FullActionName": "ses::SetActiveReceiptRuleSet"
          },
          {
            "ActionName": "SetIdentityDkimEnabled",
            "FullActionName": "ses::SetIdentityDkimEnabled"
          },
          {
            "ActionName": "SetIdentityFeedbackForwardingEnabled",
            "FullActionName": "ses::SetIdentityFeedbackForwardingEnabled"
          },
          {
            "ActionName": "SetIdentityHeadersInNotificationsEnabled",
            "FullActionName": "ses::SetIdentityHeadersInNotificationsEnabled"
          },
          {
            "ActionName": "SetIdentityMailFromDomain",
            "FullActionName": "ses::SetIdentityMailFromDomain"
          },
          {
            "ActionName": "SetIdentityNotificationTopic",
            "FullActionName": "ses::SetIdentityNotificationTopic"
          },
          {
            "ActionName": "SetReceiptRulePosition",
            "FullActionName": "ses::SetReceiptRulePosition"
          },
          {
            "ActionName": "TestRenderTemplate",
            "FullActionName": "ses::TestRenderTemplate"
          },
          {
            "ActionName": "UpdateAccountSendingEnabled",
            "FullActionName": "ses::UpdateAccountSendingEnabled"
          },
          {
            "ActionName": "UpdateConfigurationSetEventDestination",
            "FullActionName": "ses::UpdateConfigurationSetEventDestination"
          },
          {
            "ActionName": "UpdateConfigurationSetReputationMetricsEnabled",
            "FullActionName": "ses::UpdateConfigurationSetReputationMetricsEnabled"
          },
          {
            "ActionName": "UpdateConfigurationSetSendingEnabled",
            "FullActionName": "ses::UpdateConfigurationSetSendingEnabled"
          },
          {
            "ActionName": "UpdateConfigurationSetTrackingOptions",
            "FullActionName": "ses::UpdateConfigurationSetTrackingOptions"
          },
          {
            "ActionName": "UpdateCustomVerificationEmailTemplate",
            "FullActionName": "ses::UpdateCustomVerificationEmailTemplate"
          },
          {
            "ActionName": "UpdateReceiptRule",
            "FullActionName": "ses::UpdateReceiptRule"
          },
          {
            "ActionName": "UpdateTemplate",
            "FullActionName": "ses::UpdateTemplate"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeActiveReceiptRuleSet",
            "FullActionName": "ses::DescribeActiveReceiptRuleSet"
          },
          {
            "ActionName": "DescribeConfigurationSet",
            "FullActionName": "ses::DescribeConfigurationSet"
          },
          {
            "ActionName": "DescribeReceiptRule",
            "FullActionName": "ses::DescribeReceiptRule"
          },
          {
            "ActionName": "DescribeReceiptRuleSet",
            "FullActionName": "ses::DescribeReceiptRuleSet"
          },
          {
            "ActionName": "GetAccountSendingEnabled",
            "FullActionName": "ses::GetAccountSendingEnabled"
          },
          {
            "ActionName": "GetCustomVerificationEmailTemplate",
            "FullActionName": "ses::GetCustomVerificationEmailTemplate"
          },
          {
            "ActionName": "GetIdentityDkimAttributes",
            "FullActionName": "ses::GetIdentityDkimAttributes"
          },
          {
            "ActionName": "GetIdentityMailFromDomainAttributes",
            "FullActionName": "ses::GetIdentityMailFromDomainAttributes"
          },
          {
            "ActionName": "GetIdentityNotificationAttributes",
            "FullActionName": "ses::GetIdentityNotificationAttributes"
          },
          {
            "ActionName": "GetIdentityPolicies",
            "FullActionName": "ses::GetIdentityPolicies"
          },
          {
            "ActionName": "GetIdentityVerificationAttributes",
            "FullActionName": "ses::GetIdentityVerificationAttributes"
          },
          {
            "ActionName": "GetSendQuota",
            "FullActionName": "ses::GetSendQuota"
          },
          {
            "ActionName": "GetSendStatistics",
            "FullActionName": "ses::GetSendStatistics"
          },
          {
            "ActionName": "GetTemplate",
            "FullActionName": "ses::GetTemplate"
          },
          {
            "ActionName": "VerifyDomainDkim",
            "FullActionName": "ses::VerifyDomainDkim"
          },
          {
            "ActionName": "VerifyDomainIdentity",
            "FullActionName": "ses::VerifyDomainIdentity"
          },
          {
            "ActionName": "VerifyEmailAddress",
            "FullActionName": "ses::VerifyEmailAddress"
          },
          {
            "ActionName": "VerifyEmailIdentity",
            "FullActionName": "ses::VerifyEmailIdentity"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListConfigurationSets",
            "FullActionName": "ses::ListConfigurationSets"
          },
          {
            "ActionName": "ListCustomVerificationEmailTemplates",
            "FullActionName": "ses::ListCustomVerificationEmailTemplates"
          },
          {
            "ActionName": "ListIdentities",
            "FullActionName": "ses::ListIdentities"
          },
          {
            "ActionName": "ListIdentityPolicies",
            "FullActionName": "ses::ListIdentityPolicies"
          },
          {
            "ActionName": "ListReceiptFilters",
            "FullActionName": "ses::ListReceiptFilters"
          },
          {
            "ActionName": "ListReceiptRuleSets",
            "FullActionName": "ses::ListReceiptRuleSets"
          },
          {
            "ActionName": "ListTemplates",
            "FullActionName": "ses::ListTemplates"
          },
          {
            "ActionName": "ListVerifiedEmailAddresses",
            "FullActionName": "ses::ListVerifiedEmailAddresses"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "SNS",
    "AccessLevels": [
      {
        "AccessLevel": "Permissions",
        "Actions": [
          {
            "ActionName": "AddPermission",
            "FullActionName": "sns::AddPermission"
          },
          {
            "ActionName": "RemovePermission",
            "FullActionName": "sns::RemovePermission"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "CheckIfPhoneNumberIsOptedOut",
            "FullActionName": "sns::CheckIfPhoneNumberIsOptedOut"
          },
          {
            "ActionName": "GetEndpointAttributes",
            "FullActionName": "sns::GetEndpointAttributes"
          },
          {
            "ActionName": "GetPlatformApplicationAttributes",
            "FullActionName": "sns::GetPlatformApplicationAttributes"
          },
          {
            "ActionName": "GetSMSAttributes",
            "FullActionName": "sns::GetSMSAttributes"
          },
          {
            "ActionName": "GetSubscriptionAttributes",
            "FullActionName": "sns::GetSubscriptionAttributes"
          },
          {
            "ActionName": "GetTopicAttributes",
            "FullActionName": "sns::GetTopicAttributes"
          },
          {
            "ActionName": "ListPhoneNumbersOptedOut",
            "FullActionName": "sns::ListPhoneNumbersOptedOut"
          },
          {
            "ActionName": "ListTagsForResource",
            "FullActionName": "sns::ListTagsForResource"
          }
        ]
      },
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "ConfirmSubscription",
            "FullActionName": "sns::ConfirmSubscription"
          },
          {
            "ActionName": "CreatePlatformApplication",
            "FullActionName": "sns::CreatePlatformApplication"
          },
          {
            "ActionName": "CreatePlatformEndpoint",
            "FullActionName": "sns::CreatePlatformEndpoint"
          },
          {
            "ActionName": "CreateTopic",
            "FullActionName": "sns::CreateTopic"
          },
          {
            "ActionName": "DeleteEndpoint",
            "FullActionName": "sns::DeleteEndpoint"
          },
          {
            "ActionName": "DeletePlatformApplication",
            "FullActionName": "sns::DeletePlatformApplication"
          },
          {
            "ActionName": "DeleteTopic",
            "FullActionName": "sns::DeleteTopic"
          },
          {
            "ActionName": "OptInPhoneNumber",
            "FullActionName": "sns::OptInPhoneNumber"
          },
          {
            "ActionName": "Publish",
            "FullActionName": "sns::Publish"
          },
          {
            "ActionName": "SetEndpointAttributes",
            "FullActionName": "sns::SetEndpointAttributes"
          },
          {
            "ActionName": "SetPlatformApplicationAttributes",
            "FullActionName": "sns::SetPlatformApplicationAttributes"
          },
          {
            "ActionName": "SetSMSAttributes",
            "FullActionName": "sns::SetSMSAttributes"
          },
          {
            "ActionName": "SetSubscriptionAttributes",
            "FullActionName": "sns::SetSubscriptionAttributes"
          },
          {
            "ActionName": "SetTopicAttributes",
            "FullActionName": "sns::SetTopicAttributes"
          },
          {
            "ActionName": "Subscribe",
            "FullActionName": "sns::Subscribe"
          },
          {
            "ActionName": "Unsubscribe",
            "FullActionName": "sns::Unsubscribe"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListEndpointsByPlatformApplication",
            "FullActionName": "sns::ListEndpointsByPlatformApplication"
          },
          {
            "ActionName": "ListPlatformApplications",
            "FullActionName": "sns::ListPlatformApplications"
          },
          {
            "ActionName": "ListSubscriptions",
            "FullActionName": "sns::ListSubscriptions"
          },
          {
            "ActionName": "ListSubscriptionsByTopic",
            "FullActionName": "sns::ListSubscriptionsByTopic"
          },
          {
            "ActionName": "ListTopics",
            "FullActionName": "sns::ListTopics"
          }
        ]
      },
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "TagResource",
            "FullActionName": "sns::TagResource"
          },
          {
            "ActionName": "UntagResource",
            "FullActionName": "sns::UntagResource"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "SQS",
    "AccessLevels": [
      {
        "AccessLevel": "Permissions",
        "Actions": [
          {
            "ActionName": "AddPermission",
            "FullActionName": "sqs::AddPermission"
          },
          {
            "ActionName": "RemovePermission",
            "FullActionName": "sqs::RemovePermission"
          }
        ]
      },
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "ChangeMessageVisibility",
            "FullActionName": "sqs::ChangeMessageVisibility"
          },
          {
            "ActionName": "ChangeMessageVisibilityBatch",
            "FullActionName": "sqs::ChangeMessageVisibilityBatch"
          },
          {
            "ActionName": "CreateQueue",
            "FullActionName": "sqs::CreateQueue"
          },
          {
            "ActionName": "DeleteMessage",
            "FullActionName": "sqs::DeleteMessage"
          },
          {
            "ActionName": "DeleteMessageBatch",
            "FullActionName": "sqs::DeleteMessageBatch"
          },
          {
            "ActionName": "DeleteQueue",
            "FullActionName": "sqs::DeleteQueue"
          },
          {
            "ActionName": "PurgeQueue",
            "FullActionName": "sqs::PurgeQueue"
          },
          {
            "ActionName": "SendMessage",
            "FullActionName": "sqs::SendMessage"
          },
          {
            "ActionName": "SendMessageBatch",
            "FullActionName": "sqs::SendMessageBatch"
          },
          {
            "ActionName": "SetQueueAttributes",
            "FullActionName": "sqs::SetQueueAttributes"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "GetQueueAttributes",
            "FullActionName": "sqs::GetQueueAttributes"
          },
          {
            "ActionName": "GetQueueUrl",
            "FullActionName": "sqs::GetQueueUrl"
          },
          {
            "ActionName": "ListDeadLetterSourceQueues",
            "FullActionName": "sqs::ListDeadLetterSourceQueues"
          },
          {
            "ActionName": "ListQueueTags",
            "FullActionName": "sqs::ListQueueTags"
          },
          {
            "ActionName": "ReceiveMessage",
            "FullActionName": "sqs::ReceiveMessage"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListQueues",
            "FullActionName": "sqs::ListQueues"
          }
        ]
      },
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "TagQueue",
            "FullActionName": "sqs::TagQueue"
          },
          {
            "ActionName": "UntagQueue",
            "FullActionName": "sqs::UntagQueue"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "SSM Messages",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "CreateControlChannel",
            "FullActionName": "ssmmessages::CreateControlChannel"
          },
          {
            "ActionName": "CreateDataChannel",
            "FullActionName": "ssmmessages::CreateDataChannel"
          },
          {
            "ActionName": "OpenControlChannel",
            "FullActionName": "ssmmessages::OpenControlChannel"
          },
          {
            "ActionName": "OpenDataChannel",
            "FullActionName": "ssmmessages::OpenDataChannel"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "SSO",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "AddMemberToGroup",
            "FullActionName": "sso::AddMemberToGroup"
          },
          {
            "ActionName": "AssociateDirectory",
            "FullActionName": "sso::AssociateDirectory"
          },
          {
            "ActionName": "AssociateProfile",
            "FullActionName": "sso::AssociateProfile"
          },
          {
            "ActionName": "CreateAlias",
            "FullActionName": "sso::CreateAlias"
          },
          {
            "ActionName": "CreateApplicationInstance",
            "FullActionName": "sso::CreateApplicationInstance"
          },
          {
            "ActionName": "CreateApplicationInstanceCertificate",
            "FullActionName": "sso::CreateApplicationInstanceCertificate"
          },
          {
            "ActionName": "CreateGroup",
            "FullActionName": "sso::CreateGroup"
          },
          {
            "ActionName": "CreatePermissionSet",
            "FullActionName": "sso::CreatePermissionSet"
          },
          {
            "ActionName": "CreateProfile",
            "FullActionName": "sso::CreateProfile"
          },
          {
            "ActionName": "CreateTrust",
            "FullActionName": "sso::CreateTrust"
          },
          {
            "ActionName": "CreateUser",
            "FullActionName": "sso::CreateUser"
          },
          {
            "ActionName": "DeleteApplicationInstance",
            "FullActionName": "sso::DeleteApplicationInstance"
          },
          {
            "ActionName": "DeleteApplicationInstanceCertificate",
            "FullActionName": "sso::DeleteApplicationInstanceCertificate"
          },
          {
            "ActionName": "DeleteGroup",
            "FullActionName": "sso::DeleteGroup"
          },
          {
            "ActionName": "DeletePermissionSet",
            "FullActionName": "sso::DeletePermissionSet"
          },
          {
            "ActionName": "DeletePermissionsPolicy",
            "FullActionName": "sso::DeletePermissionsPolicy"
          },
          {
            "ActionName": "DeleteProfile",
            "FullActionName": "sso::DeleteProfile"
          },
          {
            "ActionName": "DeleteUser",
            "FullActionName": "sso::DeleteUser"
          },
          {
            "ActionName": "DisableUser",
            "FullActionName": "sso::DisableUser"
          },
          {
            "ActionName": "DisassociateDirectory",
            "FullActionName": "sso::DisassociateDirectory"
          },
          {
            "ActionName": "DisassociateProfile",
            "FullActionName": "sso::DisassociateProfile"
          },
          {
            "ActionName": "EnableUser",
            "FullActionName": "sso::EnableUser"
          },
          {
            "ActionName": "ImportApplicationInstanceServiceProviderMetadata",
            "FullActionName": "sso::ImportApplicationInstanceServiceProviderMetadata"
          },
          {
            "ActionName": "PutPermissionsPolicy",
            "FullActionName": "sso::PutPermissionsPolicy"
          },
          {
            "ActionName": "RemoveMemberFromGroup",
            "FullActionName": "sso::RemoveMemberFromGroup"
          },
          {
            "ActionName": "SetTemporaryPassword",
            "FullActionName": "sso::SetTemporaryPassword"
          },
          {
            "ActionName": "StartSSO",
            "FullActionName": "sso::StartSSO"
          },
          {
            "ActionName": "UpdateApplicationInstanceActiveCertificate",
            "FullActionName": "sso::UpdateApplicationInstanceActiveCertificate"
          },
          {
            "ActionName": "UpdateApplicationInstanceDisplayData",
            "FullActionName": "sso::UpdateApplicationInstanceDisplayData"
          },
          {
            "ActionName": "UpdateApplicationInstanceResponseConfiguration",
            "FullActionName": "sso::UpdateApplicationInstanceResponseConfiguration"
          },
          {
            "ActionName": "UpdateApplicationInstanceResponseSchemaConfiguration",
            "FullActionName": "sso::UpdateApplicationInstanceResponseSchemaConfiguration"
          },
          {
            "ActionName": "UpdateApplicationInstanceSecurityConfiguration",
            "FullActionName": "sso::UpdateApplicationInstanceSecurityConfiguration"
          },
          {
            "ActionName": "UpdateApplicationInstanceServiceProviderConfiguration",
            "FullActionName": "sso::UpdateApplicationInstanceServiceProviderConfiguration"
          },
          {
            "ActionName": "UpdateApplicationInstanceStatus",
            "FullActionName": "sso::UpdateApplicationInstanceStatus"
          },
          {
            "ActionName": "UpdateDirectoryAssociation",
            "FullActionName": "sso::UpdateDirectoryAssociation"
          },
          {
            "ActionName": "UpdateGroup",
            "FullActionName": "sso::UpdateGroup"
          },
          {
            "ActionName": "UpdatePermissionSet",
            "FullActionName": "sso::UpdatePermissionSet"
          },
          {
            "ActionName": "UpdateProfile",
            "FullActionName": "sso::UpdateProfile"
          },
          {
            "ActionName": "UpdateSSOConfiguration",
            "FullActionName": "sso::UpdateSSOConfiguration"
          },
          {
            "ActionName": "UpdateTrust",
            "FullActionName": "sso::UpdateTrust"
          },
          {
            "ActionName": "UpdateUser",
            "FullActionName": "sso::UpdateUser"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "DescribeGroups",
            "FullActionName": "sso::DescribeGroups"
          },
          {
            "ActionName": "DescribeUsers",
            "FullActionName": "sso::DescribeUsers"
          },
          {
            "ActionName": "ListApplicationInstances",
            "FullActionName": "sso::ListApplicationInstances"
          },
          {
            "ActionName": "ListGroupsForUser",
            "FullActionName": "sso::ListGroupsForUser"
          },
          {
            "ActionName": "ListMembersInGroup",
            "FullActionName": "sso::ListMembersInGroup"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribePermissionsPolicies",
            "FullActionName": "sso::DescribePermissionsPolicies"
          },
          {
            "ActionName": "GetApplicationInstance",
            "FullActionName": "sso::GetApplicationInstance"
          },
          {
            "ActionName": "GetApplicationTemplate",
            "FullActionName": "sso::GetApplicationTemplate"
          },
          {
            "ActionName": "GetPermissionSet",
            "FullActionName": "sso::GetPermissionSet"
          },
          {
            "ActionName": "GetPermissionsPolicy",
            "FullActionName": "sso::GetPermissionsPolicy"
          },
          {
            "ActionName": "GetProfile",
            "FullActionName": "sso::GetProfile"
          },
          {
            "ActionName": "GetSSOConfiguration",
            "FullActionName": "sso::GetSSOConfiguration"
          },
          {
            "ActionName": "GetSSOStatus",
            "FullActionName": "sso::GetSSOStatus"
          },
          {
            "ActionName": "GetTrust",
            "FullActionName": "sso::GetTrust"
          },
          {
            "ActionName": "GetUserPoolInfo",
            "FullActionName": "sso::GetUserPoolInfo"
          },
          {
            "ActionName": "ListApplicationInstanceCertificates",
            "FullActionName": "sso::ListApplicationInstanceCertificates"
          },
          {
            "ActionName": "ListApplicationTemplates",
            "FullActionName": "sso::ListApplicationTemplates"
          },
          {
            "ActionName": "ListApplications",
            "FullActionName": "sso::ListApplications"
          },
          {
            "ActionName": "ListDirectoryAssociations",
            "FullActionName": "sso::ListDirectoryAssociations"
          },
          {
            "ActionName": "ListPermissionSets",
            "FullActionName": "sso::ListPermissionSets"
          },
          {
            "ActionName": "ListProfileAssociations",
            "FullActionName": "sso::ListProfileAssociations"
          },
          {
            "ActionName": "ListProfiles",
            "FullActionName": "sso::ListProfiles"
          },
          {
            "ActionName": "SearchGroups",
            "FullActionName": "sso::SearchGroups"
          },
          {
            "ActionName": "SearchUsers",
            "FullActionName": "sso::SearchUsers"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "SSO Directory",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "AddMemberToGroup",
            "FullActionName": "sso-directory::AddMemberToGroup"
          },
          {
            "ActionName": "CreateAlias",
            "FullActionName": "sso-directory::CreateAlias"
          },
          {
            "ActionName": "CreateGroup",
            "FullActionName": "sso-directory::CreateGroup"
          },
          {
            "ActionName": "CreateUser",
            "FullActionName": "sso-directory::CreateUser"
          },
          {
            "ActionName": "DeleteGroup",
            "FullActionName": "sso-directory::DeleteGroup"
          },
          {
            "ActionName": "DeleteUser",
            "FullActionName": "sso-directory::DeleteUser"
          },
          {
            "ActionName": "DisableUser",
            "FullActionName": "sso-directory::DisableUser"
          },
          {
            "ActionName": "EnableUser",
            "FullActionName": "sso-directory::EnableUser"
          },
          {
            "ActionName": "RemoveMemberFromGroup",
            "FullActionName": "sso-directory::RemoveMemberFromGroup"
          },
          {
            "ActionName": "UpdateGroup",
            "FullActionName": "sso-directory::UpdateGroup"
          },
          {
            "ActionName": "UpdatePassword",
            "FullActionName": "sso-directory::UpdatePassword"
          },
          {
            "ActionName": "UpdateUser",
            "FullActionName": "sso-directory::UpdateUser"
          },
          {
            "ActionName": "VerifyEmail",
            "FullActionName": "sso-directory::VerifyEmail"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeDirectory",
            "FullActionName": "sso-directory::DescribeDirectory"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "DescribeGroups",
            "FullActionName": "sso-directory::DescribeGroups"
          },
          {
            "ActionName": "DescribeUsers",
            "FullActionName": "sso-directory::DescribeUsers"
          },
          {
            "ActionName": "ListGroupsForUser",
            "FullActionName": "sso-directory::ListGroupsForUser"
          },
          {
            "ActionName": "ListMembersInGroup",
            "FullActionName": "sso-directory::ListMembersInGroup"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "STS",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "AssumeRole",
            "FullActionName": "sts::AssumeRole"
          },
          {
            "ActionName": "AssumeRoleWithSAML",
            "FullActionName": "sts::AssumeRoleWithSAML"
          },
          {
            "ActionName": "AssumeRoleWithWebIdentity",
            "FullActionName": "sts::AssumeRoleWithWebIdentity"
          },
          {
            "ActionName": "DecodeAuthorizationMessage",
            "FullActionName": "sts::DecodeAuthorizationMessage"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "GetAccessKeyInfo",
            "FullActionName": "sts::GetAccessKeyInfo"
          },
          {
            "ActionName": "GetCallerIdentity",
            "FullActionName": "sts::GetCallerIdentity"
          },
          {
            "ActionName": "GetFederationToken",
            "FullActionName": "sts::GetFederationToken"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "SWF",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "CancelTimer",
            "FullActionName": "swf::CancelTimer"
          },
          {
            "ActionName": "CancelWorkflowExecution",
            "FullActionName": "swf::CancelWorkflowExecution"
          },
          {
            "ActionName": "CompleteWorkflowExecution",
            "FullActionName": "swf::CompleteWorkflowExecution"
          },
          {
            "ActionName": "ContinueAsNewWorkflowExecution",
            "FullActionName": "swf::ContinueAsNewWorkflowExecution"
          },
          {
            "ActionName": "DeprecateActivityType",
            "FullActionName": "swf::DeprecateActivityType"
          },
          {
            "ActionName": "DeprecateDomain",
            "FullActionName": "swf::DeprecateDomain"
          },
          {
            "ActionName": "DeprecateWorkflowType",
            "FullActionName": "swf::DeprecateWorkflowType"
          },
          {
            "ActionName": "FailWorkflowExecution",
            "FullActionName": "swf::FailWorkflowExecution"
          },
          {
            "ActionName": "PollForActivityTask",
            "FullActionName": "swf::PollForActivityTask"
          },
          {
            "ActionName": "PollForDecisionTask",
            "FullActionName": "swf::PollForDecisionTask"
          },
          {
            "ActionName": "RecordActivityTaskHeartbeat",
            "FullActionName": "swf::RecordActivityTaskHeartbeat"
          },
          {
            "ActionName": "RecordMarker",
            "FullActionName": "swf::RecordMarker"
          },
          {
            "ActionName": "RegisterActivityType",
            "FullActionName": "swf::RegisterActivityType"
          },
          {
            "ActionName": "RegisterDomain",
            "FullActionName": "swf::RegisterDomain"
          },
          {
            "ActionName": "RegisterWorkflowType",
            "FullActionName": "swf::RegisterWorkflowType"
          },
          {
            "ActionName": "RequestCancelActivityTask",
            "FullActionName": "swf::RequestCancelActivityTask"
          },
          {
            "ActionName": "RequestCancelExternalWorkflowExecution",
            "FullActionName": "swf::RequestCancelExternalWorkflowExecution"
          },
          {
            "ActionName": "RequestCancelWorkflowExecution",
            "FullActionName": "swf::RequestCancelWorkflowExecution"
          },
          {
            "ActionName": "RespondActivityTaskCanceled",
            "FullActionName": "swf::RespondActivityTaskCanceled"
          },
          {
            "ActionName": "RespondActivityTaskCompleted",
            "FullActionName": "swf::RespondActivityTaskCompleted"
          },
          {
            "ActionName": "RespondActivityTaskFailed",
            "FullActionName": "swf::RespondActivityTaskFailed"
          },
          {
            "ActionName": "RespondDecisionTaskCompleted",
            "FullActionName": "swf::RespondDecisionTaskCompleted"
          },
          {
            "ActionName": "ScheduleActivityTask",
            "FullActionName": "swf::ScheduleActivityTask"
          },
          {
            "ActionName": "SignalExternalWorkflowExecution",
            "FullActionName": "swf::SignalExternalWorkflowExecution"
          },
          {
            "ActionName": "SignalWorkflowExecution",
            "FullActionName": "swf::SignalWorkflowExecution"
          },
          {
            "ActionName": "StartChildWorkflowExecution",
            "FullActionName": "swf::StartChildWorkflowExecution"
          },
          {
            "ActionName": "StartTimer",
            "FullActionName": "swf::StartTimer"
          },
          {
            "ActionName": "StartWorkflowExecution",
            "FullActionName": "swf::StartWorkflowExecution"
          },
          {
            "ActionName": "TerminateWorkflowExecution",
            "FullActionName": "swf::TerminateWorkflowExecution"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "CountClosedWorkflowExecutions",
            "FullActionName": "swf::CountClosedWorkflowExecutions"
          },
          {
            "ActionName": "CountOpenWorkflowExecutions",
            "FullActionName": "swf::CountOpenWorkflowExecutions"
          },
          {
            "ActionName": "CountPendingActivityTasks",
            "FullActionName": "swf::CountPendingActivityTasks"
          },
          {
            "ActionName": "CountPendingDecisionTasks",
            "FullActionName": "swf::CountPendingDecisionTasks"
          },
          {
            "ActionName": "DescribeActivityType",
            "FullActionName": "swf::DescribeActivityType"
          },
          {
            "ActionName": "DescribeDomain",
            "FullActionName": "swf::DescribeDomain"
          },
          {
            "ActionName": "DescribeWorkflowExecution",
            "FullActionName": "swf::DescribeWorkflowExecution"
          },
          {
            "ActionName": "DescribeWorkflowType",
            "FullActionName": "swf::DescribeWorkflowType"
          },
          {
            "ActionName": "GetWorkflowExecutionHistory",
            "FullActionName": "swf::GetWorkflowExecutionHistory"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListActivityTypes",
            "FullActionName": "swf::ListActivityTypes"
          },
          {
            "ActionName": "ListClosedWorkflowExecutions",
            "FullActionName": "swf::ListClosedWorkflowExecutions"
          },
          {
            "ActionName": "ListDomains",
            "FullActionName": "swf::ListDomains"
          },
          {
            "ActionName": "ListOpenWorkflowExecutions",
            "FullActionName": "swf::ListOpenWorkflowExecutions"
          },
          {
            "ActionName": "ListTagsForResource",
            "FullActionName": "swf::ListTagsForResource"
          },
          {
            "ActionName": "ListWorkflowTypes",
            "FullActionName": "swf::ListWorkflowTypes"
          }
        ]
      },
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "TagResource",
            "FullActionName": "swf::TagResource"
          },
          {
            "ActionName": "UntagResource",
            "FullActionName": "swf::UntagResource"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "SageMaker",
    "AccessLevels": [
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "AddTags",
            "FullActionName": "sagemaker::AddTags"
          },
          {
            "ActionName": "DeleteTags",
            "FullActionName": "sagemaker::DeleteTags"
          }
        ]
      },
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "CreateAlgorithm",
            "FullActionName": "sagemaker::CreateAlgorithm"
          },
          {
            "ActionName": "CreateCodeRepository",
            "FullActionName": "sagemaker::CreateCodeRepository"
          },
          {
            "ActionName": "CreateCompilationJob",
            "FullActionName": "sagemaker::CreateCompilationJob"
          },
          {
            "ActionName": "CreateEndpoint",
            "FullActionName": "sagemaker::CreateEndpoint"
          },
          {
            "ActionName": "CreateEndpointConfig",
            "FullActionName": "sagemaker::CreateEndpointConfig"
          },
          {
            "ActionName": "CreateHyperParameterTuningJob",
            "FullActionName": "sagemaker::CreateHyperParameterTuningJob"
          },
          {
            "ActionName": "CreateLabelingJob",
            "FullActionName": "sagemaker::CreateLabelingJob"
          },
          {
            "ActionName": "CreateModel",
            "FullActionName": "sagemaker::CreateModel"
          },
          {
            "ActionName": "CreateModelPackage",
            "FullActionName": "sagemaker::CreateModelPackage"
          },
          {
            "ActionName": "CreateNotebookInstance",
            "FullActionName": "sagemaker::CreateNotebookInstance"
          },
          {
            "ActionName": "CreateNotebookInstanceLifecycleConfig",
            "FullActionName": "sagemaker::CreateNotebookInstanceLifecycleConfig"
          },
          {
            "ActionName": "CreatePresignedNotebookInstanceUrl",
            "FullActionName": "sagemaker::CreatePresignedNotebookInstanceUrl"
          },
          {
            "ActionName": "CreateTrainingJob",
            "FullActionName": "sagemaker::CreateTrainingJob"
          },
          {
            "ActionName": "CreateTransformJob",
            "FullActionName": "sagemaker::CreateTransformJob"
          },
          {
            "ActionName": "CreateWorkteam",
            "FullActionName": "sagemaker::CreateWorkteam"
          },
          {
            "ActionName": "DeleteAlgorithm",
            "FullActionName": "sagemaker::DeleteAlgorithm"
          },
          {
            "ActionName": "DeleteCodeRepository",
            "FullActionName": "sagemaker::DeleteCodeRepository"
          },
          {
            "ActionName": "DeleteEndpoint",
            "FullActionName": "sagemaker::DeleteEndpoint"
          },
          {
            "ActionName": "DeleteEndpointConfig",
            "FullActionName": "sagemaker::DeleteEndpointConfig"
          },
          {
            "ActionName": "DeleteModel",
            "FullActionName": "sagemaker::DeleteModel"
          },
          {
            "ActionName": "DeleteModelPackage",
            "FullActionName": "sagemaker::DeleteModelPackage"
          },
          {
            "ActionName": "DeleteNotebookInstance",
            "FullActionName": "sagemaker::DeleteNotebookInstance"
          },
          {
            "ActionName": "DeleteNotebookInstanceLifecycleConfig",
            "FullActionName": "sagemaker::DeleteNotebookInstanceLifecycleConfig"
          },
          {
            "ActionName": "DeleteWorkteam",
            "FullActionName": "sagemaker::DeleteWorkteam"
          },
          {
            "ActionName": "StartNotebookInstance",
            "FullActionName": "sagemaker::StartNotebookInstance"
          },
          {
            "ActionName": "StopCompilationJob",
            "FullActionName": "sagemaker::StopCompilationJob"
          },
          {
            "ActionName": "StopHyperParameterTuningJob",
            "FullActionName": "sagemaker::StopHyperParameterTuningJob"
          },
          {
            "ActionName": "StopLabelingJob",
            "FullActionName": "sagemaker::StopLabelingJob"
          },
          {
            "ActionName": "StopNotebookInstance",
            "FullActionName": "sagemaker::StopNotebookInstance"
          },
          {
            "ActionName": "StopTrainingJob",
            "FullActionName": "sagemaker::StopTrainingJob"
          },
          {
            "ActionName": "StopTransformJob",
            "FullActionName": "sagemaker::StopTransformJob"
          },
          {
            "ActionName": "UpdateCodeRepository",
            "FullActionName": "sagemaker::UpdateCodeRepository"
          },
          {
            "ActionName": "UpdateEndpoint",
            "FullActionName": "sagemaker::UpdateEndpoint"
          },
          {
            "ActionName": "UpdateEndpointWeightsAndCapacities",
            "FullActionName": "sagemaker::UpdateEndpointWeightsAndCapacities"
          },
          {
            "ActionName": "UpdateNotebookInstance",
            "FullActionName": "sagemaker::UpdateNotebookInstance"
          },
          {
            "ActionName": "UpdateNotebookInstanceLifecycleConfig",
            "FullActionName": "sagemaker::UpdateNotebookInstanceLifecycleConfig"
          },
          {
            "ActionName": "UpdateWorkteam",
            "FullActionName": "sagemaker::UpdateWorkteam"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeAlgorithm",
            "FullActionName": "sagemaker::DescribeAlgorithm"
          },
          {
            "ActionName": "DescribeCodeRepository",
            "FullActionName": "sagemaker::DescribeCodeRepository"
          },
          {
            "ActionName": "DescribeCompilationJob",
            "FullActionName": "sagemaker::DescribeCompilationJob"
          },
          {
            "ActionName": "DescribeEndpoint",
            "FullActionName": "sagemaker::DescribeEndpoint"
          },
          {
            "ActionName": "DescribeEndpointConfig",
            "FullActionName": "sagemaker::DescribeEndpointConfig"
          },
          {
            "ActionName": "DescribeHyperParameterTuningJob",
            "FullActionName": "sagemaker::DescribeHyperParameterTuningJob"
          },
          {
            "ActionName": "DescribeLabelingJob",
            "FullActionName": "sagemaker::DescribeLabelingJob"
          },
          {
            "ActionName": "DescribeModel",
            "FullActionName": "sagemaker::DescribeModel"
          },
          {
            "ActionName": "DescribeModelPackage",
            "FullActionName": "sagemaker::DescribeModelPackage"
          },
          {
            "ActionName": "DescribeNotebookInstance",
            "FullActionName": "sagemaker::DescribeNotebookInstance"
          },
          {
            "ActionName": "DescribeNotebookInstanceLifecycleConfig",
            "FullActionName": "sagemaker::DescribeNotebookInstanceLifecycleConfig"
          },
          {
            "ActionName": "DescribeSubscribedWorkteam",
            "FullActionName": "sagemaker::DescribeSubscribedWorkteam"
          },
          {
            "ActionName": "DescribeTrainingJob",
            "FullActionName": "sagemaker::DescribeTrainingJob"
          },
          {
            "ActionName": "DescribeTransformJob",
            "FullActionName": "sagemaker::DescribeTransformJob"
          },
          {
            "ActionName": "DescribeWorkteam",
            "FullActionName": "sagemaker::DescribeWorkteam"
          },
          {
            "ActionName": "GetSearchSuggestions",
            "FullActionName": "sagemaker::GetSearchSuggestions"
          },
          {
            "ActionName": "InvokeEndpoint",
            "FullActionName": "sagemaker::InvokeEndpoint"
          },
          {
            "ActionName": "RenderUiTemplate",
            "FullActionName": "sagemaker::RenderUiTemplate"
          },
          {
            "ActionName": "Search",
            "FullActionName": "sagemaker::Search"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListAlgorithms",
            "FullActionName": "sagemaker::ListAlgorithms"
          },
          {
            "ActionName": "ListCodeRepositories",
            "FullActionName": "sagemaker::ListCodeRepositories"
          },
          {
            "ActionName": "ListCompilationJobs",
            "FullActionName": "sagemaker::ListCompilationJobs"
          },
          {
            "ActionName": "ListEndpointConfigs",
            "FullActionName": "sagemaker::ListEndpointConfigs"
          },
          {
            "ActionName": "ListEndpoints",
            "FullActionName": "sagemaker::ListEndpoints"
          },
          {
            "ActionName": "ListHyperParameterTuningJobs",
            "FullActionName": "sagemaker::ListHyperParameterTuningJobs"
          },
          {
            "ActionName": "ListLabelingJobs",
            "FullActionName": "sagemaker::ListLabelingJobs"
          },
          {
            "ActionName": "ListLabelingJobsForWorkteam",
            "FullActionName": "sagemaker::ListLabelingJobsForWorkteam"
          },
          {
            "ActionName": "ListModelPackages",
            "FullActionName": "sagemaker::ListModelPackages"
          },
          {
            "ActionName": "ListModels",
            "FullActionName": "sagemaker::ListModels"
          },
          {
            "ActionName": "ListNotebookInstanceLifecycleConfigs",
            "FullActionName": "sagemaker::ListNotebookInstanceLifecycleConfigs"
          },
          {
            "ActionName": "ListNotebookInstances",
            "FullActionName": "sagemaker::ListNotebookInstances"
          },
          {
            "ActionName": "ListSubscribedWorkteams",
            "FullActionName": "sagemaker::ListSubscribedWorkteams"
          },
          {
            "ActionName": "ListTags",
            "FullActionName": "sagemaker::ListTags"
          },
          {
            "ActionName": "ListTrainingJobs",
            "FullActionName": "sagemaker::ListTrainingJobs"
          },
          {
            "ActionName": "ListTrainingJobsForHyperParameterTuningJob",
            "FullActionName": "sagemaker::ListTrainingJobsForHyperParameterTuningJob"
          },
          {
            "ActionName": "ListTransformJobs",
            "FullActionName": "sagemaker::ListTransformJobs"
          },
          {
            "ActionName": "ListWorkteams",
            "FullActionName": "sagemaker::ListWorkteams"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Secrets Manager",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "CancelRotateSecret",
            "FullActionName": "secretsmanager::CancelRotateSecret"
          },
          {
            "ActionName": "DeleteSecret",
            "FullActionName": "secretsmanager::DeleteSecret"
          },
          {
            "ActionName": "PutSecretValue",
            "FullActionName": "secretsmanager::PutSecretValue"
          },
          {
            "ActionName": "RestoreSecret",
            "FullActionName": "secretsmanager::RestoreSecret"
          },
          {
            "ActionName": "RotateSecret",
            "FullActionName": "secretsmanager::RotateSecret"
          },
          {
            "ActionName": "UpdateSecret",
            "FullActionName": "secretsmanager::UpdateSecret"
          },
          {
            "ActionName": "UpdateSecretVersionStage",
            "FullActionName": "secretsmanager::UpdateSecretVersionStage"
          }
        ]
      },
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "CreateSecret",
            "FullActionName": "secretsmanager::CreateSecret"
          },
          {
            "ActionName": "TagResource",
            "FullActionName": "secretsmanager::TagResource"
          },
          {
            "ActionName": "UntagResource",
            "FullActionName": "secretsmanager::UntagResource"
          }
        ]
      },
      {
        "AccessLevel": "Permissions",
        "Actions": [
          {
            "ActionName": "DeleteResourcePolicy",
            "FullActionName": "secretsmanager::DeleteResourcePolicy"
          },
          {
            "ActionName": "PutResourcePolicy",
            "FullActionName": "secretsmanager::PutResourcePolicy"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeSecret",
            "FullActionName": "secretsmanager::DescribeSecret"
          },
          {
            "ActionName": "GetRandomPassword",
            "FullActionName": "secretsmanager::GetRandomPassword"
          },
          {
            "ActionName": "GetResourcePolicy",
            "FullActionName": "secretsmanager::GetResourcePolicy"
          },
          {
            "ActionName": "GetSecretValue",
            "FullActionName": "secretsmanager::GetSecretValue"
          },
          {
            "ActionName": "ListSecretVersionIds",
            "FullActionName": "secretsmanager::ListSecretVersionIds"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListSecrets",
            "FullActionName": "secretsmanager::ListSecrets"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "SecurityHub",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "AcceptInvitation",
            "FullActionName": "securityhub::AcceptInvitation"
          },
          {
            "ActionName": "BatchDisableStandards",
            "FullActionName": "securityhub::BatchDisableStandards"
          },
          {
            "ActionName": "BatchEnableStandards",
            "FullActionName": "securityhub::BatchEnableStandards"
          },
          {
            "ActionName": "BatchImportFindings",
            "FullActionName": "securityhub::BatchImportFindings"
          },
          {
            "ActionName": "CreateActionTarget",
            "FullActionName": "securityhub::CreateActionTarget"
          },
          {
            "ActionName": "CreateInsight",
            "FullActionName": "securityhub::CreateInsight"
          },
          {
            "ActionName": "CreateMembers",
            "FullActionName": "securityhub::CreateMembers"
          },
          {
            "ActionName": "DeclineInvitations",
            "FullActionName": "securityhub::DeclineInvitations"
          },
          {
            "ActionName": "DeleteActionTarget",
            "FullActionName": "securityhub::DeleteActionTarget"
          },
          {
            "ActionName": "DeleteInsight",
            "FullActionName": "securityhub::DeleteInsight"
          },
          {
            "ActionName": "DeleteInvitations",
            "FullActionName": "securityhub::DeleteInvitations"
          },
          {
            "ActionName": "DeleteMembers",
            "FullActionName": "securityhub::DeleteMembers"
          },
          {
            "ActionName": "DisableImportFindingsForProduct",
            "FullActionName": "securityhub::DisableImportFindingsForProduct"
          },
          {
            "ActionName": "DisableSecurityHub",
            "FullActionName": "securityhub::DisableSecurityHub"
          },
          {
            "ActionName": "DisassociateFromMasterAccount",
            "FullActionName": "securityhub::DisassociateFromMasterAccount"
          },
          {
            "ActionName": "DisassociateMembers",
            "FullActionName": "securityhub::DisassociateMembers"
          },
          {
            "ActionName": "EnableImportFindingsForProduct",
            "FullActionName": "securityhub::EnableImportFindingsForProduct"
          },
          {
            "ActionName": "EnableSecurityHub",
            "FullActionName": "securityhub::EnableSecurityHub"
          },
          {
            "ActionName": "InviteMembers",
            "FullActionName": "securityhub::InviteMembers"
          },
          {
            "ActionName": "TagResource",
            "FullActionName": "securityhub::TagResource"
          },
          {
            "ActionName": "UntagResource",
            "FullActionName": "securityhub::UntagResource"
          },
          {
            "ActionName": "UpdateActionTarget",
            "FullActionName": "securityhub::UpdateActionTarget"
          },
          {
            "ActionName": "UpdateFindings",
            "FullActionName": "securityhub::UpdateFindings"
          },
          {
            "ActionName": "UpdateInsight",
            "FullActionName": "securityhub::UpdateInsight"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeActionTargets",
            "FullActionName": "securityhub::DescribeActionTargets"
          },
          {
            "ActionName": "DescribeHub",
            "FullActionName": "securityhub::DescribeHub"
          },
          {
            "ActionName": "DescribeProducts",
            "FullActionName": "securityhub::DescribeProducts"
          },
          {
            "ActionName": "GetFindings",
            "FullActionName": "securityhub::GetFindings"
          },
          {
            "ActionName": "GetInsightResults",
            "FullActionName": "securityhub::GetInsightResults"
          },
          {
            "ActionName": "GetInvitationsCount",
            "FullActionName": "securityhub::GetInvitationsCount"
          },
          {
            "ActionName": "GetMasterAccount",
            "FullActionName": "securityhub::GetMasterAccount"
          },
          {
            "ActionName": "GetMembers",
            "FullActionName": "securityhub::GetMembers"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "GetEnabledStandards",
            "FullActionName": "securityhub::GetEnabledStandards"
          },
          {
            "ActionName": "GetInsights",
            "FullActionName": "securityhub::GetInsights"
          },
          {
            "ActionName": "ListEnabledProductsForImport",
            "FullActionName": "securityhub::ListEnabledProductsForImport"
          },
          {
            "ActionName": "ListInvitations",
            "FullActionName": "securityhub::ListInvitations"
          },
          {
            "ActionName": "ListMembers",
            "FullActionName": "securityhub::ListMembers"
          },
          {
            "ActionName": "ListTagsForResource",
            "FullActionName": "securityhub::ListTagsForResource"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "ServerMigrationService",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "CreateApp",
            "FullActionName": "sms::CreateApp"
          },
          {
            "ActionName": "CreateReplicationJob",
            "FullActionName": "sms::CreateReplicationJob"
          },
          {
            "ActionName": "DeleteApp",
            "FullActionName": "sms::DeleteApp"
          },
          {
            "ActionName": "DeleteAppLaunchConfiguration",
            "FullActionName": "sms::DeleteAppLaunchConfiguration"
          },
          {
            "ActionName": "DeleteAppReplicationConfiguration",
            "FullActionName": "sms::DeleteAppReplicationConfiguration"
          },
          {
            "ActionName": "DeleteReplicationJob",
            "FullActionName": "sms::DeleteReplicationJob"
          },
          {
            "ActionName": "DeleteServerCatalog",
            "FullActionName": "sms::DeleteServerCatalog"
          },
          {
            "ActionName": "DisassociateConnector",
            "FullActionName": "sms::DisassociateConnector"
          },
          {
            "ActionName": "GenerateChangeSet",
            "FullActionName": "sms::GenerateChangeSet"
          },
          {
            "ActionName": "GenerateTemplate",
            "FullActionName": "sms::GenerateTemplate"
          },
          {
            "ActionName": "ImportServerCatalog",
            "FullActionName": "sms::ImportServerCatalog"
          },
          {
            "ActionName": "LaunchApp",
            "FullActionName": "sms::LaunchApp"
          },
          {
            "ActionName": "PutAppLaunchConfiguration",
            "FullActionName": "sms::PutAppLaunchConfiguration"
          },
          {
            "ActionName": "PutAppReplicationConfiguration",
            "FullActionName": "sms::PutAppReplicationConfiguration"
          },
          {
            "ActionName": "SendMessage",
            "FullActionName": "sms::SendMessage"
          },
          {
            "ActionName": "StartAppReplication",
            "FullActionName": "sms::StartAppReplication"
          },
          {
            "ActionName": "StartOnDemandReplicationRun",
            "FullActionName": "sms::StartOnDemandReplicationRun"
          },
          {
            "ActionName": "StopAppReplication",
            "FullActionName": "sms::StopAppReplication"
          },
          {
            "ActionName": "TerminateApp",
            "FullActionName": "sms::TerminateApp"
          },
          {
            "ActionName": "UpdateApp",
            "FullActionName": "sms::UpdateApp"
          },
          {
            "ActionName": "UpdateReplicationJob",
            "FullActionName": "sms::UpdateReplicationJob"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "GetApp",
            "FullActionName": "sms::GetApp"
          },
          {
            "ActionName": "GetAppLaunchConfiguration",
            "FullActionName": "sms::GetAppLaunchConfiguration"
          },
          {
            "ActionName": "GetAppReplicationConfiguration",
            "FullActionName": "sms::GetAppReplicationConfiguration"
          },
          {
            "ActionName": "GetConnectors",
            "FullActionName": "sms::GetConnectors"
          },
          {
            "ActionName": "GetMessages",
            "FullActionName": "sms::GetMessages"
          },
          {
            "ActionName": "GetReplicationJobs",
            "FullActionName": "sms::GetReplicationJobs"
          },
          {
            "ActionName": "GetReplicationRuns",
            "FullActionName": "sms::GetReplicationRuns"
          },
          {
            "ActionName": "GetServers",
            "FullActionName": "sms::GetServers"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListApps",
            "FullActionName": "sms::ListApps"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Serverless Application Repository",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "CreateApplication",
            "FullActionName": "serverlessrepo::CreateApplication"
          },
          {
            "ActionName": "CreateApplicationVersion",
            "FullActionName": "serverlessrepo::CreateApplicationVersion"
          },
          {
            "ActionName": "CreateCloudFormationChangeSet",
            "FullActionName": "serverlessrepo::CreateCloudFormationChangeSet"
          },
          {
            "ActionName": "CreateCloudFormationTemplate",
            "FullActionName": "serverlessrepo::CreateCloudFormationTemplate"
          },
          {
            "ActionName": "DeleteApplication",
            "FullActionName": "serverlessrepo::DeleteApplication"
          },
          {
            "ActionName": "PutApplicationPolicy",
            "FullActionName": "serverlessrepo::PutApplicationPolicy"
          },
          {
            "ActionName": "UpdateApplication",
            "FullActionName": "serverlessrepo::UpdateApplication"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "GetApplication",
            "FullActionName": "serverlessrepo::GetApplication"
          },
          {
            "ActionName": "GetApplicationPolicy",
            "FullActionName": "serverlessrepo::GetApplicationPolicy"
          },
          {
            "ActionName": "GetCloudFormationTemplate",
            "FullActionName": "serverlessrepo::GetCloudFormationTemplate"
          },
          {
            "ActionName": "SearchApplications",
            "FullActionName": "serverlessrepo::SearchApplications"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListApplicationDependencies",
            "FullActionName": "serverlessrepo::ListApplicationDependencies"
          },
          {
            "ActionName": "ListApplicationVersions",
            "FullActionName": "serverlessrepo::ListApplicationVersions"
          },
          {
            "ActionName": "ListApplications",
            "FullActionName": "serverlessrepo::ListApplications"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Service Catalog",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "AcceptPortfolioShare",
            "FullActionName": "servicecatalog::AcceptPortfolioShare"
          },
          {
            "ActionName": "AssociateBudgetWithResource",
            "FullActionName": "servicecatalog::AssociateBudgetWithResource"
          },
          {
            "ActionName": "AssociatePrincipalWithPortfolio",
            "FullActionName": "servicecatalog::AssociatePrincipalWithPortfolio"
          },
          {
            "ActionName": "AssociateProductWithPortfolio",
            "FullActionName": "servicecatalog::AssociateProductWithPortfolio"
          },
          {
            "ActionName": "AssociateServiceActionWithProvisioningArtifact",
            "FullActionName": "servicecatalog::AssociateServiceActionWithProvisioningArtifact"
          },
          {
            "ActionName": "AssociateTagOptionWithResource",
            "FullActionName": "servicecatalog::AssociateTagOptionWithResource"
          },
          {
            "ActionName": "BatchAssociateServiceActionWithProvisioningArtifact",
            "FullActionName": "servicecatalog::BatchAssociateServiceActionWithProvisioningArtifact"
          },
          {
            "ActionName": "BatchDisassociateServiceActionFromProvisioningArtifact",
            "FullActionName": "servicecatalog::BatchDisassociateServiceActionFromProvisioningArtifact"
          },
          {
            "ActionName": "CopyProduct",
            "FullActionName": "servicecatalog::CopyProduct"
          },
          {
            "ActionName": "CreateConstraint",
            "FullActionName": "servicecatalog::CreateConstraint"
          },
          {
            "ActionName": "CreatePortfolio",
            "FullActionName": "servicecatalog::CreatePortfolio"
          },
          {
            "ActionName": "CreateProduct",
            "FullActionName": "servicecatalog::CreateProduct"
          },
          {
            "ActionName": "CreateProvisionedProductPlan",
            "FullActionName": "servicecatalog::CreateProvisionedProductPlan"
          },
          {
            "ActionName": "CreateProvisioningArtifact",
            "FullActionName": "servicecatalog::CreateProvisioningArtifact"
          },
          {
            "ActionName": "CreateServiceAction",
            "FullActionName": "servicecatalog::CreateServiceAction"
          },
          {
            "ActionName": "CreateTagOption",
            "FullActionName": "servicecatalog::CreateTagOption"
          },
          {
            "ActionName": "DeleteConstraint",
            "FullActionName": "servicecatalog::DeleteConstraint"
          },
          {
            "ActionName": "DeletePortfolio",
            "FullActionName": "servicecatalog::DeletePortfolio"
          },
          {
            "ActionName": "DeleteProduct",
            "FullActionName": "servicecatalog::DeleteProduct"
          },
          {
            "ActionName": "DeleteProvisionedProductPlan",
            "FullActionName": "servicecatalog::DeleteProvisionedProductPlan"
          },
          {
            "ActionName": "DeleteProvisioningArtifact",
            "FullActionName": "servicecatalog::DeleteProvisioningArtifact"
          },
          {
            "ActionName": "DeleteServiceAction",
            "FullActionName": "servicecatalog::DeleteServiceAction"
          },
          {
            "ActionName": "DeleteTagOption",
            "FullActionName": "servicecatalog::DeleteTagOption"
          },
          {
            "ActionName": "DisableAWSOrganizationsAccess",
            "FullActionName": "servicecatalog::DisableAWSOrganizationsAccess"
          },
          {
            "ActionName": "DisassociateBudgetFromResource",
            "FullActionName": "servicecatalog::DisassociateBudgetFromResource"
          },
          {
            "ActionName": "DisassociatePrincipalFromPortfolio",
            "FullActionName": "servicecatalog::DisassociatePrincipalFromPortfolio"
          },
          {
            "ActionName": "DisassociateProductFromPortfolio",
            "FullActionName": "servicecatalog::DisassociateProductFromPortfolio"
          },
          {
            "ActionName": "DisassociateServiceActionFromProvisioningArtifact",
            "FullActionName": "servicecatalog::DisassociateServiceActionFromProvisioningArtifact"
          },
          {
            "ActionName": "DisassociateTagOptionFromResource",
            "FullActionName": "servicecatalog::DisassociateTagOptionFromResource"
          },
          {
            "ActionName": "EnableAWSOrganizationsAccess",
            "FullActionName": "servicecatalog::EnableAWSOrganizationsAccess"
          },
          {
            "ActionName": "ExecuteProvisionedProductPlan",
            "FullActionName": "servicecatalog::ExecuteProvisionedProductPlan"
          },
          {
            "ActionName": "ExecuteProvisionedProductServiceAction",
            "FullActionName": "servicecatalog::ExecuteProvisionedProductServiceAction"
          },
          {
            "ActionName": "ProvisionProduct",
            "FullActionName": "servicecatalog::ProvisionProduct"
          },
          {
            "ActionName": "RejectPortfolioShare",
            "FullActionName": "servicecatalog::RejectPortfolioShare"
          },
          {
            "ActionName": "TerminateProvisionedProduct",
            "FullActionName": "servicecatalog::TerminateProvisionedProduct"
          },
          {
            "ActionName": "UpdateConstraint",
            "FullActionName": "servicecatalog::UpdateConstraint"
          },
          {
            "ActionName": "UpdatePortfolio",
            "FullActionName": "servicecatalog::UpdatePortfolio"
          },
          {
            "ActionName": "UpdateProduct",
            "FullActionName": "servicecatalog::UpdateProduct"
          },
          {
            "ActionName": "UpdateProvisionedProduct",
            "FullActionName": "servicecatalog::UpdateProvisionedProduct"
          },
          {
            "ActionName": "UpdateProvisionedProductProperties",
            "FullActionName": "servicecatalog::UpdateProvisionedProductProperties"
          },
          {
            "ActionName": "UpdateProvisioningArtifact",
            "FullActionName": "servicecatalog::UpdateProvisioningArtifact"
          },
          {
            "ActionName": "UpdateServiceAction",
            "FullActionName": "servicecatalog::UpdateServiceAction"
          },
          {
            "ActionName": "UpdateTagOption",
            "FullActionName": "servicecatalog::UpdateTagOption"
          }
        ]
      },
      {
        "AccessLevel": "Permissions",
        "Actions": [
          {
            "ActionName": "CreatePortfolioShare",
            "FullActionName": "servicecatalog::CreatePortfolioShare"
          },
          {
            "ActionName": "DeletePortfolioShare",
            "FullActionName": "servicecatalog::DeletePortfolioShare"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeConstraint",
            "FullActionName": "servicecatalog::DescribeConstraint"
          },
          {
            "ActionName": "DescribeCopyProductStatus",
            "FullActionName": "servicecatalog::DescribeCopyProductStatus"
          },
          {
            "ActionName": "DescribePortfolio",
            "FullActionName": "servicecatalog::DescribePortfolio"
          },
          {
            "ActionName": "DescribePortfolioShareStatus",
            "FullActionName": "servicecatalog::DescribePortfolioShareStatus"
          },
          {
            "ActionName": "DescribeProduct",
            "FullActionName": "servicecatalog::DescribeProduct"
          },
          {
            "ActionName": "DescribeProductAsAdmin",
            "FullActionName": "servicecatalog::DescribeProductAsAdmin"
          },
          {
            "ActionName": "DescribeProductView",
            "FullActionName": "servicecatalog::DescribeProductView"
          },
          {
            "ActionName": "DescribeProvisionedProduct",
            "FullActionName": "servicecatalog::DescribeProvisionedProduct"
          },
          {
            "ActionName": "DescribeProvisionedProductPlan",
            "FullActionName": "servicecatalog::DescribeProvisionedProductPlan"
          },
          {
            "ActionName": "DescribeProvisioningArtifact",
            "FullActionName": "servicecatalog::DescribeProvisioningArtifact"
          },
          {
            "ActionName": "DescribeProvisioningParameters",
            "FullActionName": "servicecatalog::DescribeProvisioningParameters"
          },
          {
            "ActionName": "DescribeRecord",
            "FullActionName": "servicecatalog::DescribeRecord"
          },
          {
            "ActionName": "DescribeServiceAction",
            "FullActionName": "servicecatalog::DescribeServiceAction"
          },
          {
            "ActionName": "DescribeServiceActionExecutionParameters",
            "FullActionName": "servicecatalog::DescribeServiceActionExecutionParameters"
          },
          {
            "ActionName": "DescribeTagOption",
            "FullActionName": "servicecatalog::DescribeTagOption"
          },
          {
            "ActionName": "GetAWSOrganizationsAccessStatus",
            "FullActionName": "servicecatalog::GetAWSOrganizationsAccessStatus"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListAcceptedPortfolioShares",
            "FullActionName": "servicecatalog::ListAcceptedPortfolioShares"
          },
          {
            "ActionName": "ListBudgetsForResource",
            "FullActionName": "servicecatalog::ListBudgetsForResource"
          },
          {
            "ActionName": "ListConstraintsForPortfolio",
            "FullActionName": "servicecatalog::ListConstraintsForPortfolio"
          },
          {
            "ActionName": "ListLaunchPaths",
            "FullActionName": "servicecatalog::ListLaunchPaths"
          },
          {
            "ActionName": "ListOrganizationPortfolioAccess",
            "FullActionName": "servicecatalog::ListOrganizationPortfolioAccess"
          },
          {
            "ActionName": "ListPortfolioAccess",
            "FullActionName": "servicecatalog::ListPortfolioAccess"
          },
          {
            "ActionName": "ListPortfolios",
            "FullActionName": "servicecatalog::ListPortfolios"
          },
          {
            "ActionName": "ListPortfoliosForProduct",
            "FullActionName": "servicecatalog::ListPortfoliosForProduct"
          },
          {
            "ActionName": "ListPrincipalsForPortfolio",
            "FullActionName": "servicecatalog::ListPrincipalsForPortfolio"
          },
          {
            "ActionName": "ListProvisionedProductPlans",
            "FullActionName": "servicecatalog::ListProvisionedProductPlans"
          },
          {
            "ActionName": "ListProvisioningArtifacts",
            "FullActionName": "servicecatalog::ListProvisioningArtifacts"
          },
          {
            "ActionName": "ListProvisioningArtifactsForServiceAction",
            "FullActionName": "servicecatalog::ListProvisioningArtifactsForServiceAction"
          },
          {
            "ActionName": "ListRecordHistory",
            "FullActionName": "servicecatalog::ListRecordHistory"
          },
          {
            "ActionName": "ListResourcesForTagOption",
            "FullActionName": "servicecatalog::ListResourcesForTagOption"
          },
          {
            "ActionName": "ListServiceActions",
            "FullActionName": "servicecatalog::ListServiceActions"
          },
          {
            "ActionName": "ListServiceActionsForProvisioningArtifact",
            "FullActionName": "servicecatalog::ListServiceActionsForProvisioningArtifact"
          },
          {
            "ActionName": "ListStackInstancesForProvisionedProduct",
            "FullActionName": "servicecatalog::ListStackInstancesForProvisionedProduct"
          },
          {
            "ActionName": "ListTagOptions",
            "FullActionName": "servicecatalog::ListTagOptions"
          },
          {
            "ActionName": "ScanProvisionedProducts",
            "FullActionName": "servicecatalog::ScanProvisionedProducts"
          },
          {
            "ActionName": "SearchProducts",
            "FullActionName": "servicecatalog::SearchProducts"
          },
          {
            "ActionName": "SearchProductsAsAdmin",
            "FullActionName": "servicecatalog::SearchProductsAsAdmin"
          },
          {
            "ActionName": "SearchProvisionedProducts",
            "FullActionName": "servicecatalog::SearchProvisionedProducts"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Service Quotas",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "AssociateServiceQuotaTemplate",
            "FullActionName": "servicequotas::AssociateServiceQuotaTemplate"
          },
          {
            "ActionName": "DeleteServiceQuotaIncreaseRequestFromTemplate",
            "FullActionName": "servicequotas::DeleteServiceQuotaIncreaseRequestFromTemplate"
          },
          {
            "ActionName": "DisassociateServiceQuotaTemplate",
            "FullActionName": "servicequotas::DisassociateServiceQuotaTemplate"
          },
          {
            "ActionName": "PutServiceQuotaIncreaseRequestIntoTemplate",
            "FullActionName": "servicequotas::PutServiceQuotaIncreaseRequestIntoTemplate"
          },
          {
            "ActionName": "RequestServiceQuotaIncrease",
            "FullActionName": "servicequotas::RequestServiceQuotaIncrease"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "GetAWSDefaultServiceQuota",
            "FullActionName": "servicequotas::GetAWSDefaultServiceQuota"
          },
          {
            "ActionName": "GetAssociationForServiceQuotaTemplate",
            "FullActionName": "servicequotas::GetAssociationForServiceQuotaTemplate"
          },
          {
            "ActionName": "GetRequestedServiceQuotaChange",
            "FullActionName": "servicequotas::GetRequestedServiceQuotaChange"
          },
          {
            "ActionName": "GetServiceQuota",
            "FullActionName": "servicequotas::GetServiceQuota"
          },
          {
            "ActionName": "GetServiceQuotaIncreaseRequestFromTemplate",
            "FullActionName": "servicequotas::GetServiceQuotaIncreaseRequestFromTemplate"
          },
          {
            "ActionName": "ListAWSDefaultServiceQuotas",
            "FullActionName": "servicequotas::ListAWSDefaultServiceQuotas"
          },
          {
            "ActionName": "ListRequestedServiceQuotaChangeHistory",
            "FullActionName": "servicequotas::ListRequestedServiceQuotaChangeHistory"
          },
          {
            "ActionName": "ListRequestedServiceQuotaChangeHistoryByQuota",
            "FullActionName": "servicequotas::ListRequestedServiceQuotaChangeHistoryByQuota"
          },
          {
            "ActionName": "ListServiceQuotaIncreaseRequestsInTemplate",
            "FullActionName": "servicequotas::ListServiceQuotaIncreaseRequestsInTemplate"
          },
          {
            "ActionName": "ListServiceQuotas",
            "FullActionName": "servicequotas::ListServiceQuotas"
          },
          {
            "ActionName": "ListServices",
            "FullActionName": "servicequotas::ListServices"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Shield",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "AssociateDRTLogBucket",
            "FullActionName": "shield::AssociateDRTLogBucket"
          },
          {
            "ActionName": "AssociateDRTRole",
            "FullActionName": "shield::AssociateDRTRole"
          },
          {
            "ActionName": "CreateProtection",
            "FullActionName": "shield::CreateProtection"
          },
          {
            "ActionName": "CreateSubscription",
            "FullActionName": "shield::CreateSubscription"
          },
          {
            "ActionName": "DeleteProtection",
            "FullActionName": "shield::DeleteProtection"
          },
          {
            "ActionName": "DeleteSubscription",
            "FullActionName": "shield::DeleteSubscription"
          },
          {
            "ActionName": "DisassociateDRTLogBucket",
            "FullActionName": "shield::DisassociateDRTLogBucket"
          },
          {
            "ActionName": "DisassociateDRTRole",
            "FullActionName": "shield::DisassociateDRTRole"
          },
          {
            "ActionName": "UpdateEmergencyContactSettings",
            "FullActionName": "shield::UpdateEmergencyContactSettings"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeAttack",
            "FullActionName": "shield::DescribeAttack"
          },
          {
            "ActionName": "DescribeDRTAccess",
            "FullActionName": "shield::DescribeDRTAccess"
          },
          {
            "ActionName": "DescribeEmergencyContactSettings",
            "FullActionName": "shield::DescribeEmergencyContactSettings"
          },
          {
            "ActionName": "DescribeProtection",
            "FullActionName": "shield::DescribeProtection"
          },
          {
            "ActionName": "DescribeSubscription",
            "FullActionName": "shield::DescribeSubscription"
          },
          {
            "ActionName": "GetSubscriptionState",
            "FullActionName": "shield::GetSubscriptionState"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListAttacks",
            "FullActionName": "shield::ListAttacks"
          },
          {
            "ActionName": "ListProtections",
            "FullActionName": "shield::ListProtections"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Signer",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "CancelSigningProfile",
            "FullActionName": "signer::CancelSigningProfile"
          },
          {
            "ActionName": "PutSigningProfile",
            "FullActionName": "signer::PutSigningProfile"
          },
          {
            "ActionName": "StartSigningJob",
            "FullActionName": "signer::StartSigningJob"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeSigningJob",
            "FullActionName": "signer::DescribeSigningJob"
          },
          {
            "ActionName": "GetSigningPlatform",
            "FullActionName": "signer::GetSigningPlatform"
          },
          {
            "ActionName": "GetSigningProfile",
            "FullActionName": "signer::GetSigningProfile"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListSigningJobs",
            "FullActionName": "signer::ListSigningJobs"
          },
          {
            "ActionName": "ListSigningPlatforms",
            "FullActionName": "signer::ListSigningPlatforms"
          },
          {
            "ActionName": "ListSigningProfiles",
            "FullActionName": "signer::ListSigningProfiles"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "SimpleDB",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "BatchDeleteAttributes",
            "FullActionName": "sdb::BatchDeleteAttributes"
          },
          {
            "ActionName": "BatchPutAttributes",
            "FullActionName": "sdb::BatchPutAttributes"
          },
          {
            "ActionName": "CreateDomain",
            "FullActionName": "sdb::CreateDomain"
          },
          {
            "ActionName": "DeleteAttributes",
            "FullActionName": "sdb::DeleteAttributes"
          },
          {
            "ActionName": "DeleteDomain",
            "FullActionName": "sdb::DeleteDomain"
          },
          {
            "ActionName": "PutAttributes",
            "FullActionName": "sdb::PutAttributes"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DomainMetadata",
            "FullActionName": "sdb::DomainMetadata"
          },
          {
            "ActionName": "GetAttributes",
            "FullActionName": "sdb::GetAttributes"
          },
          {
            "ActionName": "Select",
            "FullActionName": "sdb::Select"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListDomains",
            "FullActionName": "sdb::ListDomains"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Snowball",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "CancelCluster",
            "FullActionName": "snowball::CancelCluster"
          },
          {
            "ActionName": "CancelJob",
            "FullActionName": "snowball::CancelJob"
          },
          {
            "ActionName": "CreateAddress",
            "FullActionName": "snowball::CreateAddress"
          },
          {
            "ActionName": "CreateCluster",
            "FullActionName": "snowball::CreateCluster"
          },
          {
            "ActionName": "CreateJob",
            "FullActionName": "snowball::CreateJob"
          },
          {
            "ActionName": "UpdateCluster",
            "FullActionName": "snowball::UpdateCluster"
          },
          {
            "ActionName": "UpdateJob",
            "FullActionName": "snowball::UpdateJob"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeAddress",
            "FullActionName": "snowball::DescribeAddress"
          },
          {
            "ActionName": "DescribeCluster",
            "FullActionName": "snowball::DescribeCluster"
          },
          {
            "ActionName": "DescribeJob",
            "FullActionName": "snowball::DescribeJob"
          },
          {
            "ActionName": "GetJobManifest",
            "FullActionName": "snowball::GetJobManifest"
          },
          {
            "ActionName": "GetJobUnlockCode",
            "FullActionName": "snowball::GetJobUnlockCode"
          },
          {
            "ActionName": "GetSnowballUsage",
            "FullActionName": "snowball::GetSnowballUsage"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "DescribeAddresses",
            "FullActionName": "snowball::DescribeAddresses"
          },
          {
            "ActionName": "ListClusterJobs",
            "FullActionName": "snowball::ListClusterJobs"
          },
          {
            "ActionName": "ListClusters",
            "FullActionName": "snowball::ListClusters"
          },
          {
            "ActionName": "ListJobs",
            "FullActionName": "snowball::ListJobs"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Step Functions",
    "AccessLevels": [
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "CreateActivity",
            "FullActionName": "states::CreateActivity"
          },
          {
            "ActionName": "CreateStateMachine",
            "FullActionName": "states::CreateStateMachine"
          },
          {
            "ActionName": "TagResource",
            "FullActionName": "states::TagResource"
          },
          {
            "ActionName": "UntagResource",
            "FullActionName": "states::UntagResource"
          }
        ]
      },
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "DeleteActivity",
            "FullActionName": "states::DeleteActivity"
          },
          {
            "ActionName": "DeleteStateMachine",
            "FullActionName": "states::DeleteStateMachine"
          },
          {
            "ActionName": "GetActivityTask",
            "FullActionName": "states::GetActivityTask"
          },
          {
            "ActionName": "SendTaskFailure",
            "FullActionName": "states::SendTaskFailure"
          },
          {
            "ActionName": "SendTaskHeartbeat",
            "FullActionName": "states::SendTaskHeartbeat"
          },
          {
            "ActionName": "SendTaskSuccess",
            "FullActionName": "states::SendTaskSuccess"
          },
          {
            "ActionName": "StartExecution",
            "FullActionName": "states::StartExecution"
          },
          {
            "ActionName": "StopExecution",
            "FullActionName": "states::StopExecution"
          },
          {
            "ActionName": "UpdateStateMachine",
            "FullActionName": "states::UpdateStateMachine"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeActivity",
            "FullActionName": "states::DescribeActivity"
          },
          {
            "ActionName": "DescribeExecution",
            "FullActionName": "states::DescribeExecution"
          },
          {
            "ActionName": "DescribeStateMachine",
            "FullActionName": "states::DescribeStateMachine"
          },
          {
            "ActionName": "DescribeStateMachineForExecution",
            "FullActionName": "states::DescribeStateMachineForExecution"
          },
          {
            "ActionName": "GetExecutionHistory",
            "FullActionName": "states::GetExecutionHistory"
          },
          {
            "ActionName": "ListExecutions",
            "FullActionName": "states::ListExecutions"
          },
          {
            "ActionName": "ListTagsForResource",
            "FullActionName": "states::ListTagsForResource"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListActivities",
            "FullActionName": "states::ListActivities"
          },
          {
            "ActionName": "ListStateMachines",
            "FullActionName": "states::ListStateMachines"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Storage Gateway",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "ActivateGateway",
            "FullActionName": "storagegateway::ActivateGateway"
          },
          {
            "ActionName": "AddCache",
            "FullActionName": "storagegateway::AddCache"
          },
          {
            "ActionName": "AddUploadBuffer",
            "FullActionName": "storagegateway::AddUploadBuffer"
          },
          {
            "ActionName": "AddWorkingStorage",
            "FullActionName": "storagegateway::AddWorkingStorage"
          },
          {
            "ActionName": "AttachVolume",
            "FullActionName": "storagegateway::AttachVolume"
          },
          {
            "ActionName": "CancelArchival",
            "FullActionName": "storagegateway::CancelArchival"
          },
          {
            "ActionName": "CancelRetrieval",
            "FullActionName": "storagegateway::CancelRetrieval"
          },
          {
            "ActionName": "CreateCachediSCSIVolume",
            "FullActionName": "storagegateway::CreateCachediSCSIVolume"
          },
          {
            "ActionName": "CreateNFSFileShare",
            "FullActionName": "storagegateway::CreateNFSFileShare"
          },
          {
            "ActionName": "CreateSMBFileShare",
            "FullActionName": "storagegateway::CreateSMBFileShare"
          },
          {
            "ActionName": "CreateSnapshot",
            "FullActionName": "storagegateway::CreateSnapshot"
          },
          {
            "ActionName": "CreateSnapshotFromVolumeRecoveryPoint",
            "FullActionName": "storagegateway::CreateSnapshotFromVolumeRecoveryPoint"
          },
          {
            "ActionName": "CreateStorediSCSIVolume",
            "FullActionName": "storagegateway::CreateStorediSCSIVolume"
          },
          {
            "ActionName": "CreateTapeWithBarcode",
            "FullActionName": "storagegateway::CreateTapeWithBarcode"
          },
          {
            "ActionName": "CreateTapes",
            "FullActionName": "storagegateway::CreateTapes"
          },
          {
            "ActionName": "DeleteBandwidthRateLimit",
            "FullActionName": "storagegateway::DeleteBandwidthRateLimit"
          },
          {
            "ActionName": "DeleteChapCredentials",
            "FullActionName": "storagegateway::DeleteChapCredentials"
          },
          {
            "ActionName": "DeleteFileShare",
            "FullActionName": "storagegateway::DeleteFileShare"
          },
          {
            "ActionName": "DeleteGateway",
            "FullActionName": "storagegateway::DeleteGateway"
          },
          {
            "ActionName": "DeleteSnapshotSchedule",
            "FullActionName": "storagegateway::DeleteSnapshotSchedule"
          },
          {
            "ActionName": "DeleteTape",
            "FullActionName": "storagegateway::DeleteTape"
          },
          {
            "ActionName": "DeleteTapeArchive",
            "FullActionName": "storagegateway::DeleteTapeArchive"
          },
          {
            "ActionName": "DeleteVolume",
            "FullActionName": "storagegateway::DeleteVolume"
          },
          {
            "ActionName": "DetachVolume",
            "FullActionName": "storagegateway::DetachVolume"
          },
          {
            "ActionName": "DisableGateway",
            "FullActionName": "storagegateway::DisableGateway"
          },
          {
            "ActionName": "JoinDomain",
            "FullActionName": "storagegateway::JoinDomain"
          },
          {
            "ActionName": "NotifyWhenUploaded",
            "FullActionName": "storagegateway::NotifyWhenUploaded"
          },
          {
            "ActionName": "RefreshCache",
            "FullActionName": "storagegateway::RefreshCache"
          },
          {
            "ActionName": "ResetCache",
            "FullActionName": "storagegateway::ResetCache"
          },
          {
            "ActionName": "RetrieveTapeArchive",
            "FullActionName": "storagegateway::RetrieveTapeArchive"
          },
          {
            "ActionName": "RetrieveTapeRecoveryPoint",
            "FullActionName": "storagegateway::RetrieveTapeRecoveryPoint"
          },
          {
            "ActionName": "SetLocalConsolePassword",
            "FullActionName": "storagegateway::SetLocalConsolePassword"
          },
          {
            "ActionName": "SetSMBGuestPassword",
            "FullActionName": "storagegateway::SetSMBGuestPassword"
          },
          {
            "ActionName": "ShutdownGateway",
            "FullActionName": "storagegateway::ShutdownGateway"
          },
          {
            "ActionName": "StartGateway",
            "FullActionName": "storagegateway::StartGateway"
          },
          {
            "ActionName": "UpdateBandwidthRateLimit",
            "FullActionName": "storagegateway::UpdateBandwidthRateLimit"
          },
          {
            "ActionName": "UpdateChapCredentials",
            "FullActionName": "storagegateway::UpdateChapCredentials"
          },
          {
            "ActionName": "UpdateGatewayInformation",
            "FullActionName": "storagegateway::UpdateGatewayInformation"
          },
          {
            "ActionName": "UpdateGatewaySoftwareNow",
            "FullActionName": "storagegateway::UpdateGatewaySoftwareNow"
          },
          {
            "ActionName": "UpdateMaintenanceStartTime",
            "FullActionName": "storagegateway::UpdateMaintenanceStartTime"
          },
          {
            "ActionName": "UpdateNFSFileShare",
            "FullActionName": "storagegateway::UpdateNFSFileShare"
          },
          {
            "ActionName": "UpdateSMBFileShare",
            "FullActionName": "storagegateway::UpdateSMBFileShare"
          },
          {
            "ActionName": "UpdateSnapshotSchedule",
            "FullActionName": "storagegateway::UpdateSnapshotSchedule"
          },
          {
            "ActionName": "UpdateVTLDeviceType",
            "FullActionName": "storagegateway::UpdateVTLDeviceType"
          }
        ]
      },
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "AddTagsToResource",
            "FullActionName": "storagegateway::AddTagsToResource"
          },
          {
            "ActionName": "RemoveTagsFromResource",
            "FullActionName": "storagegateway::RemoveTagsFromResource"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeBandwidthRateLimit",
            "FullActionName": "storagegateway::DescribeBandwidthRateLimit"
          },
          {
            "ActionName": "DescribeCache",
            "FullActionName": "storagegateway::DescribeCache"
          },
          {
            "ActionName": "DescribeCachediSCSIVolumes",
            "FullActionName": "storagegateway::DescribeCachediSCSIVolumes"
          },
          {
            "ActionName": "DescribeChapCredentials",
            "FullActionName": "storagegateway::DescribeChapCredentials"
          },
          {
            "ActionName": "DescribeGatewayInformation",
            "FullActionName": "storagegateway::DescribeGatewayInformation"
          },
          {
            "ActionName": "DescribeMaintenanceStartTime",
            "FullActionName": "storagegateway::DescribeMaintenanceStartTime"
          },
          {
            "ActionName": "DescribeNFSFileShares",
            "FullActionName": "storagegateway::DescribeNFSFileShares"
          },
          {
            "ActionName": "DescribeSMBFileShares",
            "FullActionName": "storagegateway::DescribeSMBFileShares"
          },
          {
            "ActionName": "DescribeSMBSettings",
            "FullActionName": "storagegateway::DescribeSMBSettings"
          },
          {
            "ActionName": "DescribeSnapshotSchedule",
            "FullActionName": "storagegateway::DescribeSnapshotSchedule"
          },
          {
            "ActionName": "DescribeStorediSCSIVolumes",
            "FullActionName": "storagegateway::DescribeStorediSCSIVolumes"
          },
          {
            "ActionName": "DescribeTapeArchives",
            "FullActionName": "storagegateway::DescribeTapeArchives"
          },
          {
            "ActionName": "DescribeTapeRecoveryPoints",
            "FullActionName": "storagegateway::DescribeTapeRecoveryPoints"
          },
          {
            "ActionName": "DescribeTapes",
            "FullActionName": "storagegateway::DescribeTapes"
          },
          {
            "ActionName": "DescribeUploadBuffer",
            "FullActionName": "storagegateway::DescribeUploadBuffer"
          },
          {
            "ActionName": "DescribeVTLDevices",
            "FullActionName": "storagegateway::DescribeVTLDevices"
          },
          {
            "ActionName": "DescribeWorkingStorage",
            "FullActionName": "storagegateway::DescribeWorkingStorage"
          },
          {
            "ActionName": "ListTagsForResource",
            "FullActionName": "storagegateway::ListTagsForResource"
          },
          {
            "ActionName": "ListTapes",
            "FullActionName": "storagegateway::ListTapes"
          },
          {
            "ActionName": "ListVolumeInitiators",
            "FullActionName": "storagegateway::ListVolumeInitiators"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListFileShares",
            "FullActionName": "storagegateway::ListFileShares"
          },
          {
            "ActionName": "ListGateways",
            "FullActionName": "storagegateway::ListGateways"
          },
          {
            "ActionName": "ListLocalDisks",
            "FullActionName": "storagegateway::ListLocalDisks"
          },
          {
            "ActionName": "ListVolumeRecoveryPoints",
            "FullActionName": "storagegateway::ListVolumeRecoveryPoints"
          },
          {
            "ActionName": "ListVolumes",
            "FullActionName": "storagegateway::ListVolumes"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Sumerian",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "Login",
            "FullActionName": "sumerian::Login"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "ViewRelease",
            "FullActionName": "sumerian::ViewRelease"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Support",
    "AccessLevels": []
  },
  {
    "ServiceName": "Systems Manager",
    "AccessLevels": [
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "AddTagsToResource",
            "FullActionName": "ssm::AddTagsToResource"
          },
          {
            "ActionName": "CreateDocument",
            "FullActionName": "ssm::CreateDocument"
          },
          {
            "ActionName": "CreateMaintenanceWindow",
            "FullActionName": "ssm::CreateMaintenanceWindow"
          },
          {
            "ActionName": "CreatePatchBaseline",
            "FullActionName": "ssm::CreatePatchBaseline"
          },
          {
            "ActionName": "PutParameter",
            "FullActionName": "ssm::PutParameter"
          },
          {
            "ActionName": "RemoveTagsFromResource",
            "FullActionName": "ssm::RemoveTagsFromResource"
          }
        ]
      },
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "CancelCommand",
            "FullActionName": "ssm::CancelCommand"
          },
          {
            "ActionName": "CancelMaintenanceWindowExecution",
            "FullActionName": "ssm::CancelMaintenanceWindowExecution"
          },
          {
            "ActionName": "CreateActivation",
            "FullActionName": "ssm::CreateActivation"
          },
          {
            "ActionName": "CreateAssociation",
            "FullActionName": "ssm::CreateAssociation"
          },
          {
            "ActionName": "CreateAssociationBatch",
            "FullActionName": "ssm::CreateAssociationBatch"
          },
          {
            "ActionName": "CreateOpsItem",
            "FullActionName": "ssm::CreateOpsItem"
          },
          {
            "ActionName": "CreateResourceDataSync",
            "FullActionName": "ssm::CreateResourceDataSync"
          },
          {
            "ActionName": "DeleteActivation",
            "FullActionName": "ssm::DeleteActivation"
          },
          {
            "ActionName": "DeleteAssociation",
            "FullActionName": "ssm::DeleteAssociation"
          },
          {
            "ActionName": "DeleteDocument",
            "FullActionName": "ssm::DeleteDocument"
          },
          {
            "ActionName": "DeleteInventory",
            "FullActionName": "ssm::DeleteInventory"
          },
          {
            "ActionName": "DeleteMaintenanceWindow",
            "FullActionName": "ssm::DeleteMaintenanceWindow"
          },
          {
            "ActionName": "DeleteParameter",
            "FullActionName": "ssm::DeleteParameter"
          },
          {
            "ActionName": "DeleteParameters",
            "FullActionName": "ssm::DeleteParameters"
          },
          {
            "ActionName": "DeletePatchBaseline",
            "FullActionName": "ssm::DeletePatchBaseline"
          },
          {
            "ActionName": "DeleteResourceDataSync",
            "FullActionName": "ssm::DeleteResourceDataSync"
          },
          {
            "ActionName": "DeregisterManagedInstance",
            "FullActionName": "ssm::DeregisterManagedInstance"
          },
          {
            "ActionName": "DeregisterPatchBaselineForPatchGroup",
            "FullActionName": "ssm::DeregisterPatchBaselineForPatchGroup"
          },
          {
            "ActionName": "DeregisterTargetFromMaintenanceWindow",
            "FullActionName": "ssm::DeregisterTargetFromMaintenanceWindow"
          },
          {
            "ActionName": "DeregisterTaskFromMaintenanceWindow",
            "FullActionName": "ssm::DeregisterTaskFromMaintenanceWindow"
          },
          {
            "ActionName": "LabelParameterVersion",
            "FullActionName": "ssm::LabelParameterVersion"
          },
          {
            "ActionName": "ModifyDocumentPermission",
            "FullActionName": "ssm::ModifyDocumentPermission"
          },
          {
            "ActionName": "PutComplianceItems",
            "FullActionName": "ssm::PutComplianceItems"
          },
          {
            "ActionName": "PutInventory",
            "FullActionName": "ssm::PutInventory"
          },
          {
            "ActionName": "RegisterDefaultPatchBaseline",
            "FullActionName": "ssm::RegisterDefaultPatchBaseline"
          },
          {
            "ActionName": "RegisterPatchBaselineForPatchGroup",
            "FullActionName": "ssm::RegisterPatchBaselineForPatchGroup"
          },
          {
            "ActionName": "RegisterTargetWithMaintenanceWindow",
            "FullActionName": "ssm::RegisterTargetWithMaintenanceWindow"
          },
          {
            "ActionName": "RegisterTaskWithMaintenanceWindow",
            "FullActionName": "ssm::RegisterTaskWithMaintenanceWindow"
          },
          {
            "ActionName": "ResumeSession",
            "FullActionName": "ssm::ResumeSession"
          },
          {
            "ActionName": "SendAutomationSignal",
            "FullActionName": "ssm::SendAutomationSignal"
          },
          {
            "ActionName": "SendCommand",
            "FullActionName": "ssm::SendCommand"
          },
          {
            "ActionName": "StartAssociationsOnce",
            "FullActionName": "ssm::StartAssociationsOnce"
          },
          {
            "ActionName": "StartAutomationExecution",
            "FullActionName": "ssm::StartAutomationExecution"
          },
          {
            "ActionName": "StartSession",
            "FullActionName": "ssm::StartSession"
          },
          {
            "ActionName": "StopAutomationExecution",
            "FullActionName": "ssm::StopAutomationExecution"
          },
          {
            "ActionName": "TerminateSession",
            "FullActionName": "ssm::TerminateSession"
          },
          {
            "ActionName": "UpdateAssociation",
            "FullActionName": "ssm::UpdateAssociation"
          },
          {
            "ActionName": "UpdateAssociationStatus",
            "FullActionName": "ssm::UpdateAssociationStatus"
          },
          {
            "ActionName": "UpdateDocument",
            "FullActionName": "ssm::UpdateDocument"
          },
          {
            "ActionName": "UpdateDocumentDefaultVersion",
            "FullActionName": "ssm::UpdateDocumentDefaultVersion"
          },
          {
            "ActionName": "UpdateInstanceAssociationStatus",
            "FullActionName": "ssm::UpdateInstanceAssociationStatus"
          },
          {
            "ActionName": "UpdateInstanceInformation",
            "FullActionName": "ssm::UpdateInstanceInformation"
          },
          {
            "ActionName": "UpdateMaintenanceWindow",
            "FullActionName": "ssm::UpdateMaintenanceWindow"
          },
          {
            "ActionName": "UpdateMaintenanceWindowTarget",
            "FullActionName": "ssm::UpdateMaintenanceWindowTarget"
          },
          {
            "ActionName": "UpdateMaintenanceWindowTask",
            "FullActionName": "ssm::UpdateMaintenanceWindowTask"
          },
          {
            "ActionName": "UpdateManagedInstanceRole",
            "FullActionName": "ssm::UpdateManagedInstanceRole"
          },
          {
            "ActionName": "UpdateOpsItem",
            "FullActionName": "ssm::UpdateOpsItem"
          },
          {
            "ActionName": "UpdatePatchBaseline",
            "FullActionName": "ssm::UpdatePatchBaseline"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeActivations",
            "FullActionName": "ssm::DescribeActivations"
          },
          {
            "ActionName": "DescribeAssociation",
            "FullActionName": "ssm::DescribeAssociation"
          },
          {
            "ActionName": "DescribeAssociationExecutionTargets",
            "FullActionName": "ssm::DescribeAssociationExecutionTargets"
          },
          {
            "ActionName": "DescribeAssociationExecutions",
            "FullActionName": "ssm::DescribeAssociationExecutions"
          },
          {
            "ActionName": "DescribeAutomationExecutions",
            "FullActionName": "ssm::DescribeAutomationExecutions"
          },
          {
            "ActionName": "DescribeAutomationStepExecutions",
            "FullActionName": "ssm::DescribeAutomationStepExecutions"
          },
          {
            "ActionName": "DescribeAvailablePatches",
            "FullActionName": "ssm::DescribeAvailablePatches"
          },
          {
            "ActionName": "DescribeDocument",
            "FullActionName": "ssm::DescribeDocument"
          },
          {
            "ActionName": "DescribeDocumentParameters",
            "FullActionName": "ssm::DescribeDocumentParameters"
          },
          {
            "ActionName": "DescribeDocumentPermission",
            "FullActionName": "ssm::DescribeDocumentPermission"
          },
          {
            "ActionName": "DescribeEffectiveInstanceAssociations",
            "FullActionName": "ssm::DescribeEffectiveInstanceAssociations"
          },
          {
            "ActionName": "DescribeEffectivePatchesForPatchBaseline",
            "FullActionName": "ssm::DescribeEffectivePatchesForPatchBaseline"
          },
          {
            "ActionName": "DescribeInstanceAssociationsStatus",
            "FullActionName": "ssm::DescribeInstanceAssociationsStatus"
          },
          {
            "ActionName": "DescribeInstanceInformation",
            "FullActionName": "ssm::DescribeInstanceInformation"
          },
          {
            "ActionName": "DescribeInstancePatchStates",
            "FullActionName": "ssm::DescribeInstancePatchStates"
          },
          {
            "ActionName": "DescribeInstancePatchStatesForPatchGroup",
            "FullActionName": "ssm::DescribeInstancePatchStatesForPatchGroup"
          },
          {
            "ActionName": "DescribeInstancePatches",
            "FullActionName": "ssm::DescribeInstancePatches"
          },
          {
            "ActionName": "DescribeInstanceProperties",
            "FullActionName": "ssm::DescribeInstanceProperties"
          },
          {
            "ActionName": "DescribeInventoryDeletions",
            "FullActionName": "ssm::DescribeInventoryDeletions"
          },
          {
            "ActionName": "DescribeOpsItems",
            "FullActionName": "ssm::DescribeOpsItems"
          },
          {
            "ActionName": "DescribePatchGroupState",
            "FullActionName": "ssm::DescribePatchGroupState"
          },
          {
            "ActionName": "GetAutomationExecution",
            "FullActionName": "ssm::GetAutomationExecution"
          },
          {
            "ActionName": "GetCommandInvocation",
            "FullActionName": "ssm::GetCommandInvocation"
          },
          {
            "ActionName": "GetConnectionStatus",
            "FullActionName": "ssm::GetConnectionStatus"
          },
          {
            "ActionName": "GetDefaultPatchBaseline",
            "FullActionName": "ssm::GetDefaultPatchBaseline"
          },
          {
            "ActionName": "GetDeployablePatchSnapshotForInstance",
            "FullActionName": "ssm::GetDeployablePatchSnapshotForInstance"
          },
          {
            "ActionName": "GetDocument",
            "FullActionName": "ssm::GetDocument"
          },
          {
            "ActionName": "GetInventory",
            "FullActionName": "ssm::GetInventory"
          },
          {
            "ActionName": "GetInventorySchema",
            "FullActionName": "ssm::GetInventorySchema"
          },
          {
            "ActionName": "GetMaintenanceWindow",
            "FullActionName": "ssm::GetMaintenanceWindow"
          },
          {
            "ActionName": "GetMaintenanceWindowExecution",
            "FullActionName": "ssm::GetMaintenanceWindowExecution"
          },
          {
            "ActionName": "GetMaintenanceWindowExecutionTask",
            "FullActionName": "ssm::GetMaintenanceWindowExecutionTask"
          },
          {
            "ActionName": "GetMaintenanceWindowExecutionTaskInvocation",
            "FullActionName": "ssm::GetMaintenanceWindowExecutionTaskInvocation"
          },
          {
            "ActionName": "GetMaintenanceWindowTask",
            "FullActionName": "ssm::GetMaintenanceWindowTask"
          },
          {
            "ActionName": "GetManifest",
            "FullActionName": "ssm::GetManifest"
          },
          {
            "ActionName": "GetOpsItem",
            "FullActionName": "ssm::GetOpsItem"
          },
          {
            "ActionName": "GetOpsSummary",
            "FullActionName": "ssm::GetOpsSummary"
          },
          {
            "ActionName": "GetParameter",
            "FullActionName": "ssm::GetParameter"
          },
          {
            "ActionName": "GetParameterHistory",
            "FullActionName": "ssm::GetParameterHistory"
          },
          {
            "ActionName": "GetParameters",
            "FullActionName": "ssm::GetParameters"
          },
          {
            "ActionName": "GetParametersByPath",
            "FullActionName": "ssm::GetParametersByPath"
          },
          {
            "ActionName": "GetPatchBaseline",
            "FullActionName": "ssm::GetPatchBaseline"
          },
          {
            "ActionName": "GetPatchBaselineForPatchGroup",
            "FullActionName": "ssm::GetPatchBaselineForPatchGroup"
          },
          {
            "ActionName": "ListCommandInvocations",
            "FullActionName": "ssm::ListCommandInvocations"
          },
          {
            "ActionName": "ListCommands",
            "FullActionName": "ssm::ListCommands"
          },
          {
            "ActionName": "ListTagsForResource",
            "FullActionName": "ssm::ListTagsForResource"
          },
          {
            "ActionName": "PutConfigurePackageResult",
            "FullActionName": "ssm::PutConfigurePackageResult"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "DescribeMaintenanceWindowExecutionTaskInvocations",
            "FullActionName": "ssm::DescribeMaintenanceWindowExecutionTaskInvocations"
          },
          {
            "ActionName": "DescribeMaintenanceWindowExecutionTasks",
            "FullActionName": "ssm::DescribeMaintenanceWindowExecutionTasks"
          },
          {
            "ActionName": "DescribeMaintenanceWindowExecutions",
            "FullActionName": "ssm::DescribeMaintenanceWindowExecutions"
          },
          {
            "ActionName": "DescribeMaintenanceWindowSchedule",
            "FullActionName": "ssm::DescribeMaintenanceWindowSchedule"
          },
          {
            "ActionName": "DescribeMaintenanceWindowTargets",
            "FullActionName": "ssm::DescribeMaintenanceWindowTargets"
          },
          {
            "ActionName": "DescribeMaintenanceWindowTasks",
            "FullActionName": "ssm::DescribeMaintenanceWindowTasks"
          },
          {
            "ActionName": "DescribeMaintenanceWindows",
            "FullActionName": "ssm::DescribeMaintenanceWindows"
          },
          {
            "ActionName": "DescribeMaintenanceWindowsForTarget",
            "FullActionName": "ssm::DescribeMaintenanceWindowsForTarget"
          },
          {
            "ActionName": "DescribeParameters",
            "FullActionName": "ssm::DescribeParameters"
          },
          {
            "ActionName": "DescribePatchBaselines",
            "FullActionName": "ssm::DescribePatchBaselines"
          },
          {
            "ActionName": "DescribePatchGroups",
            "FullActionName": "ssm::DescribePatchGroups"
          },
          {
            "ActionName": "DescribeSessions",
            "FullActionName": "ssm::DescribeSessions"
          },
          {
            "ActionName": "ListAssociationVersions",
            "FullActionName": "ssm::ListAssociationVersions"
          },
          {
            "ActionName": "ListAssociations",
            "FullActionName": "ssm::ListAssociations"
          },
          {
            "ActionName": "ListComplianceItems",
            "FullActionName": "ssm::ListComplianceItems"
          },
          {
            "ActionName": "ListComplianceSummaries",
            "FullActionName": "ssm::ListComplianceSummaries"
          },
          {
            "ActionName": "ListDocumentVersions",
            "FullActionName": "ssm::ListDocumentVersions"
          },
          {
            "ActionName": "ListDocuments",
            "FullActionName": "ssm::ListDocuments"
          },
          {
            "ActionName": "ListInstanceAssociations",
            "FullActionName": "ssm::ListInstanceAssociations"
          },
          {
            "ActionName": "ListInventoryEntries",
            "FullActionName": "ssm::ListInventoryEntries"
          },
          {
            "ActionName": "ListResourceComplianceSummaries",
            "FullActionName": "ssm::ListResourceComplianceSummaries"
          },
          {
            "ActionName": "ListResourceDataSync",
            "FullActionName": "ssm::ListResourceDataSync"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Textract",
    "AccessLevels": [
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "AnalyzeDocument",
            "FullActionName": "textract::AnalyzeDocument"
          },
          {
            "ActionName": "DetectDocumentText",
            "FullActionName": "textract::DetectDocumentText"
          },
          {
            "ActionName": "GetDocumentAnalysis",
            "FullActionName": "textract::GetDocumentAnalysis"
          },
          {
            "ActionName": "GetDocumentTextDetection",
            "FullActionName": "textract::GetDocumentTextDetection"
          }
        ]
      },
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "StartDocumentAnalysis",
            "FullActionName": "textract::StartDocumentAnalysis"
          },
          {
            "ActionName": "StartDocumentTextDetection",
            "FullActionName": "textract::StartDocumentTextDetection"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Transcribe",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "CreateVocabulary",
            "FullActionName": "transcribe::CreateVocabulary"
          },
          {
            "ActionName": "DeleteTranscriptionJob",
            "FullActionName": "transcribe::DeleteTranscriptionJob"
          },
          {
            "ActionName": "DeleteVocabulary",
            "FullActionName": "transcribe::DeleteVocabulary"
          },
          {
            "ActionName": "StartStreamTranscription",
            "FullActionName": "transcribe::StartStreamTranscription"
          },
          {
            "ActionName": "StartTranscriptionJob",
            "FullActionName": "transcribe::StartTranscriptionJob"
          },
          {
            "ActionName": "UpdateVocabulary",
            "FullActionName": "transcribe::UpdateVocabulary"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "GetTranscriptionJob",
            "FullActionName": "transcribe::GetTranscriptionJob"
          },
          {
            "ActionName": "GetVocabulary",
            "FullActionName": "transcribe::GetVocabulary"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListTranscriptionJobs",
            "FullActionName": "transcribe::ListTranscriptionJobs"
          },
          {
            "ActionName": "ListVocabularies",
            "FullActionName": "transcribe::ListVocabularies"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Transfer",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "CreateServer",
            "FullActionName": "transfer::CreateServer"
          },
          {
            "ActionName": "CreateUser",
            "FullActionName": "transfer::CreateUser"
          },
          {
            "ActionName": "DeleteServer",
            "FullActionName": "transfer::DeleteServer"
          },
          {
            "ActionName": "DeleteSshPublicKey",
            "FullActionName": "transfer::DeleteSshPublicKey"
          },
          {
            "ActionName": "DeleteUser",
            "FullActionName": "transfer::DeleteUser"
          },
          {
            "ActionName": "ImportSshPublicKey",
            "FullActionName": "transfer::ImportSshPublicKey"
          },
          {
            "ActionName": "StartServer",
            "FullActionName": "transfer::StartServer"
          },
          {
            "ActionName": "StopServer",
            "FullActionName": "transfer::StopServer"
          },
          {
            "ActionName": "UpdateServer",
            "FullActionName": "transfer::UpdateServer"
          },
          {
            "ActionName": "UpdateUser",
            "FullActionName": "transfer::UpdateUser"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeServer",
            "FullActionName": "transfer::DescribeServer"
          },
          {
            "ActionName": "DescribeUser",
            "FullActionName": "transfer::DescribeUser"
          },
          {
            "ActionName": "ListTagsForResource",
            "FullActionName": "transfer::ListTagsForResource"
          },
          {
            "ActionName": "TestIdentityProvider",
            "FullActionName": "transfer::TestIdentityProvider"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListServers",
            "FullActionName": "transfer::ListServers"
          },
          {
            "ActionName": "ListUsers",
            "FullActionName": "transfer::ListUsers"
          }
        ]
      },
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "TagResource",
            "FullActionName": "transfer::TagResource"
          },
          {
            "ActionName": "UntagResource",
            "FullActionName": "transfer::UntagResource"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Translate",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "DeleteTerminology",
            "FullActionName": "translate::DeleteTerminology"
          },
          {
            "ActionName": "ImportTerminology",
            "FullActionName": "translate::ImportTerminology"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "GetTerminology",
            "FullActionName": "translate::GetTerminology"
          },
          {
            "ActionName": "ListTerminologies",
            "FullActionName": "translate::ListTerminologies"
          },
          {
            "ActionName": "TranslateText",
            "FullActionName": "translate::TranslateText"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Trusted Advisor",
    "AccessLevels": [
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeAccount",
            "FullActionName": "trustedadvisor::DescribeAccount"
          },
          {
            "ActionName": "DescribeAccountAccess",
            "FullActionName": "trustedadvisor::DescribeAccountAccess"
          },
          {
            "ActionName": "DescribeCheckItems",
            "FullActionName": "trustedadvisor::DescribeCheckItems"
          },
          {
            "ActionName": "DescribeCheckRefreshStatuses",
            "FullActionName": "trustedadvisor::DescribeCheckRefreshStatuses"
          },
          {
            "ActionName": "DescribeCheckSummaries",
            "FullActionName": "trustedadvisor::DescribeCheckSummaries"
          },
          {
            "ActionName": "DescribeChecks",
            "FullActionName": "trustedadvisor::DescribeChecks"
          },
          {
            "ActionName": "DescribeNotificationPreferences",
            "FullActionName": "trustedadvisor::DescribeNotificationPreferences"
          }
        ]
      },
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "ExcludeCheckItems",
            "FullActionName": "trustedadvisor::ExcludeCheckItems"
          },
          {
            "ActionName": "IncludeCheckItems",
            "FullActionName": "trustedadvisor::IncludeCheckItems"
          },
          {
            "ActionName": "RefreshCheck",
            "FullActionName": "trustedadvisor::RefreshCheck"
          },
          {
            "ActionName": "SetAccountAccess",
            "FullActionName": "trustedadvisor::SetAccountAccess"
          },
          {
            "ActionName": "UpdateNotificationPreferences",
            "FullActionName": "trustedadvisor::UpdateNotificationPreferences"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "WAF",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "CreateByteMatchSet",
            "FullActionName": "waf::CreateByteMatchSet"
          },
          {
            "ActionName": "CreateGeoMatchSet",
            "FullActionName": "waf::CreateGeoMatchSet"
          },
          {
            "ActionName": "CreateIPSet",
            "FullActionName": "waf::CreateIPSet"
          },
          {
            "ActionName": "CreateRateBasedRule",
            "FullActionName": "waf::CreateRateBasedRule"
          },
          {
            "ActionName": "CreateRegexMatchSet",
            "FullActionName": "waf::CreateRegexMatchSet"
          },
          {
            "ActionName": "CreateRegexPatternSet",
            "FullActionName": "waf::CreateRegexPatternSet"
          },
          {
            "ActionName": "CreateRule",
            "FullActionName": "waf::CreateRule"
          },
          {
            "ActionName": "CreateRuleGroup",
            "FullActionName": "waf::CreateRuleGroup"
          },
          {
            "ActionName": "CreateSizeConstraintSet",
            "FullActionName": "waf::CreateSizeConstraintSet"
          },
          {
            "ActionName": "CreateSqlInjectionMatchSet",
            "FullActionName": "waf::CreateSqlInjectionMatchSet"
          },
          {
            "ActionName": "CreateXssMatchSet",
            "FullActionName": "waf::CreateXssMatchSet"
          },
          {
            "ActionName": "DeleteByteMatchSet",
            "FullActionName": "waf::DeleteByteMatchSet"
          },
          {
            "ActionName": "DeleteGeoMatchSet",
            "FullActionName": "waf::DeleteGeoMatchSet"
          },
          {
            "ActionName": "DeleteIPSet",
            "FullActionName": "waf::DeleteIPSet"
          },
          {
            "ActionName": "DeleteLoggingConfiguration",
            "FullActionName": "waf::DeleteLoggingConfiguration"
          },
          {
            "ActionName": "DeleteRateBasedRule",
            "FullActionName": "waf::DeleteRateBasedRule"
          },
          {
            "ActionName": "DeleteRegexMatchSet",
            "FullActionName": "waf::DeleteRegexMatchSet"
          },
          {
            "ActionName": "DeleteRegexPatternSet",
            "FullActionName": "waf::DeleteRegexPatternSet"
          },
          {
            "ActionName": "DeleteRule",
            "FullActionName": "waf::DeleteRule"
          },
          {
            "ActionName": "DeleteRuleGroup",
            "FullActionName": "waf::DeleteRuleGroup"
          },
          {
            "ActionName": "DeleteSizeConstraintSet",
            "FullActionName": "waf::DeleteSizeConstraintSet"
          },
          {
            "ActionName": "DeleteSqlInjectionMatchSet",
            "FullActionName": "waf::DeleteSqlInjectionMatchSet"
          },
          {
            "ActionName": "DeleteXssMatchSet",
            "FullActionName": "waf::DeleteXssMatchSet"
          },
          {
            "ActionName": "PutLoggingConfiguration",
            "FullActionName": "waf::PutLoggingConfiguration"
          },
          {
            "ActionName": "UpdateByteMatchSet",
            "FullActionName": "waf::UpdateByteMatchSet"
          },
          {
            "ActionName": "UpdateGeoMatchSet",
            "FullActionName": "waf::UpdateGeoMatchSet"
          },
          {
            "ActionName": "UpdateIPSet",
            "FullActionName": "waf::UpdateIPSet"
          },
          {
            "ActionName": "UpdateRateBasedRule",
            "FullActionName": "waf::UpdateRateBasedRule"
          },
          {
            "ActionName": "UpdateRegexMatchSet",
            "FullActionName": "waf::UpdateRegexMatchSet"
          },
          {
            "ActionName": "UpdateRegexPatternSet",
            "FullActionName": "waf::UpdateRegexPatternSet"
          },
          {
            "ActionName": "UpdateRule",
            "FullActionName": "waf::UpdateRule"
          },
          {
            "ActionName": "UpdateRuleGroup",
            "FullActionName": "waf::UpdateRuleGroup"
          },
          {
            "ActionName": "UpdateSizeConstraintSet",
            "FullActionName": "waf::UpdateSizeConstraintSet"
          },
          {
            "ActionName": "UpdateSqlInjectionMatchSet",
            "FullActionName": "waf::UpdateSqlInjectionMatchSet"
          },
          {
            "ActionName": "UpdateXssMatchSet",
            "FullActionName": "waf::UpdateXssMatchSet"
          }
        ]
      },
      {
        "AccessLevel": "Permissions",
        "Actions": [
          {
            "ActionName": "CreateWebACL",
            "FullActionName": "waf::CreateWebACL"
          },
          {
            "ActionName": "DeletePermissionPolicy",
            "FullActionName": "waf::DeletePermissionPolicy"
          },
          {
            "ActionName": "DeleteWebACL",
            "FullActionName": "waf::DeleteWebACL"
          },
          {
            "ActionName": "PutPermissionPolicy",
            "FullActionName": "waf::PutPermissionPolicy"
          },
          {
            "ActionName": "UpdateWebACL",
            "FullActionName": "waf::UpdateWebACL"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "GetByteMatchSet",
            "FullActionName": "waf::GetByteMatchSet"
          },
          {
            "ActionName": "GetChangeToken",
            "FullActionName": "waf::GetChangeToken"
          },
          {
            "ActionName": "GetChangeTokenStatus",
            "FullActionName": "waf::GetChangeTokenStatus"
          },
          {
            "ActionName": "GetGeoMatchSet",
            "FullActionName": "waf::GetGeoMatchSet"
          },
          {
            "ActionName": "GetIPSet",
            "FullActionName": "waf::GetIPSet"
          },
          {
            "ActionName": "GetLoggingConfiguration",
            "FullActionName": "waf::GetLoggingConfiguration"
          },
          {
            "ActionName": "GetPermissionPolicy",
            "FullActionName": "waf::GetPermissionPolicy"
          },
          {
            "ActionName": "GetRateBasedRule",
            "FullActionName": "waf::GetRateBasedRule"
          },
          {
            "ActionName": "GetRateBasedRuleManagedKeys",
            "FullActionName": "waf::GetRateBasedRuleManagedKeys"
          },
          {
            "ActionName": "GetRegexMatchSet",
            "FullActionName": "waf::GetRegexMatchSet"
          },
          {
            "ActionName": "GetRegexPatternSet",
            "FullActionName": "waf::GetRegexPatternSet"
          },
          {
            "ActionName": "GetRule",
            "FullActionName": "waf::GetRule"
          },
          {
            "ActionName": "GetRuleGroup",
            "FullActionName": "waf::GetRuleGroup"
          },
          {
            "ActionName": "GetSampledRequests",
            "FullActionName": "waf::GetSampledRequests"
          },
          {
            "ActionName": "GetSizeConstraintSet",
            "FullActionName": "waf::GetSizeConstraintSet"
          },
          {
            "ActionName": "GetSqlInjectionMatchSet",
            "FullActionName": "waf::GetSqlInjectionMatchSet"
          },
          {
            "ActionName": "GetWebACL",
            "FullActionName": "waf::GetWebACL"
          },
          {
            "ActionName": "GetXssMatchSet",
            "FullActionName": "waf::GetXssMatchSet"
          },
          {
            "ActionName": "ListTagsForResource",
            "FullActionName": "waf::ListTagsForResource"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListActivatedRulesInRuleGroup",
            "FullActionName": "waf::ListActivatedRulesInRuleGroup"
          },
          {
            "ActionName": "ListByteMatchSets",
            "FullActionName": "waf::ListByteMatchSets"
          },
          {
            "ActionName": "ListGeoMatchSets",
            "FullActionName": "waf::ListGeoMatchSets"
          },
          {
            "ActionName": "ListIPSets",
            "FullActionName": "waf::ListIPSets"
          },
          {
            "ActionName": "ListLoggingConfigurations",
            "FullActionName": "waf::ListLoggingConfigurations"
          },
          {
            "ActionName": "ListRateBasedRules",
            "FullActionName": "waf::ListRateBasedRules"
          },
          {
            "ActionName": "ListRegexMatchSets",
            "FullActionName": "waf::ListRegexMatchSets"
          },
          {
            "ActionName": "ListRegexPatternSets",
            "FullActionName": "waf::ListRegexPatternSets"
          },
          {
            "ActionName": "ListRuleGroups",
            "FullActionName": "waf::ListRuleGroups"
          },
          {
            "ActionName": "ListRules",
            "FullActionName": "waf::ListRules"
          },
          {
            "ActionName": "ListSizeConstraintSets",
            "FullActionName": "waf::ListSizeConstraintSets"
          },
          {
            "ActionName": "ListSqlInjectionMatchSets",
            "FullActionName": "waf::ListSqlInjectionMatchSets"
          },
          {
            "ActionName": "ListSubscribedRuleGroups",
            "FullActionName": "waf::ListSubscribedRuleGroups"
          },
          {
            "ActionName": "ListWebACLs",
            "FullActionName": "waf::ListWebACLs"
          },
          {
            "ActionName": "ListXssMatchSets",
            "FullActionName": "waf::ListXssMatchSets"
          }
        ]
      },
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "TagResource",
            "FullActionName": "waf::TagResource"
          },
          {
            "ActionName": "UntagResource",
            "FullActionName": "waf::UntagResource"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "WAF Regional",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "AssociateWebACL",
            "FullActionName": "waf-regional::AssociateWebACL"
          },
          {
            "ActionName": "CreateByteMatchSet",
            "FullActionName": "waf-regional::CreateByteMatchSet"
          },
          {
            "ActionName": "CreateGeoMatchSet",
            "FullActionName": "waf-regional::CreateGeoMatchSet"
          },
          {
            "ActionName": "CreateIPSet",
            "FullActionName": "waf-regional::CreateIPSet"
          },
          {
            "ActionName": "CreateRateBasedRule",
            "FullActionName": "waf-regional::CreateRateBasedRule"
          },
          {
            "ActionName": "CreateRegexMatchSet",
            "FullActionName": "waf-regional::CreateRegexMatchSet"
          },
          {
            "ActionName": "CreateRegexPatternSet",
            "FullActionName": "waf-regional::CreateRegexPatternSet"
          },
          {
            "ActionName": "CreateRule",
            "FullActionName": "waf-regional::CreateRule"
          },
          {
            "ActionName": "CreateRuleGroup",
            "FullActionName": "waf-regional::CreateRuleGroup"
          },
          {
            "ActionName": "CreateSizeConstraintSet",
            "FullActionName": "waf-regional::CreateSizeConstraintSet"
          },
          {
            "ActionName": "CreateSqlInjectionMatchSet",
            "FullActionName": "waf-regional::CreateSqlInjectionMatchSet"
          },
          {
            "ActionName": "CreateXssMatchSet",
            "FullActionName": "waf-regional::CreateXssMatchSet"
          },
          {
            "ActionName": "DeleteByteMatchSet",
            "FullActionName": "waf-regional::DeleteByteMatchSet"
          },
          {
            "ActionName": "DeleteGeoMatchSet",
            "FullActionName": "waf-regional::DeleteGeoMatchSet"
          },
          {
            "ActionName": "DeleteIPSet",
            "FullActionName": "waf-regional::DeleteIPSet"
          },
          {
            "ActionName": "DeleteLoggingConfiguration",
            "FullActionName": "waf-regional::DeleteLoggingConfiguration"
          },
          {
            "ActionName": "DeleteRateBasedRule",
            "FullActionName": "waf-regional::DeleteRateBasedRule"
          },
          {
            "ActionName": "DeleteRegexMatchSet",
            "FullActionName": "waf-regional::DeleteRegexMatchSet"
          },
          {
            "ActionName": "DeleteRegexPatternSet",
            "FullActionName": "waf-regional::DeleteRegexPatternSet"
          },
          {
            "ActionName": "DeleteRule",
            "FullActionName": "waf-regional::DeleteRule"
          },
          {
            "ActionName": "DeleteRuleGroup",
            "FullActionName": "waf-regional::DeleteRuleGroup"
          },
          {
            "ActionName": "DeleteSizeConstraintSet",
            "FullActionName": "waf-regional::DeleteSizeConstraintSet"
          },
          {
            "ActionName": "DeleteSqlInjectionMatchSet",
            "FullActionName": "waf-regional::DeleteSqlInjectionMatchSet"
          },
          {
            "ActionName": "DeleteXssMatchSet",
            "FullActionName": "waf-regional::DeleteXssMatchSet"
          },
          {
            "ActionName": "DisassociateWebACL",
            "FullActionName": "waf-regional::DisassociateWebACL"
          },
          {
            "ActionName": "PutLoggingConfiguration",
            "FullActionName": "waf-regional::PutLoggingConfiguration"
          },
          {
            "ActionName": "UpdateByteMatchSet",
            "FullActionName": "waf-regional::UpdateByteMatchSet"
          },
          {
            "ActionName": "UpdateGeoMatchSet",
            "FullActionName": "waf-regional::UpdateGeoMatchSet"
          },
          {
            "ActionName": "UpdateIPSet",
            "FullActionName": "waf-regional::UpdateIPSet"
          },
          {
            "ActionName": "UpdateRateBasedRule",
            "FullActionName": "waf-regional::UpdateRateBasedRule"
          },
          {
            "ActionName": "UpdateRegexMatchSet",
            "FullActionName": "waf-regional::UpdateRegexMatchSet"
          },
          {
            "ActionName": "UpdateRegexPatternSet",
            "FullActionName": "waf-regional::UpdateRegexPatternSet"
          },
          {
            "ActionName": "UpdateRule",
            "FullActionName": "waf-regional::UpdateRule"
          },
          {
            "ActionName": "UpdateRuleGroup",
            "FullActionName": "waf-regional::UpdateRuleGroup"
          },
          {
            "ActionName": "UpdateSizeConstraintSet",
            "FullActionName": "waf-regional::UpdateSizeConstraintSet"
          },
          {
            "ActionName": "UpdateSqlInjectionMatchSet",
            "FullActionName": "waf-regional::UpdateSqlInjectionMatchSet"
          },
          {
            "ActionName": "UpdateXssMatchSet",
            "FullActionName": "waf-regional::UpdateXssMatchSet"
          }
        ]
      },
      {
        "AccessLevel": "Permissions",
        "Actions": [
          {
            "ActionName": "CreateWebACL",
            "FullActionName": "waf-regional::CreateWebACL"
          },
          {
            "ActionName": "DeletePermissionPolicy",
            "FullActionName": "waf-regional::DeletePermissionPolicy"
          },
          {
            "ActionName": "DeleteWebACL",
            "FullActionName": "waf-regional::DeleteWebACL"
          },
          {
            "ActionName": "PutPermissionPolicy",
            "FullActionName": "waf-regional::PutPermissionPolicy"
          },
          {
            "ActionName": "UpdateWebACL",
            "FullActionName": "waf-regional::UpdateWebACL"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "GetByteMatchSet",
            "FullActionName": "waf-regional::GetByteMatchSet"
          },
          {
            "ActionName": "GetChangeToken",
            "FullActionName": "waf-regional::GetChangeToken"
          },
          {
            "ActionName": "GetChangeTokenStatus",
            "FullActionName": "waf-regional::GetChangeTokenStatus"
          },
          {
            "ActionName": "GetGeoMatchSet",
            "FullActionName": "waf-regional::GetGeoMatchSet"
          },
          {
            "ActionName": "GetIPSet",
            "FullActionName": "waf-regional::GetIPSet"
          },
          {
            "ActionName": "GetLoggingConfiguration",
            "FullActionName": "waf-regional::GetLoggingConfiguration"
          },
          {
            "ActionName": "GetPermissionPolicy",
            "FullActionName": "waf-regional::GetPermissionPolicy"
          },
          {
            "ActionName": "GetRateBasedRule",
            "FullActionName": "waf-regional::GetRateBasedRule"
          },
          {
            "ActionName": "GetRateBasedRuleManagedKeys",
            "FullActionName": "waf-regional::GetRateBasedRuleManagedKeys"
          },
          {
            "ActionName": "GetRegexMatchSet",
            "FullActionName": "waf-regional::GetRegexMatchSet"
          },
          {
            "ActionName": "GetRegexPatternSet",
            "FullActionName": "waf-regional::GetRegexPatternSet"
          },
          {
            "ActionName": "GetRule",
            "FullActionName": "waf-regional::GetRule"
          },
          {
            "ActionName": "GetRuleGroup",
            "FullActionName": "waf-regional::GetRuleGroup"
          },
          {
            "ActionName": "GetSampledRequests",
            "FullActionName": "waf-regional::GetSampledRequests"
          },
          {
            "ActionName": "GetSizeConstraintSet",
            "FullActionName": "waf-regional::GetSizeConstraintSet"
          },
          {
            "ActionName": "GetSqlInjectionMatchSet",
            "FullActionName": "waf-regional::GetSqlInjectionMatchSet"
          },
          {
            "ActionName": "GetWebACL",
            "FullActionName": "waf-regional::GetWebACL"
          },
          {
            "ActionName": "GetWebACLForResource",
            "FullActionName": "waf-regional::GetWebACLForResource"
          },
          {
            "ActionName": "GetXssMatchSet",
            "FullActionName": "waf-regional::GetXssMatchSet"
          },
          {
            "ActionName": "ListTagsForResource",
            "FullActionName": "waf-regional::ListTagsForResource"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListActivatedRulesInRuleGroup",
            "FullActionName": "waf-regional::ListActivatedRulesInRuleGroup"
          },
          {
            "ActionName": "ListByteMatchSets",
            "FullActionName": "waf-regional::ListByteMatchSets"
          },
          {
            "ActionName": "ListGeoMatchSets",
            "FullActionName": "waf-regional::ListGeoMatchSets"
          },
          {
            "ActionName": "ListIPSets",
            "FullActionName": "waf-regional::ListIPSets"
          },
          {
            "ActionName": "ListLoggingConfigurations",
            "FullActionName": "waf-regional::ListLoggingConfigurations"
          },
          {
            "ActionName": "ListRateBasedRules",
            "FullActionName": "waf-regional::ListRateBasedRules"
          },
          {
            "ActionName": "ListRegexMatchSets",
            "FullActionName": "waf-regional::ListRegexMatchSets"
          },
          {
            "ActionName": "ListRegexPatternSets",
            "FullActionName": "waf-regional::ListRegexPatternSets"
          },
          {
            "ActionName": "ListResourcesForWebACL",
            "FullActionName": "waf-regional::ListResourcesForWebACL"
          },
          {
            "ActionName": "ListRuleGroups",
            "FullActionName": "waf-regional::ListRuleGroups"
          },
          {
            "ActionName": "ListRules",
            "FullActionName": "waf-regional::ListRules"
          },
          {
            "ActionName": "ListSizeConstraintSets",
            "FullActionName": "waf-regional::ListSizeConstraintSets"
          },
          {
            "ActionName": "ListSqlInjectionMatchSets",
            "FullActionName": "waf-regional::ListSqlInjectionMatchSets"
          },
          {
            "ActionName": "ListSubscribedRuleGroups",
            "FullActionName": "waf-regional::ListSubscribedRuleGroups"
          },
          {
            "ActionName": "ListWebACLs",
            "FullActionName": "waf-regional::ListWebACLs"
          },
          {
            "ActionName": "ListXssMatchSets",
            "FullActionName": "waf-regional::ListXssMatchSets"
          }
        ]
      },
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "TagResource",
            "FullActionName": "waf-regional::TagResource"
          },
          {
            "ActionName": "UntagResource",
            "FullActionName": "waf-regional::UntagResource"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "WAM",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "AuthenticatePackager",
            "FullActionName": "wam::AuthenticatePackager"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "Well-Architected Tool",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "CreateWorkload",
            "FullActionName": "wellarchitected::CreateWorkload"
          },
          {
            "ActionName": "DeleteWorkload",
            "FullActionName": "wellarchitected::DeleteWorkload"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "GetWorkload",
            "FullActionName": "wellarchitected::GetWorkload"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListWorkloads",
            "FullActionName": "wellarchitected::ListWorkloads"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "WorkDocs",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "AbortDocumentVersionUpload",
            "FullActionName": "workdocs::AbortDocumentVersionUpload"
          },
          {
            "ActionName": "ActivateUser",
            "FullActionName": "workdocs::ActivateUser"
          },
          {
            "ActionName": "AddResourcePermissions",
            "FullActionName": "workdocs::AddResourcePermissions"
          },
          {
            "ActionName": "AddUserToGroup",
            "FullActionName": "workdocs::AddUserToGroup"
          },
          {
            "ActionName": "CreateComment",
            "FullActionName": "workdocs::CreateComment"
          },
          {
            "ActionName": "CreateCustomMetadata",
            "FullActionName": "workdocs::CreateCustomMetadata"
          },
          {
            "ActionName": "CreateFolder",
            "FullActionName": "workdocs::CreateFolder"
          },
          {
            "ActionName": "CreateInstance",
            "FullActionName": "workdocs::CreateInstance"
          },
          {
            "ActionName": "CreateLabels",
            "FullActionName": "workdocs::CreateLabels"
          },
          {
            "ActionName": "CreateNotificationSubscription",
            "FullActionName": "workdocs::CreateNotificationSubscription"
          },
          {
            "ActionName": "CreateUser",
            "FullActionName": "workdocs::CreateUser"
          },
          {
            "ActionName": "DeactivateUser",
            "FullActionName": "workdocs::DeactivateUser"
          },
          {
            "ActionName": "DeleteComment",
            "FullActionName": "workdocs::DeleteComment"
          },
          {
            "ActionName": "DeleteCustomMetadata",
            "FullActionName": "workdocs::DeleteCustomMetadata"
          },
          {
            "ActionName": "DeleteDocument",
            "FullActionName": "workdocs::DeleteDocument"
          },
          {
            "ActionName": "DeleteFolder",
            "FullActionName": "workdocs::DeleteFolder"
          },
          {
            "ActionName": "DeleteFolderContents",
            "FullActionName": "workdocs::DeleteFolderContents"
          },
          {
            "ActionName": "DeleteInstance",
            "FullActionName": "workdocs::DeleteInstance"
          },
          {
            "ActionName": "DeleteLabels",
            "FullActionName": "workdocs::DeleteLabels"
          },
          {
            "ActionName": "DeleteNotificationSubscription",
            "FullActionName": "workdocs::DeleteNotificationSubscription"
          },
          {
            "ActionName": "DeleteUser",
            "FullActionName": "workdocs::DeleteUser"
          },
          {
            "ActionName": "DeregisterDirectory",
            "FullActionName": "workdocs::DeregisterDirectory"
          },
          {
            "ActionName": "InitiateDocumentVersionUpload",
            "FullActionName": "workdocs::InitiateDocumentVersionUpload"
          },
          {
            "ActionName": "RegisterDirectory",
            "FullActionName": "workdocs::RegisterDirectory"
          },
          {
            "ActionName": "RemoveAllResourcePermissions",
            "FullActionName": "workdocs::RemoveAllResourcePermissions"
          },
          {
            "ActionName": "RemoveResourcePermission",
            "FullActionName": "workdocs::RemoveResourcePermission"
          },
          {
            "ActionName": "UpdateDocument",
            "FullActionName": "workdocs::UpdateDocument"
          },
          {
            "ActionName": "UpdateDocumentVersion",
            "FullActionName": "workdocs::UpdateDocumentVersion"
          },
          {
            "ActionName": "UpdateFolder",
            "FullActionName": "workdocs::UpdateFolder"
          },
          {
            "ActionName": "UpdateInstanceAlias",
            "FullActionName": "workdocs::UpdateInstanceAlias"
          },
          {
            "ActionName": "UpdateUser",
            "FullActionName": "workdocs::UpdateUser"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "CheckAlias",
            "FullActionName": "workdocs::CheckAlias"
          },
          {
            "ActionName": "DownloadDocumentVersion",
            "FullActionName": "workdocs::DownloadDocumentVersion"
          },
          {
            "ActionName": "GetCurrentUser",
            "FullActionName": "workdocs::GetCurrentUser"
          },
          {
            "ActionName": "GetDocument",
            "FullActionName": "workdocs::GetDocument"
          },
          {
            "ActionName": "GetDocumentPath",
            "FullActionName": "workdocs::GetDocumentPath"
          },
          {
            "ActionName": "GetDocumentVersion",
            "FullActionName": "workdocs::GetDocumentVersion"
          },
          {
            "ActionName": "GetFolder",
            "FullActionName": "workdocs::GetFolder"
          },
          {
            "ActionName": "GetFolderPath",
            "FullActionName": "workdocs::GetFolderPath"
          },
          {
            "ActionName": "GetResources",
            "FullActionName": "workdocs::GetResources"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "DescribeActivities",
            "FullActionName": "workdocs::DescribeActivities"
          },
          {
            "ActionName": "DescribeAvailableDirectories",
            "FullActionName": "workdocs::DescribeAvailableDirectories"
          },
          {
            "ActionName": "DescribeComments",
            "FullActionName": "workdocs::DescribeComments"
          },
          {
            "ActionName": "DescribeDocumentVersions",
            "FullActionName": "workdocs::DescribeDocumentVersions"
          },
          {
            "ActionName": "DescribeFolderContents",
            "FullActionName": "workdocs::DescribeFolderContents"
          },
          {
            "ActionName": "DescribeGroups",
            "FullActionName": "workdocs::DescribeGroups"
          },
          {
            "ActionName": "DescribeInstances",
            "FullActionName": "workdocs::DescribeInstances"
          },
          {
            "ActionName": "DescribeNotificationSubscriptions",
            "FullActionName": "workdocs::DescribeNotificationSubscriptions"
          },
          {
            "ActionName": "DescribeResourcePermissions",
            "FullActionName": "workdocs::DescribeResourcePermissions"
          },
          {
            "ActionName": "DescribeRootFolders",
            "FullActionName": "workdocs::DescribeRootFolders"
          },
          {
            "ActionName": "DescribeUsers",
            "FullActionName": "workdocs::DescribeUsers"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "WorkLink",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "AssociateDomain",
            "FullActionName": "worklink::AssociateDomain"
          },
          {
            "ActionName": "AssociateWebsiteAuthorizationProvider",
            "FullActionName": "worklink::AssociateWebsiteAuthorizationProvider"
          },
          {
            "ActionName": "AssociateWebsiteCertificateAuthority",
            "FullActionName": "worklink::AssociateWebsiteCertificateAuthority"
          },
          {
            "ActionName": "CreateFleet",
            "FullActionName": "worklink::CreateFleet"
          },
          {
            "ActionName": "DeleteFleet",
            "FullActionName": "worklink::DeleteFleet"
          },
          {
            "ActionName": "DisassociateDomain",
            "FullActionName": "worklink::DisassociateDomain"
          },
          {
            "ActionName": "DisassociateWebsiteAuthorizationProvider",
            "FullActionName": "worklink::DisassociateWebsiteAuthorizationProvider"
          },
          {
            "ActionName": "DisassociateWebsiteCertificateAuthority",
            "FullActionName": "worklink::DisassociateWebsiteCertificateAuthority"
          },
          {
            "ActionName": "RestoreDomainAccess",
            "FullActionName": "worklink::RestoreDomainAccess"
          },
          {
            "ActionName": "RevokeDomainAccess",
            "FullActionName": "worklink::RevokeDomainAccess"
          },
          {
            "ActionName": "SignOutUser",
            "FullActionName": "worklink::SignOutUser"
          },
          {
            "ActionName": "UpdateAuditStreamConfiguration",
            "FullActionName": "worklink::UpdateAuditStreamConfiguration"
          },
          {
            "ActionName": "UpdateCompanyNetworkConfiguration",
            "FullActionName": "worklink::UpdateCompanyNetworkConfiguration"
          },
          {
            "ActionName": "UpdateDevicePolicyConfiguration",
            "FullActionName": "worklink::UpdateDevicePolicyConfiguration"
          },
          {
            "ActionName": "UpdateDomainMetadata",
            "FullActionName": "worklink::UpdateDomainMetadata"
          },
          {
            "ActionName": "UpdateFleetMetadata",
            "FullActionName": "worklink::UpdateFleetMetadata"
          },
          {
            "ActionName": "UpdateIdentityProviderConfiguration",
            "FullActionName": "worklink::UpdateIdentityProviderConfiguration"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeAuditStreamConfiguration",
            "FullActionName": "worklink::DescribeAuditStreamConfiguration"
          },
          {
            "ActionName": "DescribeCompanyNetworkConfiguration",
            "FullActionName": "worklink::DescribeCompanyNetworkConfiguration"
          },
          {
            "ActionName": "DescribeDevice",
            "FullActionName": "worklink::DescribeDevice"
          },
          {
            "ActionName": "DescribeDevicePolicyConfiguration",
            "FullActionName": "worklink::DescribeDevicePolicyConfiguration"
          },
          {
            "ActionName": "DescribeDomain",
            "FullActionName": "worklink::DescribeDomain"
          },
          {
            "ActionName": "DescribeFleetMetadata",
            "FullActionName": "worklink::DescribeFleetMetadata"
          },
          {
            "ActionName": "DescribeIdentityProviderConfiguration",
            "FullActionName": "worklink::DescribeIdentityProviderConfiguration"
          },
          {
            "ActionName": "DescribeWebsiteCertificateAuthority",
            "FullActionName": "worklink::DescribeWebsiteCertificateAuthority"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "ListDevices",
            "FullActionName": "worklink::ListDevices"
          },
          {
            "ActionName": "ListDomains",
            "FullActionName": "worklink::ListDomains"
          },
          {
            "ActionName": "ListFleets",
            "FullActionName": "worklink::ListFleets"
          },
          {
            "ActionName": "ListWebsiteAuthorizationProviders",
            "FullActionName": "worklink::ListWebsiteAuthorizationProviders"
          },
          {
            "ActionName": "ListWebsiteCertificateAuthorities",
            "FullActionName": "worklink::ListWebsiteCertificateAuthorities"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "WorkMail",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "AddMembersToGroup",
            "FullActionName": "workmail::AddMembersToGroup"
          },
          {
            "ActionName": "AssociateDelegateToResource",
            "FullActionName": "workmail::AssociateDelegateToResource"
          },
          {
            "ActionName": "AssociateMemberToGroup",
            "FullActionName": "workmail::AssociateMemberToGroup"
          },
          {
            "ActionName": "CreateAlias",
            "FullActionName": "workmail::CreateAlias"
          },
          {
            "ActionName": "CreateGroup",
            "FullActionName": "workmail::CreateGroup"
          },
          {
            "ActionName": "CreateInboundMailFlowRule",
            "FullActionName": "workmail::CreateInboundMailFlowRule"
          },
          {
            "ActionName": "CreateMailDomain",
            "FullActionName": "workmail::CreateMailDomain"
          },
          {
            "ActionName": "CreateMailUser",
            "FullActionName": "workmail::CreateMailUser"
          },
          {
            "ActionName": "CreateOrganization",
            "FullActionName": "workmail::CreateOrganization"
          },
          {
            "ActionName": "CreateOutboundMailFlowRule",
            "FullActionName": "workmail::CreateOutboundMailFlowRule"
          },
          {
            "ActionName": "CreateResource",
            "FullActionName": "workmail::CreateResource"
          },
          {
            "ActionName": "CreateSmtpGateway",
            "FullActionName": "workmail::CreateSmtpGateway"
          },
          {
            "ActionName": "CreateUser",
            "FullActionName": "workmail::CreateUser"
          },
          {
            "ActionName": "DeleteAlias",
            "FullActionName": "workmail::DeleteAlias"
          },
          {
            "ActionName": "DeleteGroup",
            "FullActionName": "workmail::DeleteGroup"
          },
          {
            "ActionName": "DeleteInboundMailFlowRule",
            "FullActionName": "workmail::DeleteInboundMailFlowRule"
          },
          {
            "ActionName": "DeleteMailDomain",
            "FullActionName": "workmail::DeleteMailDomain"
          },
          {
            "ActionName": "DeleteMailboxPermissions",
            "FullActionName": "workmail::DeleteMailboxPermissions"
          },
          {
            "ActionName": "DeleteMobileDevice",
            "FullActionName": "workmail::DeleteMobileDevice"
          },
          {
            "ActionName": "DeleteOrganization",
            "FullActionName": "workmail::DeleteOrganization"
          },
          {
            "ActionName": "DeleteOutboundMailFlowRule",
            "FullActionName": "workmail::DeleteOutboundMailFlowRule"
          },
          {
            "ActionName": "DeleteResource",
            "FullActionName": "workmail::DeleteResource"
          },
          {
            "ActionName": "DeleteSmtpGateway",
            "FullActionName": "workmail::DeleteSmtpGateway"
          },
          {
            "ActionName": "DeleteUser",
            "FullActionName": "workmail::DeleteUser"
          },
          {
            "ActionName": "DeregisterFromWorkMail",
            "FullActionName": "workmail::DeregisterFromWorkMail"
          },
          {
            "ActionName": "DisableMailGroups",
            "FullActionName": "workmail::DisableMailGroups"
          },
          {
            "ActionName": "DisableMailUsers",
            "FullActionName": "workmail::DisableMailUsers"
          },
          {
            "ActionName": "DisassociateDelegateFromResource",
            "FullActionName": "workmail::DisassociateDelegateFromResource"
          },
          {
            "ActionName": "DisassociateMemberFromGroup",
            "FullActionName": "workmail::DisassociateMemberFromGroup"
          },
          {
            "ActionName": "EnableMailDomain",
            "FullActionName": "workmail::EnableMailDomain"
          },
          {
            "ActionName": "EnableMailGroups",
            "FullActionName": "workmail::EnableMailGroups"
          },
          {
            "ActionName": "EnableMailUsers",
            "FullActionName": "workmail::EnableMailUsers"
          },
          {
            "ActionName": "PutMailboxPermissions",
            "FullActionName": "workmail::PutMailboxPermissions"
          },
          {
            "ActionName": "RegisterToWorkMail",
            "FullActionName": "workmail::RegisterToWorkMail"
          },
          {
            "ActionName": "RemoveMembersFromGroup",
            "FullActionName": "workmail::RemoveMembersFromGroup"
          },
          {
            "ActionName": "ResetPassword",
            "FullActionName": "workmail::ResetPassword"
          },
          {
            "ActionName": "ResetUserPassword",
            "FullActionName": "workmail::ResetUserPassword"
          },
          {
            "ActionName": "SetAdmin",
            "FullActionName": "workmail::SetAdmin"
          },
          {
            "ActionName": "SetDefaultMailDomain",
            "FullActionName": "workmail::SetDefaultMailDomain"
          },
          {
            "ActionName": "SetJournalingRules",
            "FullActionName": "workmail::SetJournalingRules"
          },
          {
            "ActionName": "SetMailGroupDetails",
            "FullActionName": "workmail::SetMailGroupDetails"
          },
          {
            "ActionName": "SetMailUserDetails",
            "FullActionName": "workmail::SetMailUserDetails"
          },
          {
            "ActionName": "SetMobilePolicyDetails",
            "FullActionName": "workmail::SetMobilePolicyDetails"
          },
          {
            "ActionName": "TestInboundMailFlowRules",
            "FullActionName": "workmail::TestInboundMailFlowRules"
          },
          {
            "ActionName": "TestOutboundMailFlowRules",
            "FullActionName": "workmail::TestOutboundMailFlowRules"
          },
          {
            "ActionName": "UpdateInboundMailFlowRule",
            "FullActionName": "workmail::UpdateInboundMailFlowRule"
          },
          {
            "ActionName": "UpdateMailboxQuota",
            "FullActionName": "workmail::UpdateMailboxQuota"
          },
          {
            "ActionName": "UpdateOutboundMailFlowRule",
            "FullActionName": "workmail::UpdateOutboundMailFlowRule"
          },
          {
            "ActionName": "UpdatePrimaryEmailAddress",
            "FullActionName": "workmail::UpdatePrimaryEmailAddress"
          },
          {
            "ActionName": "UpdateResource",
            "FullActionName": "workmail::UpdateResource"
          },
          {
            "ActionName": "UpdateSmtpGateway",
            "FullActionName": "workmail::UpdateSmtpGateway"
          },
          {
            "ActionName": "WipeMobileDevice",
            "FullActionName": "workmail::WipeMobileDevice"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "DescribeDirectories",
            "FullActionName": "workmail::DescribeDirectories"
          },
          {
            "ActionName": "DescribeGroup",
            "FullActionName": "workmail::DescribeGroup"
          },
          {
            "ActionName": "DescribeKmsKeys",
            "FullActionName": "workmail::DescribeKmsKeys"
          },
          {
            "ActionName": "DescribeMailDomains",
            "FullActionName": "workmail::DescribeMailDomains"
          },
          {
            "ActionName": "DescribeMailGroups",
            "FullActionName": "workmail::DescribeMailGroups"
          },
          {
            "ActionName": "DescribeMailUsers",
            "FullActionName": "workmail::DescribeMailUsers"
          },
          {
            "ActionName": "DescribeOrganization",
            "FullActionName": "workmail::DescribeOrganization"
          },
          {
            "ActionName": "DescribeOrganizations",
            "FullActionName": "workmail::DescribeOrganizations"
          },
          {
            "ActionName": "DescribeResource",
            "FullActionName": "workmail::DescribeResource"
          },
          {
            "ActionName": "DescribeUser",
            "FullActionName": "workmail::DescribeUser"
          },
          {
            "ActionName": "ListAliases",
            "FullActionName": "workmail::ListAliases"
          },
          {
            "ActionName": "ListGroupMembers",
            "FullActionName": "workmail::ListGroupMembers"
          },
          {
            "ActionName": "ListGroups",
            "FullActionName": "workmail::ListGroups"
          },
          {
            "ActionName": "ListInboundMailFlowRules",
            "FullActionName": "workmail::ListInboundMailFlowRules"
          },
          {
            "ActionName": "ListMailboxPermissions",
            "FullActionName": "workmail::ListMailboxPermissions"
          },
          {
            "ActionName": "ListOrganizations",
            "FullActionName": "workmail::ListOrganizations"
          },
          {
            "ActionName": "ListOutboundMailFlowRules",
            "FullActionName": "workmail::ListOutboundMailFlowRules"
          },
          {
            "ActionName": "ListResourceDelegates",
            "FullActionName": "workmail::ListResourceDelegates"
          },
          {
            "ActionName": "ListResources",
            "FullActionName": "workmail::ListResources"
          },
          {
            "ActionName": "ListSmtpGateways",
            "FullActionName": "workmail::ListSmtpGateways"
          },
          {
            "ActionName": "ListUsers",
            "FullActionName": "workmail::ListUsers"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeInboundMailFlowRule",
            "FullActionName": "workmail::DescribeInboundMailFlowRule"
          },
          {
            "ActionName": "DescribeOutboundMailFlowRule",
            "FullActionName": "workmail::DescribeOutboundMailFlowRule"
          },
          {
            "ActionName": "DescribeSmtpGateway",
            "FullActionName": "workmail::DescribeSmtpGateway"
          },
          {
            "ActionName": "GetJournalingRules",
            "FullActionName": "workmail::GetJournalingRules"
          },
          {
            "ActionName": "GetMailDomainDetails",
            "FullActionName": "workmail::GetMailDomainDetails"
          },
          {
            "ActionName": "GetMailGroupDetails",
            "FullActionName": "workmail::GetMailGroupDetails"
          },
          {
            "ActionName": "GetMailUserDetails",
            "FullActionName": "workmail::GetMailUserDetails"
          },
          {
            "ActionName": "GetMailboxDetails",
            "FullActionName": "workmail::GetMailboxDetails"
          },
          {
            "ActionName": "GetMobileDeviceDetails",
            "FullActionName": "workmail::GetMobileDeviceDetails"
          },
          {
            "ActionName": "GetMobileDevicesForUser",
            "FullActionName": "workmail::GetMobileDevicesForUser"
          },
          {
            "ActionName": "GetMobilePolicyDetails",
            "FullActionName": "workmail::GetMobilePolicyDetails"
          },
          {
            "ActionName": "ListMembersInMailGroup",
            "FullActionName": "workmail::ListMembersInMailGroup"
          },
          {
            "ActionName": "SearchMembers",
            "FullActionName": "workmail::SearchMembers"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "WorkMail Message Flow",
    "AccessLevels": [
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "GetRawMessageContent",
            "FullActionName": "workmailmessageflow::GetRawMessageContent"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "WorkSpaces",
    "AccessLevels": [
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "AssociateIpGroups",
            "FullActionName": "workspaces::AssociateIpGroups"
          },
          {
            "ActionName": "AuthorizeIpRules",
            "FullActionName": "workspaces::AuthorizeIpRules"
          },
          {
            "ActionName": "CreateIpGroup",
            "FullActionName": "workspaces::CreateIpGroup"
          },
          {
            "ActionName": "CreateWorkspaces",
            "FullActionName": "workspaces::CreateWorkspaces"
          },
          {
            "ActionName": "DeleteIpGroup",
            "FullActionName": "workspaces::DeleteIpGroup"
          },
          {
            "ActionName": "DeleteTags",
            "FullActionName": "workspaces::DeleteTags"
          },
          {
            "ActionName": "DeleteWorkspaceImage",
            "FullActionName": "workspaces::DeleteWorkspaceImage"
          },
          {
            "ActionName": "DisassociateIpGroups",
            "FullActionName": "workspaces::DisassociateIpGroups"
          },
          {
            "ActionName": "ImportWorkspaceImage",
            "FullActionName": "workspaces::ImportWorkspaceImage"
          },
          {
            "ActionName": "ModifyAccount",
            "FullActionName": "workspaces::ModifyAccount"
          },
          {
            "ActionName": "ModifyClientProperties",
            "FullActionName": "workspaces::ModifyClientProperties"
          },
          {
            "ActionName": "ModifyWorkspaceProperties",
            "FullActionName": "workspaces::ModifyWorkspaceProperties"
          },
          {
            "ActionName": "ModifyWorkspaceState",
            "FullActionName": "workspaces::ModifyWorkspaceState"
          },
          {
            "ActionName": "RebootWorkspaces",
            "FullActionName": "workspaces::RebootWorkspaces"
          },
          {
            "ActionName": "RebuildWorkspaces",
            "FullActionName": "workspaces::RebuildWorkspaces"
          },
          {
            "ActionName": "RevokeIpRules",
            "FullActionName": "workspaces::RevokeIpRules"
          },
          {
            "ActionName": "StartWorkspaces",
            "FullActionName": "workspaces::StartWorkspaces"
          },
          {
            "ActionName": "StopWorkspaces",
            "FullActionName": "workspaces::StopWorkspaces"
          },
          {
            "ActionName": "TerminateWorkspaces",
            "FullActionName": "workspaces::TerminateWorkspaces"
          },
          {
            "ActionName": "UpdateRulesOfIpGroup",
            "FullActionName": "workspaces::UpdateRulesOfIpGroup"
          }
        ]
      },
      {
        "AccessLevel": "Tagging",
        "Actions": [
          {
            "ActionName": "CreateTags",
            "FullActionName": "workspaces::CreateTags"
          }
        ]
      },
      {
        "AccessLevel": "List",
        "Actions": [
          {
            "ActionName": "DescribeAccount",
            "FullActionName": "workspaces::DescribeAccount"
          },
          {
            "ActionName": "DescribeAccountModifications",
            "FullActionName": "workspaces::DescribeAccountModifications"
          },
          {
            "ActionName": "DescribeClientProperties",
            "FullActionName": "workspaces::DescribeClientProperties"
          },
          {
            "ActionName": "DescribeIpGroups",
            "FullActionName": "workspaces::DescribeIpGroups"
          },
          {
            "ActionName": "DescribeTags",
            "FullActionName": "workspaces::DescribeTags"
          },
          {
            "ActionName": "DescribeWorkspaceBundles",
            "FullActionName": "workspaces::DescribeWorkspaceBundles"
          },
          {
            "ActionName": "DescribeWorkspaceDirectories",
            "FullActionName": "workspaces::DescribeWorkspaceDirectories"
          },
          {
            "ActionName": "DescribeWorkspaceImages",
            "FullActionName": "workspaces::DescribeWorkspaceImages"
          },
          {
            "ActionName": "DescribeWorkspaces",
            "FullActionName": "workspaces::DescribeWorkspaces"
          },
          {
            "ActionName": "ListAvailableManagementCidrRanges",
            "FullActionName": "workspaces::ListAvailableManagementCidrRanges"
          }
        ]
      },
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "DescribeWorkspacesConnectionStatus",
            "FullActionName": "workspaces::DescribeWorkspacesConnectionStatus"
          }
        ]
      }
    ]
  },
  {
    "ServiceName": "X-Ray",
    "AccessLevels": [
      {
        "AccessLevel": "Read",
        "Actions": [
          {
            "ActionName": "BatchGetTraces",
            "FullActionName": "xray::BatchGetTraces"
          },
          {
            "ActionName": "GetGroup",
            "FullActionName": "xray::GetGroup"
          },
          {
            "ActionName": "GetGroups",
            "FullActionName": "xray::GetGroups"
          },
          {
            "ActionName": "GetSamplingRules",
            "FullActionName": "xray::GetSamplingRules"
          },
          {
            "ActionName": "GetSamplingStatisticSummaries",
            "FullActionName": "xray::GetSamplingStatisticSummaries"
          },
          {
            "ActionName": "GetSamplingTargets",
            "FullActionName": "xray::GetSamplingTargets"
          },
          {
            "ActionName": "GetServiceGraph",
            "FullActionName": "xray::GetServiceGraph"
          },
          {
            "ActionName": "GetTimeSeriesServiceStatistics",
            "FullActionName": "xray::GetTimeSeriesServiceStatistics"
          },
          {
            "ActionName": "GetTraceGraph",
            "FullActionName": "xray::GetTraceGraph"
          },
          {
            "ActionName": "GetTraceSummaries",
            "FullActionName": "xray::GetTraceSummaries"
          }
        ]
      },
      {
        "AccessLevel": "Write",
        "Actions": [
          {
            "ActionName": "CreateGroup",
            "FullActionName": "xray::CreateGroup"
          },
          {
            "ActionName": "CreateSamplingRule",
            "FullActionName": "xray::CreateSamplingRule"
          },
          {
            "ActionName": "DeleteGroup",
            "FullActionName": "xray::DeleteGroup"
          },
          {
            "ActionName": "DeleteSamplingRule",
            "FullActionName": "xray::DeleteSamplingRule"
          },
          {
            "ActionName": "PutTelemetryRecords",
            "FullActionName": "xray::PutTelemetryRecords"
          },
          {
            "ActionName": "PutTraceSegments",
            "FullActionName": "xray::PutTraceSegments"
          },
          {
            "ActionName": "UpdateGroup",
            "FullActionName": "xray::UpdateGroup"
          },
          {
            "ActionName": "UpdateSamplingRule",
            "FullActionName": "xray::UpdateSamplingRule"
          }
        ]
      },
      {
        "AccessLevel": "Permissions",
        "Actions": [
          {
            "ActionName": "GetEncryptionConfig",
            "FullActionName": "xray::GetEncryptionConfig"
          },
          {
            "ActionName": "PutEncryptionConfig",
            "FullActionName": "xray::PutEncryptionConfig"
          }
        ]
      }
    ]
  }
]